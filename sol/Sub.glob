DIGEST aae421300e8f9de5e3a219caaf9b8330
FSub
R41:48 MoreStlc <> <> lib
ind 26530:26531 <> ty
constr 26547:26550 <> TTop
constr 26563:26567 <> TBool
constr 26579:26583 <> TBase
constr 26601:26606 <> TArrow
constr 26629:26633 <> TUnit
constr 26645:26649 <> TProd
R26556:26557 Sub <> ty ind
R26572:26573 Sub <> ty ind
R26594:26595 Sub <> ty ind
R26588:26589 SfLib <> id ind
R26622:26623 Sub <> ty ind
R26616:26617 Sub <> ty ind
R26610:26611 Sub <> ty ind
R26638:26639 Sub <> ty ind
R26665:26666 Sub <> ty ind
R26659:26660 Sub <> ty ind
R26653:26654 Sub <> ty ind
ind 26888:26889 <> tm
constr 26905:26908 <> tvar
constr 26925:26928 <> tapp
constr 26951:26954 <> tabs
constr 26983:26987 <> ttrue
constr 26998:27003 <> tfalse
constr 27014:27016 <> tif
constr 27045:27049 <> tunit
constr 27061:27065 <> tpair
constr 27088:27091 <> tfst
constr 27108:27111 <> tsnd
R26918:26919 Sub <> tm ind
R26912:26913 SfLib <> id ind
R26944:26945 Sub <> tm ind
R26938:26939 Sub <> tm ind
R26932:26933 Sub <> tm ind
R26976:26977 Sub <> tm ind
R26970:26971 Sub <> tm ind
R26964:26965 Sub <> ty ind
R26958:26959 SfLib <> id ind
R26991:26992 Sub <> tm ind
R27007:27008 Sub <> tm ind
R27038:27039 Sub <> tm ind
R27032:27033 Sub <> tm ind
R27026:27027 Sub <> tm ind
R27020:27021 Sub <> tm ind
R27053:27054 Sub <> tm ind
R27081:27082 Sub <> tm ind
R27075:27076 Sub <> tm ind
R27069:27070 Sub <> tm ind
R27101:27102 Sub <> tm ind
R27095:27096 Sub <> tm ind
R27121:27122 Sub <> tm ind
R27115:27116 Sub <> tm ind
def 27577:27581 <> subst
R27586:27587 SfLib <> id ind
R27593:27594 Sub <> tm ind
R27601:27602 Sub <> tm ind
R27607:27608 Sub <> tm ind
R27621:27621 Sub <> t var
R27632:27635 Sub <> tvar constr
R27652:27657 SfLib <> beq_id def
R27659:27659 Sub <> x var
R27675:27675 Sub <> t var
R27668:27668 Sub <> s var
R27681:27684 Sub <> tabs constr
R27703:27706 Sub <> tabs constr
R27716:27721 SfLib <> beq_id def
R27723:27723 Sub <> x var
R27741:27745 Sub <> subst def
R27749:27749 Sub <> s var
R27747:27747 Sub <> x var
R27760:27763 Sub <> tapp constr
R27781:27784 Sub <> tapp constr
R27802:27806 Sub <> subst def
R27810:27810 Sub <> s var
R27808:27808 Sub <> x var
R27787:27791 Sub <> subst def
R27795:27795 Sub <> s var
R27793:27793 Sub <> x var
R27820:27824 Sub <> ttrue constr
R27836:27840 Sub <> ttrue constr
R27846:27851 Sub <> tfalse constr
R27863:27868 Sub <> tfalse constr
R27874:27876 Sub <> tif constr
R27897:27899 Sub <> tif constr
R27932:27936 Sub <> subst def
R27940:27940 Sub <> s var
R27938:27938 Sub <> x var
R27917:27921 Sub <> subst def
R27925:27925 Sub <> s var
R27923:27923 Sub <> x var
R27902:27906 Sub <> subst def
R27910:27910 Sub <> s var
R27908:27908 Sub <> x var
R27950:27954 Sub <> tunit constr
R27966:27970 Sub <> tunit constr
R27977:27981 Sub <> tpair constr
R27999:28003 Sub <> tpair constr
R28021:28025 Sub <> subst def
R28029:28029 Sub <> s var
R28027:28027 Sub <> x var
R28006:28010 Sub <> subst def
R28014:28014 Sub <> s var
R28012:28012 Sub <> x var
R28039:28042 Sub <> tfst constr
R28056:28059 Sub <> tfst constr
R28062:28066 Sub <> subst def
R28072:28072 Sub <> t var
R28070:28070 Sub <> s var
R28068:28068 Sub <> x var
R28079:28082 Sub <> tsnd constr
R28096:28099 Sub <> tsnd constr
R28102:28106 Sub <> subst def
R28112:28112 Sub <> t var
R28110:28110 Sub <> s var
R28108:28108 Sub <> x var
R28157:28161 Sub <> subst def
not 28132 <> ::'['_x_':='_x_']'_x
ind 28346:28350 <> value
constr 28372:28376 <> v_abs
constr 28423:28428 <> v_true
constr 28455:28461 <> v_false
constr 28489:28494 <> v_unit
constr 28521:28526 <> v_pair
R28354:28355 Sub <> tm ind
R28400:28404 Sub <> value ind
R28407:28410 Sub <> tabs constr
R28416:28416 Sub <> t var
R28414:28414 Sub <> T var
R28412:28412 Sub <> x var
R28439:28443 Sub <> value ind
R28445:28449 Sub <> ttrue constr
R28472:28476 Sub <> value ind
R28478:28483 Sub <> tfalse constr
R28505:28509 Sub <> value ind
R28511:28515 Sub <> tunit constr
R28586:28590 Sub <> value ind
R28593:28597 Sub <> tpair constr
R28602:28603 Sub <> v2 var
R28599:28600 Sub <> v1 var
R28568:28572 Sub <> value ind
R28574:28575 Sub <> v2 var
R28550:28554 Sub <> value ind
R28556:28557 Sub <> v1 var
R28627:28631 Sub <> value ind
ind 28693:28696 <> step
constr 28724:28732 <> ST_AppAbs
constr 28829:28835 <> ST_App1
constr 28924:28930 <> ST_App2
constr 29041:29049 <> ST_IfTrue
constr 29102:29111 <> ST_IfFalse
constr 29165:29169 <> ST_If
constr 29259:29266 <> ST_Pair1
constr 29355:29362 <> ST_Pair2
constr 29471:29477 <> ST_Fst1
constr 29545:29554 <> ST_FstPair
constr 29652:29658 <> ST_Snd1
constr 29726:29735 <> ST_SndPair
R28706:28707 Sub <> tm ind
R28700:28701 Sub <> tm ind
R29852:29855 Sub <> step ind
R28785:28785 Sub <> ::x_'==>'_x not
R28808:28813 Sub <> ::x_'==>'_x not
R28786:28789 Sub <> tapp constr
R28806:28807 Sub <> v2 var
R28792:28795 Sub <> tabs constr
R28801:28803 Sub <> t12 var
R28799:28799 Sub <> T var
R28797:28797 Sub <> x var
R28814:28814 Sub <> ::'['_x_':='_x_']'_x not
R28816:28817 Sub <> ::'['_x_':='_x_']'_x not
R28820:28820 Sub <> ::'['_x_':='_x_']'_x not
R28815:28815 Sub <> x var
R28818:28819 Sub <> v2 var
R28821:28823 Sub <> t12 var
R28764:28768 Sub <> value ind
R28770:28771 Sub <> v2 var
R28889:28889 Sub <> ::x_'==>'_x not
R28900:28906 Sub <> ::x_'==>'_x not
R28918:28918 Sub <> ::x_'==>'_x not
R28890:28893 Sub <> tapp constr
R28898:28899 Sub <> t2 var
R28895:28896 Sub <> t1 var
R28907:28910 Sub <> tapp constr
R28916:28917 Sub <> t2 var
R28912:28914 Sub <> t1' var
R28868:28872 Sub <> ::x_'==>'_x not
R28866:28867 Sub <> t1 var
R28873:28875 Sub <> t1' var
R29005:29005 Sub <> ::x_'==>'_x not
R29016:29022 Sub <> ::x_'==>'_x not
R29035:29035 Sub <> ::x_'==>'_x not
R29006:29009 Sub <> tapp constr
R29014:29015 Sub <> t2 var
R29011:29012 Sub <> v1 var
R29023:29026 Sub <> tapp constr
R29032:29034 Sub <> t2' var
R29028:29029 Sub <> v1 var
R28984:28988 Sub <> ::x_'==>'_x not
R28982:28983 Sub <> t2 var
R28989:28991 Sub <> t2' var
R28961:28965 Sub <> value ind
R28967:28968 Sub <> v1 var
R29073:29073 Sub <> ::x_'==>'_x not
R29089:29094 Sub <> ::x_'==>'_x not
R29074:29076 Sub <> tif constr
R29087:29088 Sub <> t2 var
R29084:29085 Sub <> t1 var
R29078:29082 Sub <> ttrue constr
R29095:29096 Sub <> t1 var
R29135:29135 Sub <> ::x_'==>'_x not
R29152:29157 Sub <> ::x_'==>'_x not
R29136:29138 Sub <> tif constr
R29150:29151 Sub <> t2 var
R29147:29148 Sub <> t1 var
R29140:29145 Sub <> tfalse constr
R29158:29159 Sub <> t2 var
R29220:29220 Sub <> ::x_'==>'_x not
R29233:29239 Sub <> ::x_'==>'_x not
R29253:29253 Sub <> ::x_'==>'_x not
R29221:29223 Sub <> tif constr
R29231:29232 Sub <> t3 var
R29228:29229 Sub <> t2 var
R29225:29226 Sub <> t1 var
R29240:29242 Sub <> tif constr
R29251:29252 Sub <> t3 var
R29248:29249 Sub <> t2 var
R29244:29246 Sub <> t1' var
R29202:29206 Sub <> ::x_'==>'_x not
R29200:29201 Sub <> t1 var
R29207:29209 Sub <> t1' var
R29318:29318 Sub <> ::x_'==>'_x not
R29330:29336 Sub <> ::x_'==>'_x not
R29349:29349 Sub <> ::x_'==>'_x not
R29319:29323 Sub <> tpair constr
R29328:29329 Sub <> t2 var
R29325:29326 Sub <> t1 var
R29337:29341 Sub <> tpair constr
R29347:29348 Sub <> t2 var
R29343:29345 Sub <> t1' var
R29298:29302 Sub <> ::x_'==>'_x not
R29296:29297 Sub <> t1 var
R29303:29305 Sub <> t1' var
R29434:29434 Sub <> ::x_'==>'_x not
R29446:29452 Sub <> ::x_'==>'_x not
R29465:29465 Sub <> ::x_'==>'_x not
R29435:29439 Sub <> tpair constr
R29444:29445 Sub <> t2 var
R29441:29442 Sub <> v1 var
R29453:29457 Sub <> tpair constr
R29462:29464 Sub <> t2' var
R29459:29460 Sub <> v1 var
R29414:29418 Sub <> ::x_'==>'_x not
R29412:29413 Sub <> t2 var
R29419:29421 Sub <> t2' var
R29392:29396 Sub <> value ind
R29398:29399 Sub <> v1 var
R29528:29532 Sub <> ::x_'==>'_x not
R29522:29525 Sub <> tfst constr
R29527:29527 Sub <> t var
R29533:29536 Sub <> tfst constr
R29538:29539 Sub <> t' var
R29503:29507 Sub <> ::x_'==>'_x not
R29502:29502 Sub <> t var
R29508:29509 Sub <> t' var
R29620:29620 Sub <> ::x_'==>'_x not
R29639:29644 Sub <> ::x_'==>'_x not
R29621:29624 Sub <> tfst constr
R29627:29631 Sub <> tpair constr
R29636:29637 Sub <> v2 var
R29633:29634 Sub <> v1 var
R29645:29646 Sub <> v1 var
R29600:29604 Sub <> value ind
R29606:29607 Sub <> v2 var
R29580:29584 Sub <> value ind
R29586:29587 Sub <> v1 var
R29709:29713 Sub <> ::x_'==>'_x not
R29703:29706 Sub <> tsnd constr
R29708:29708 Sub <> t var
R29714:29717 Sub <> tsnd constr
R29719:29720 Sub <> t' var
R29684:29688 Sub <> ::x_'==>'_x not
R29683:29683 Sub <> t var
R29689:29690 Sub <> t' var
R29819:29823 Sub <> ::x_'==>'_x not
R29801:29804 Sub <> tsnd constr
R29807:29811 Sub <> tpair constr
R29816:29817 Sub <> v2 var
R29813:29814 Sub <> v1 var
R29824:29825 Sub <> v2 var
R29781:29785 Sub <> value ind
R29787:29788 Sub <> v2 var
R29761:29765 Sub <> value ind
R29767:29768 Sub <> v1 var
R29852:29855 Sub <> step ind
not 29834 <> ::x_'==>'_x
R30263:30266 Sub <> step ind
ind 30680:30686 <> subtype
constr 30714:30719 <> S_Refl
constr 30748:30754 <> S_Trans
constr 30815:30819 <> S_Top
constr 30851:30857 <> S_Arrow
constr 30954:30959 <> S_Prod
R30696:30697 Sub <> ty ind
R30690:30691 Sub <> ty ind
R31071:31077 Sub <> subtype ind
R30738:30741 Sub <> ::x_'<:'_x not
R30737:30737 Sub <> T var
R30742:30742 Sub <> T var
R30805:30808 Sub <> ::x_'<:'_x not
R30804:30804 Sub <> S var
R30809:30809 Sub <> T var
R30791:30794 Sub <> ::x_'<:'_x not
R30790:30790 Sub <> U var
R30795:30795 Sub <> T var
R30777:30780 Sub <> ::x_'<:'_x not
R30776:30776 Sub <> S var
R30781:30781 Sub <> U var
R30838:30841 Sub <> ::x_'<:'_x not
R30837:30837 Sub <> S var
R30842:30845 Sub <> TTop constr
R30917:30917 Sub <> ::x_'<:'_x not
R30930:30935 Sub <> ::x_'<:'_x not
R30948:30948 Sub <> ::x_'<:'_x not
R30918:30923 Sub <> TArrow constr
R30928:30929 Sub <> S2 var
R30925:30926 Sub <> S1 var
R30936:30941 Sub <> TArrow constr
R30946:30947 Sub <> T2 var
R30943:30944 Sub <> T1 var
R30903:30906 Sub <> ::x_'<:'_x not
R30901:30902 Sub <> S2 var
R30907:30908 Sub <> T2 var
R30887:30890 Sub <> ::x_'<:'_x not
R30885:30886 Sub <> T1 var
R30891:30892 Sub <> S1 var
R31019:31019 Sub <> ::x_'<:'_x not
R31031:31036 Sub <> ::x_'<:'_x not
R31048:31048 Sub <> ::x_'<:'_x not
R31020:31024 Sub <> TProd constr
R31029:31030 Sub <> S2 var
R31026:31027 Sub <> S1 var
R31037:31041 Sub <> TProd constr
R31046:31047 Sub <> T2 var
R31043:31044 Sub <> T1 var
R31005:31008 Sub <> ::x_'<:'_x not
R31003:31004 Sub <> S2 var
R31009:31010 Sub <> T2 var
R30989:30992 Sub <> ::x_'<:'_x not
R30987:30988 Sub <> S1 var
R30993:30994 Sub <> T1 var
R31071:31077 Sub <> subtype ind
not 31056 <> ::x_'<:'_x
R31286:31292 Sub <> subtype ind
mod 31497:31504 <> Examples
syndef 31517:31517 Examples x
R31523:31524 SfLib <> Id constr
syndef 31539:31539 Examples y
R31545:31546 SfLib <> Id constr
syndef 31561:31561 Examples z
R31567:31568 SfLib <> Id constr
syndef 31584:31584 Examples A
R31590:31594 Sub Examples TBase constr
R31597:31598 SfLib <> Id constr
syndef 31614:31614 Examples B
R31620:31624 Sub Examples TBase constr
R31627:31628 SfLib <> Id constr
syndef 31644:31644 Examples C
R31650:31654 Sub Examples TBase constr
R31657:31658 SfLib <> Id constr
syndef 31675:31680 Examples String
R31686:31690 Sub Examples TBase constr
R31693:31694 SfLib <> Id constr
syndef 31710:31714 Examples Float
R31720:31724 Sub Examples TBase constr
R31727:31728 SfLib <> Id constr
syndef 31745:31751 Examples Integer
R31757:31761 Sub Examples TBase constr
R31764:31765 SfLib <> Id constr
def 32241:32246 Examples Person
R32250:32251 Sub Examples ty ind
R32275:32279 Sub Examples TProd constr
R32288:32291 Sub Examples TTop constr
R32281:32286 Sub Examples String syndef
def 32305:32311 Examples Student
R32315:32316 Sub Examples ty ind
R32340:32344 Sub Examples TProd constr
R32354:32358 Sub Examples TProd constr
R32365:32369 Sub Examples Float syndef
R32360:32363 Sub Examples TTop constr
R32346:32351 Sub Examples String syndef
def 32384:32391 Examples Employee
R32395:32396 Sub Examples ty ind
R32420:32424 Sub Examples TProd constr
R32434:32438 Sub Examples TProd constr
R32448:32451 Sub Examples TTop constr
R32440:32446 Sub Examples Integer syndef
R32426:32431 Sub Examples String syndef
def 32464:32481 Examples sub_student_person
R32494:32497 Sub <> ::x_'<:'_x not
R32487:32493 Sub Examples Student def
R32498:32503 Sub Examples Person def
R32539:32545 Sub Examples Student def
R32555:32560 Sub Examples Person def
def 32589:32607 Examples sub_employee_person
R32621:32624 Sub <> ::x_'<:'_x not
R32613:32620 Sub Examples Employee def
R32625:32630 Sub Examples Person def
R32666:32673 Sub Examples Employee def
R32683:32688 Sub Examples Person def
def 32727:32745 Examples subtyping_example_0
R32751:32751 Sub <> ::x_'<:'_x not
R32767:32772 Sub <> ::x_'<:'_x not
R32786:32786 Sub <> ::x_'<:'_x not
R32752:32757 Sub Examples TArrow constr
R32761:32766 Sub Examples Person def
R32759:32759 Sub Examples C syndef
R32773:32778 Sub Examples TArrow constr
R32782:32785 Sub Examples TTop constr
R32780:32780 Sub Examples C syndef
R32830:32836 Sub Examples S_Arrow constr
R32830:32836 Sub Examples S_Arrow constr
R32849:32854 Sub Examples S_Refl constr
R32849:32854 Sub Examples S_Refl constr
def 33106:33124 Examples subtyping_example_1
R33130:33130 Sub <> ::x_'<:'_x not
R33150:33155 Sub <> ::x_'<:'_x not
R33182:33182 Sub <> ::x_'<:'_x not
R33131:33136 Sub Examples TArrow constr
R33143:33149 Sub Examples Student def
R33138:33141 Sub Examples TTop constr
R33156:33161 Sub Examples TArrow constr
R33176:33181 Sub Examples Person def
R33164:33169 Sub Examples TArrow constr
R33173:33173 Sub Examples C syndef
R33171:33171 Sub Examples C syndef
R33266:33272 Sub Examples S_Arrow constr
R33266:33272 Sub Examples S_Arrow constr
def 33366:33384 Examples subtyping_example_2
R33390:33390 Sub <> ::x_'<:'_x not
R33409:33414 Sub <> ::x_'<:'_x not
R33433:33433 Sub <> ::x_'<:'_x not
R33391:33396 Sub Examples TArrow constr
R33403:33408 Sub Examples Person def
R33398:33401 Sub Examples TTop constr
R33415:33420 Sub Examples TArrow constr
R33429:33432 Sub Examples TTop constr
R33422:33427 Sub Examples Person def
R33513:33519 Sub Examples S_Arrow constr
R33513:33519 Sub Examples S_Arrow constr
R33544:33551 Sub <> <> mod
def 33766:33772 <> context
R33784:33789 Coq.Init.Datatypes <> option ind
R33791:33792 Sub <> ty ind
R33777:33778 SfLib <> id ind
def 33807:33811 <> empty
R33815:33821 Sub <> context def
R33836:33839 Coq.Init.Datatypes <> None constr
def 33855:33860 <> extend
R33871:33877 Sub <> context def
R33883:33884 SfLib <> id ind
R33892:33893 Sub <> ty ind
R33914:33919 SfLib <> beq_id def
R33923:33924 Sub <> x' var
R33921:33921 Sub <> x var
R33943:33947 Sub <> Gamma var
R33949:33950 Sub <> x' var
R33931:33934 Coq.Init.Datatypes <> Some constr
R33936:33936 Sub <> T var
ind 34021:34028 <> has_type
constr 34090:34094 <> T_Var
constr 34176:34180 <> T_Abs
constr 34315:34319 <> T_App
constr 34458:34463 <> T_True
constr 34517:34523 <> T_False
constr 34578:34581 <> T_If
constr 34739:34744 <> T_Unit
constr 34797:34802 <> T_Pair
constr 34939:34943 <> T_Fst
constr 35042:35046 <> T_Snd
constr 35177:35181 <> T_Sub
R34049:34050 Sub <> ty ind
R34043:34044 Sub <> tm ind
R34032:34038 Sub <> context def
R35304:35311 Sub <> has_type ind
R34153:34157 Sub <> ::x_'|-'_x_'\in'_x not
R34164:34169 Sub <> ::x_'|-'_x_'\in'_x not
R34148:34152 Sub <> Gamma var
R34158:34161 Sub <> tvar constr
R34163:34163 Sub <> x var
R34170:34170 Sub <> T var
R34129:34131 Coq.Init.Logic <> :type_scope:x_'='_x not
R34122:34126 Sub <> Gamma var
R34128:34128 Sub <> x var
R34132:34135 Coq.Init.Datatypes <> Some constr
R34137:34137 Sub <> T var
R34269:34273 Sub <> ::x_'|-'_x_'\in'_x not
R34288:34294 Sub <> ::x_'|-'_x_'\in'_x not
R34309:34309 Sub <> ::x_'|-'_x_'\in'_x not
R34264:34268 Sub <> Gamma var
R34274:34277 Sub <> tabs constr
R34285:34287 Sub <> t12 var
R34281:34283 Sub <> T11 var
R34279:34279 Sub <> x var
R34295:34300 Sub <> TArrow constr
R34306:34308 Sub <> T12 var
R34302:34304 Sub <> T11 var
R34218:34218 Sub <> ::x_'|-'_x_'\in'_x not
R34237:34241 Sub <> ::x_'|-'_x_'\in'_x not
R34245:34249 Sub <> ::x_'|-'_x_'\in'_x not
R34219:34224 Sub <> extend def
R34234:34236 Sub <> T11 var
R34232:34232 Sub <> x var
R34226:34230 Sub <> Gamma var
R34242:34244 Sub <> t12 var
R34250:34252 Sub <> T12 var
R34430:34434 Sub <> ::x_'|-'_x_'\in'_x not
R34445:34450 Sub <> ::x_'|-'_x_'\in'_x not
R34425:34429 Sub <> Gamma var
R34435:34438 Sub <> tapp constr
R34443:34444 Sub <> t2 var
R34440:34441 Sub <> t1 var
R34451:34452 Sub <> T2 var
R34401:34404 Sub <> ::x_'|-'_x_'\in'_x not
R34407:34411 Sub <> ::x_'|-'_x_'\in'_x not
R34396:34400 Sub <> Gamma var
R34405:34406 Sub <> t2 var
R34412:34413 Sub <> T1 var
R34360:34363 Sub <> ::x_'|-'_x_'\in'_x not
R34366:34371 Sub <> ::x_'|-'_x_'\in'_x not
R34384:34384 Sub <> ::x_'|-'_x_'\in'_x not
R34355:34359 Sub <> Gamma var
R34364:34365 Sub <> t1 var
R34372:34377 Sub <> TArrow constr
R34382:34383 Sub <> T2 var
R34379:34380 Sub <> T1 var
R34493:34496 Sub <> ::x_'|-'_x_'\in'_x not
R34502:34506 Sub <> ::x_'|-'_x_'\in'_x not
R34488:34492 Sub <> Gamma var
R34497:34501 Sub <> ttrue constr
R34507:34511 Sub <> TBool constr
R34553:34556 Sub <> ::x_'|-'_x_'\in'_x not
R34563:34567 Sub <> ::x_'|-'_x_'\in'_x not
R34548:34552 Sub <> Gamma var
R34557:34562 Sub <> tfalse constr
R34568:34572 Sub <> TBool constr
R34710:34714 Sub <> ::x_'|-'_x_'\in'_x not
R34727:34732 Sub <> ::x_'|-'_x_'\in'_x not
R34705:34709 Sub <> Gamma var
R34715:34717 Sub <> tif constr
R34725:34726 Sub <> t3 var
R34722:34723 Sub <> t2 var
R34719:34720 Sub <> t1 var
R34733:34733 Sub <> T var
R34682:34685 Sub <> ::x_'|-'_x_'\in'_x not
R34688:34692 Sub <> ::x_'|-'_x_'\in'_x not
R34677:34681 Sub <> Gamma var
R34686:34687 Sub <> t3 var
R34693:34693 Sub <> T var
R34654:34657 Sub <> ::x_'|-'_x_'\in'_x not
R34660:34664 Sub <> ::x_'|-'_x_'\in'_x not
R34649:34653 Sub <> Gamma var
R34658:34659 Sub <> t2 var
R34665:34665 Sub <> T var
R34622:34625 Sub <> ::x_'|-'_x_'\in'_x not
R34628:34632 Sub <> ::x_'|-'_x_'\in'_x not
R34617:34621 Sub <> Gamma var
R34626:34627 Sub <> t1 var
R34633:34637 Sub <> TBool constr
R34773:34776 Sub <> ::x_'|-'_x_'\in'_x not
R34782:34786 Sub <> ::x_'|-'_x_'\in'_x not
R34768:34772 Sub <> Gamma var
R34777:34781 Sub <> tunit constr
R34787:34791 Sub <> TUnit constr
R34899:34903 Sub <> ::x_'|-'_x_'\in'_x not
R34915:34921 Sub <> ::x_'|-'_x_'\in'_x not
R34933:34933 Sub <> ::x_'|-'_x_'\in'_x not
R34894:34898 Sub <> Gamma var
R34904:34908 Sub <> tpair constr
R34913:34914 Sub <> t2 var
R34910:34911 Sub <> t1 var
R34922:34926 Sub <> TProd constr
R34931:34932 Sub <> T2 var
R34928:34929 Sub <> T1 var
R34871:34874 Sub <> ::x_'|-'_x_'\in'_x not
R34877:34881 Sub <> ::x_'|-'_x_'\in'_x not
R34866:34870 Sub <> Gamma var
R34875:34876 Sub <> t2 var
R34882:34883 Sub <> T2 var
R34843:34846 Sub <> ::x_'|-'_x_'\in'_x not
R34849:34853 Sub <> ::x_'|-'_x_'\in'_x not
R34838:34842 Sub <> Gamma var
R34847:34848 Sub <> t1 var
R34854:34855 Sub <> T1 var
R35018:35022 Sub <> ::x_'|-'_x_'\in'_x not
R35029:35034 Sub <> ::x_'|-'_x_'\in'_x not
R35013:35017 Sub <> Gamma var
R35023:35026 Sub <> tfst constr
R35028:35028 Sub <> t var
R35035:35036 Sub <> T1 var
R34980:34983 Sub <> ::x_'|-'_x_'\in'_x not
R34985:34990 Sub <> ::x_'|-'_x_'\in'_x not
R35002:35002 Sub <> ::x_'|-'_x_'\in'_x not
R34975:34979 Sub <> Gamma var
R34984:34984 Sub <> t var
R34991:34995 Sub <> TProd constr
R35000:35001 Sub <> T2 var
R34997:34998 Sub <> T1 var
R35121:35125 Sub <> ::x_'|-'_x_'\in'_x not
R35132:35137 Sub <> ::x_'|-'_x_'\in'_x not
R35116:35120 Sub <> Gamma var
R35126:35129 Sub <> tsnd constr
R35131:35131 Sub <> t var
R35138:35139 Sub <> T2 var
R35083:35086 Sub <> ::x_'|-'_x_'\in'_x not
R35088:35093 Sub <> ::x_'|-'_x_'\in'_x not
R35105:35105 Sub <> ::x_'|-'_x_'\in'_x not
R35078:35082 Sub <> Gamma var
R35087:35087 Sub <> t var
R35094:35098 Sub <> TProd constr
R35103:35104 Sub <> T2 var
R35100:35101 Sub <> T1 var
R35258:35261 Sub <> ::x_'|-'_x_'\in'_x not
R35263:35267 Sub <> ::x_'|-'_x_'\in'_x not
R35253:35257 Sub <> Gamma var
R35262:35262 Sub <> t var
R35268:35268 Sub <> T var
R35238:35241 Sub <> ::x_'<:'_x not
R35237:35237 Sub <> S var
R35242:35242 Sub <> T var
R35216:35219 Sub <> ::x_'|-'_x_'\in'_x not
R35221:35225 Sub <> ::x_'|-'_x_'\in'_x not
R35211:35215 Sub <> Gamma var
R35220:35220 Sub <> t var
R35226:35226 Sub <> S var
R35304:35311 Sub <> has_type ind
not 35277 <> ::x_'|-'_x_'\in'_x
R35344:35351 Sub <> has_type ind
mod 35765:35773 <> Examples2
def 36123:36138 Examples2 typing_example_0
R36150:36166 Sub <> ::x_'|-'_x_'\in'_x not
R36233:36283 Sub <> ::x_'|-'_x_'\in'_x not
R36316:36316 Sub <> ::x_'|-'_x_'\in'_x not
R36145:36149 Sub Examples2 empty def
R36167:36171 Sub Examples2 tpair constr
R36215:36218 Sub Examples2 tabs constr
R36225:36228 Sub Examples2 tvar constr
R36230:36230 Sub Examples z syndef
R36222:36222 Sub Examples B syndef
R36220:36220 Sub Examples z syndef
R36174:36177 Sub Examples2 tabs constr
R36184:36187 Sub Examples2 tvar constr
R36189:36189 Sub Examples z syndef
R36181:36181 Sub Examples A syndef
R36179:36179 Sub Examples z syndef
R36284:36288 Sub Examples2 TProd constr
R36305:36310 Sub Examples2 TArrow constr
R36314:36314 Sub Examples B syndef
R36312:36312 Sub Examples B syndef
R36291:36296 Sub Examples2 TArrow constr
R36301:36301 Sub Examples A syndef
R36299:36299 Sub Examples A syndef
def 36512:36527 Examples2 typing_example_1
R36539:36555 Sub <> ::x_'|-'_x_'\in'_x not
R36736:36753 Sub <> ::x_'|-'_x_'\in'_x not
R36764:36764 Sub <> ::x_'|-'_x_'\in'_x not
R36534:36538 Sub Examples2 empty def
R36556:36559 Sub Examples2 tapp constr
R36661:36665 Sub Examples2 tpair constr
R36717:36720 Sub Examples2 tabs constr
R36727:36730 Sub Examples2 tvar constr
R36732:36732 Sub Examples z syndef
R36724:36724 Sub Examples B syndef
R36722:36722 Sub Examples z syndef
R36668:36671 Sub Examples2 tabs constr
R36678:36681 Sub Examples2 tvar constr
R36683:36683 Sub Examples z syndef
R36675:36675 Sub Examples A syndef
R36673:36673 Sub Examples z syndef
R36562:36565 Sub Examples2 tabs constr
R36625:36628 Sub Examples2 tsnd constr
R36631:36634 Sub Examples2 tvar constr
R36636:36636 Sub Examples x syndef
R36570:36574 Sub Examples2 TProd constr
R36582:36587 Sub Examples2 TArrow constr
R36591:36591 Sub Examples B syndef
R36589:36589 Sub Examples B syndef
R36576:36579 Sub Examples2 TTop constr
R36567:36567 Sub Examples x syndef
R36754:36759 Sub Examples2 TArrow constr
R36763:36763 Sub Examples B syndef
R36761:36761 Sub Examples B syndef
R36813:36817 Sub Examples2 T_App constr
R36813:36817 Sub Examples2 T_App constr
R36830:36834 Sub Examples2 T_Abs constr
R36830:36834 Sub Examples2 T_Abs constr
R36850:36854 Sub Examples2 T_Sub constr
R36850:36854 Sub Examples2 T_Sub constr
R36869:36884 Sub Examples2 typing_example_0 def
R36869:36884 Sub Examples2 typing_example_0 def
def 37120:37135 Examples2 typing_example_2
R37147:37163 Sub <> ::x_'|-'_x_'\in'_x not
R37536:37553 Sub <> ::x_'|-'_x_'\in'_x not
R37564:37564 Sub <> ::x_'|-'_x_'\in'_x not
R37142:37146 Sub Examples2 empty def
R37164:37167 Sub Examples2 tapp constr
R37401:37404 Sub Examples2 tabs constr
R37451:37455 Sub Examples2 tpair constr
R37516:37519 Sub Examples2 tabs constr
R37526:37529 Sub Examples2 tvar constr
R37531:37531 Sub Examples z syndef
R37523:37523 Sub Examples B syndef
R37521:37521 Sub Examples z syndef
R37458:37461 Sub Examples2 tabs constr
R37468:37471 Sub Examples2 tvar constr
R37473:37473 Sub Examples z syndef
R37465:37465 Sub Examples A syndef
R37463:37463 Sub Examples z syndef
R37409:37414 Sub Examples2 TArrow constr
R37418:37418 Sub Examples C syndef
R37416:37416 Sub Examples C syndef
R37406:37406 Sub Examples z syndef
R37170:37173 Sub Examples2 tabs constr
R37304:37307 Sub Examples2 tsnd constr
R37310:37313 Sub Examples2 tapp constr
R37359:37362 Sub Examples2 tabs constr
R37369:37372 Sub Examples2 tvar constr
R37374:37374 Sub Examples x syndef
R37366:37366 Sub Examples C syndef
R37364:37364 Sub Examples x syndef
R37316:37319 Sub Examples2 tvar constr
R37321:37321 Sub Examples z syndef
R37201:37206 Sub Examples2 TArrow constr
R37255:37259 Sub Examples2 TProd constr
R37267:37272 Sub Examples2 TArrow constr
R37276:37276 Sub Examples B syndef
R37274:37274 Sub Examples B syndef
R37261:37264 Sub Examples2 TTop constr
R37209:37214 Sub Examples2 TArrow constr
R37218:37218 Sub Examples C syndef
R37216:37216 Sub Examples C syndef
R37175:37175 Sub Examples z syndef
R37554:37559 Sub Examples2 TArrow constr
R37563:37563 Sub Examples B syndef
R37561:37561 Sub Examples B syndef
R37594:37598 Sub Examples2 T_App constr
R37594:37598 Sub Examples2 T_App constr
R37611:37615 Sub Examples2 T_Abs constr
R37611:37615 Sub Examples2 T_Abs constr
R37634:37638 Sub Examples2 T_Snd constr
R37634:37638 Sub Examples2 T_Snd constr
R37654:37658 Sub Examples2 T_App constr
R37654:37658 Sub Examples2 T_App constr
R37675:37679 Sub Examples2 T_Var constr
R37675:37679 Sub Examples2 T_Var constr
R37697:37701 Sub Examples2 T_Abs constr
R37697:37701 Sub Examples2 T_Abs constr
R37729:37733 Sub Examples2 T_Sub constr
R37729:37733 Sub Examples2 T_Sub constr
R37780:37788 Sub <> <> mod
prf 39160:39177 <> sub_inversion_Bool
R39218:39220 Coq.Init.Logic <> :type_scope:x_'='_x not
R39217:39217 Sub <> U var
R39221:39225 Sub <> TBool constr
R39197:39200 Sub <> ::x_'<:'_x not
R39196:39196 Sub <> U var
R39201:39205 Sub <> TBool constr
R39271:39275 Sub <> TBool constr
R39271:39275 Sub <> TBool constr
R39398:39400 Coq.Init.Logic <> :type_scope:x_'='_x not
R39401:39405 Sub <> TBool constr
R39398:39400 Coq.Init.Logic <> :type_scope:x_'='_x not
R39401:39405 Sub <> TBool constr
prf 39492:39510 <> sub_inversion_arrow
R39563:39569 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39572:39573 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39574:39580 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39583:39592 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39611:39614 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39594:39597 Coq.Init.Logic <> :type_scope:x_'='_x not
R39610:39610 Coq.Init.Logic <> :type_scope:x_'='_x not
R39593:39593 Sub <> U var
R39598:39603 Sub <> TArrow constr
R39608:39609 Sub <> U2 var
R39605:39606 Sub <> U1 var
R39615:39615 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39624:39629 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39638:39638 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R39618:39621 Sub <> ::x_'<:'_x not
R39616:39617 Sub <> V1 var
R39622:39623 Sub <> U1 var
R39632:39635 Sub <> ::x_'<:'_x not
R39630:39631 Sub <> U2 var
R39636:39637 Sub <> V2 var
R39536:39540 Sub <> ::x_'<:'_x not
R39553:39553 Sub <> ::x_'<:'_x not
R39535:39535 Sub <> U var
R39541:39546 Sub <> TArrow constr
R39551:39552 Sub <> V2 var
R39548:39549 Sub <> V1 var
R39692:39697 Sub <> TArrow constr
R39692:39697 Sub <> TArrow constr
prf 40205:40222 <> sub_inversion_prod
R40274:40280 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40283:40284 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40285:40291 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40294:40302 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40318:40321 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40304:40306 Coq.Init.Logic <> :type_scope:x_'='_x not
R40303:40303 Sub <> S var
R40307:40311 Sub <> TProd constr
R40316:40317 Sub <> S2 var
R40313:40314 Sub <> S1 var
R40330:40333 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R40324:40327 Sub <> ::x_'<:'_x not
R40322:40323 Sub <> S1 var
R40328:40329 Sub <> T1 var
R40336:40339 Sub <> ::x_'<:'_x not
R40334:40335 Sub <> S2 var
R40340:40341 Sub <> T2 var
R40248:40252 Sub <> ::x_'<:'_x not
R40264:40264 Sub <> ::x_'<:'_x not
R40247:40247 Sub <> S var
R40253:40257 Sub <> TProd constr
R40262:40263 Sub <> T2 var
R40259:40260 Sub <> T1 var
R40395:40399 Sub <> TProd constr
R40395:40399 Sub <> TProd constr
prf 42318:42347 <> canonical_forms_of_arrow_types
R42423:42429 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42431:42432 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42433:42439 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42442:42443 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42444:42450 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42453:42459 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R42461:42463 Coq.Init.Logic <> :type_scope:x_'='_x not
R42460:42460 Sub <> s var
R42464:42467 Sub <> tabs constr
R42474:42475 Sub <> s2 var
R42471:42472 Sub <> S1 var
R42469:42469 Sub <> x var
R42410:42414 Sub <> value ind
R42416:42416 Sub <> s var
R42380:42383 Sub <> ::x_'|-'_x_'\in'_x not
R42385:42390 Sub <> ::x_'|-'_x_'\in'_x not
R42403:42403 Sub <> ::x_'|-'_x_'\in'_x not
R42375:42379 Sub <> Gamma var
R42384:42384 Sub <> s var
R42391:42396 Sub <> TArrow constr
R42401:42402 Sub <> T2 var
R42398:42399 Sub <> T1 var
R42557:42562 Sub <> TArrow constr
R42557:42562 Sub <> TArrow constr
R42797:42815 Sub <> sub_inversion_arrow thm
R42797:42815 Sub <> sub_inversion_arrow thm
prf 42989:43011 <> canonical_forms_of_Bool
R43082:43085 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R43074:43076 Coq.Init.Logic <> :type_scope:x_'='_x not
R43073:43073 Sub <> s var
R43077:43081 Sub <> ttrue constr
R43087:43089 Coq.Init.Logic <> :type_scope:x_'='_x not
R43086:43086 Sub <> s var
R43090:43095 Sub <> tfalse constr
R43059:43063 Sub <> value ind
R43065:43065 Sub <> s var
R43038:43041 Sub <> ::x_'|-'_x_'\in'_x not
R43043:43047 Sub <> ::x_'|-'_x_'\in'_x not
R43033:43037 Sub <> Gamma var
R43042:43042 Sub <> s var
R43048:43052 Sub <> TBool constr
R43153:43157 Sub <> TBool constr
R43153:43157 Sub <> TBool constr
R43263:43280 Sub <> sub_inversion_Bool thm
R43263:43280 Sub <> sub_inversion_Bool thm
prf 43310:43341 <> canonical_forms_of_product_types
R43425:43431 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43434:43435 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43436:43442 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43445:43453 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43455:43457 Coq.Init.Logic <> :type_scope:x_'='_x not
R43454:43454 Sub <> t var
R43458:43462 Sub <> tpair constr
R43467:43468 Sub <> t2 var
R43464:43465 Sub <> t1 var
R43409:43413 Sub <> value ind
R43415:43415 Sub <> t var
R43377:43380 Sub <> ::x_'|-'_x_'\in'_x not
R43382:43387 Sub <> ::x_'|-'_x_'\in'_x not
R43399:43399 Sub <> ::x_'|-'_x_'\in'_x not
R43372:43376 Sub <> Gamma var
R43381:43381 Sub <> t var
R43388:43392 Sub <> TProd constr
R43397:43398 Sub <> T2 var
R43394:43395 Sub <> T1 var
R43535:43539 Sub <> TProd constr
R43535:43539 Sub <> TProd constr
R43760:43777 Sub <> sub_inversion_prod thm
R43760:43777 Sub <> sub_inversion_prod thm
prf 46416:46423 <> progress
R46477:46480 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46470:46474 Sub <> value ind
R46476:46476 Sub <> t var
R46481:46487 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46490:46491 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46493:46497 Sub <> ::x_'==>'_x not
R46492:46492 Sub <> t var
R46498:46499 Sub <> t' var
R46450:46453 Sub <> ::x_'|-'_x_'\in'_x not
R46455:46459 Sub <> ::x_'|-'_x_'\in'_x not
R46445:46449 Sub <> empty def
R46454:46454 Sub <> t var
R46460:46460 Sub <> T var
R46549:46553 Sub <> empty def
R46549:46553 Sub <> empty def
R46848:46877 Sub <> canonical_forms_of_arrow_types thm
R46879:46883 Sub <> empty def
R46848:46877 Sub <> canonical_forms_of_arrow_types thm
R46879:46883 Sub <> empty def
R46955:46955 Sub <> ::'['_x_':='_x_']'_x not
R46957:46958 Sub <> ::'['_x_':='_x_']'_x not
R46961:46961 Sub <> ::'['_x_':='_x_']'_x not
R46955:46955 Sub <> ::'['_x_':='_x_']'_x not
R46957:46958 Sub <> ::'['_x_':='_x_']'_x not
R46961:46961 Sub <> ::'['_x_':='_x_']'_x not
R47039:47042 Sub <> tapp constr
R47039:47042 Sub <> tapp constr
R47118:47121 Sub <> tapp constr
R47118:47121 Sub <> tapp constr
R47233:47236 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47225:47227 Coq.Init.Logic <> :type_scope:x_'='_x not
R47228:47232 Sub <> ttrue constr
R47239:47241 Coq.Init.Logic <> :type_scope:x_'='_x not
R47242:47247 Sub <> tfalse constr
R47270:47292 Sub <> canonical_forms_of_Bool thm
R47233:47236 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R47225:47227 Coq.Init.Logic <> :type_scope:x_'='_x not
R47228:47232 Sub <> ttrue constr
R47239:47241 Coq.Init.Logic <> :type_scope:x_'='_x not
R47242:47247 Sub <> tfalse constr
R47270:47292 Sub <> canonical_forms_of_Bool thm
R47566:47570 Sub <> tpair constr
R47566:47570 Sub <> tpair constr
R47659:47663 Sub <> tpair constr
R47659:47663 Sub <> tpair constr
R47758:47789 Sub <> canonical_forms_of_product_types thm
R47758:47789 Sub <> canonical_forms_of_product_types thm
R47944:47947 Sub <> tfst constr
R47944:47947 Sub <> tfst constr
R48038:48069 Sub <> canonical_forms_of_product_types thm
R48038:48069 Sub <> canonical_forms_of_product_types thm
R48224:48227 Sub <> tsnd constr
R48224:48227 Sub <> tsnd constr
prf 50260:50279 <> typing_inversion_abs
R50351:50357 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50360:50361 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50381:50398 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50362:50362 Sub <> ::x_'<:'_x not
R50375:50379 Sub <> ::x_'<:'_x not
R50363:50368 Sub <> TArrow constr
R50373:50374 Sub <> S2 var
R50370:50371 Sub <> S1 var
R50380:50380 Sub <> T var
R50399:50399 Sub <> ::x_'|-'_x_'\in'_x not
R50417:50421 Sub <> ::x_'|-'_x_'\in'_x not
R50424:50428 Sub <> ::x_'|-'_x_'\in'_x not
R50400:50405 Sub <> extend def
R50415:50416 Sub <> S1 var
R50413:50413 Sub <> x var
R50407:50411 Sub <> Gamma var
R50422:50423 Sub <> t2 var
R50429:50430 Sub <> S2 var
R50317:50321 Sub <> ::x_'|-'_x_'\in'_x not
R50334:50339 Sub <> ::x_'|-'_x_'\in'_x not
R50312:50316 Sub <> Gamma var
R50322:50325 Sub <> tabs constr
R50332:50333 Sub <> t2 var
R50329:50330 Sub <> S1 var
R50327:50327 Sub <> x var
R50340:50340 Sub <> T var
R50492:50495 Sub <> tabs constr
R50492:50495 Sub <> tabs constr
prf 50740:50759 <> typing_inversion_var
R50812:50818 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50820:50825 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50842:50845 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50833:50835 Coq.Init.Logic <> :type_scope:x_'='_x not
R50826:50830 Sub <> Gamma var
R50832:50832 Sub <> x var
R50836:50839 Coq.Init.Datatypes <> Some constr
R50841:50841 Sub <> S var
R50847:50850 Sub <> ::x_'<:'_x not
R50846:50846 Sub <> S var
R50851:50851 Sub <> T var
R50788:50792 Sub <> ::x_'|-'_x_'\in'_x not
R50799:50804 Sub <> ::x_'|-'_x_'\in'_x not
R50783:50787 Sub <> Gamma var
R50793:50796 Sub <> tvar constr
R50798:50798 Sub <> x var
R50805:50805 Sub <> T var
R50908:50911 Sub <> tvar constr
R50908:50911 Sub <> tvar constr
prf 51123:51142 <> typing_inversion_app
R51205:51211 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51214:51219 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51250:51257 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R51225:51228 Sub <> ::x_'|-'_x_'\in'_x not
R51231:51236 Sub <> ::x_'|-'_x_'\in'_x not
R51249:51249 Sub <> ::x_'|-'_x_'\in'_x not
R51220:51224 Sub <> Gamma var
R51229:51230 Sub <> t1 var
R51237:51242 Sub <> TArrow constr
R51247:51248 Sub <> T2 var
R51244:51245 Sub <> T1 var
R51263:51266 Sub <> ::x_'|-'_x_'\in'_x not
R51269:51273 Sub <> ::x_'|-'_x_'\in'_x not
R51258:51262 Sub <> Gamma var
R51267:51268 Sub <> t2 var
R51274:51275 Sub <> T1 var
R51176:51180 Sub <> ::x_'|-'_x_'\in'_x not
R51191:51196 Sub <> ::x_'|-'_x_'\in'_x not
R51171:51175 Sub <> Gamma var
R51181:51184 Sub <> tapp constr
R51189:51190 Sub <> t2 var
R51186:51187 Sub <> t1 var
R51197:51198 Sub <> T2 var
R51337:51340 Sub <> tapp constr
R51337:51340 Sub <> tapp constr
prf 51556:51576 <> typing_inversion_true
R51629:51632 Sub <> ::x_'<:'_x not
R51624:51628 Sub <> TBool constr
R51633:51633 Sub <> T var
R51603:51606 Sub <> ::x_'|-'_x_'\in'_x not
R51612:51616 Sub <> ::x_'|-'_x_'\in'_x not
R51598:51602 Sub <> Gamma var
R51607:51611 Sub <> ttrue constr
R51617:51617 Sub <> T var
R51686:51690 Sub <> ttrue constr
R51686:51690 Sub <> ttrue constr
prf 51789:51810 <> typing_inversion_false
R51864:51867 Sub <> ::x_'<:'_x not
R51859:51863 Sub <> TBool constr
R51868:51868 Sub <> T var
R51837:51840 Sub <> ::x_'|-'_x_'\in'_x not
R51847:51851 Sub <> ::x_'|-'_x_'\in'_x not
R51832:51836 Sub <> Gamma var
R51841:51846 Sub <> tfalse constr
R51852:51852 Sub <> T var
R51921:51926 Sub <> tfalse constr
R51921:51926 Sub <> tfalse constr
prf 52025:52043 <> typing_inversion_if
R52130:52136 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R52114:52117 Sub <> ::x_'|-'_x_'\in'_x not
R52120:52124 Sub <> ::x_'|-'_x_'\in'_x not
R52109:52113 Sub <> Gamma var
R52118:52119 Sub <> t1 var
R52125:52129 Sub <> TBool constr
R52154:52159 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R52142:52145 Sub <> ::x_'|-'_x_'\in'_x not
R52148:52152 Sub <> ::x_'|-'_x_'\in'_x not
R52137:52141 Sub <> Gamma var
R52146:52147 Sub <> t2 var
R52153:52153 Sub <> T var
R52165:52168 Sub <> ::x_'|-'_x_'\in'_x not
R52171:52175 Sub <> ::x_'|-'_x_'\in'_x not
R52160:52164 Sub <> Gamma var
R52169:52170 Sub <> t3 var
R52176:52176 Sub <> T var
R52079:52083 Sub <> ::x_'|-'_x_'\in'_x not
R52096:52101 Sub <> ::x_'|-'_x_'\in'_x not
R52074:52078 Sub <> Gamma var
R52084:52086 Sub <> tif constr
R52094:52095 Sub <> t3 var
R52091:52092 Sub <> t2 var
R52088:52089 Sub <> t1 var
R52102:52102 Sub <> T var
R52240:52242 Sub <> tif constr
R52240:52242 Sub <> tif constr
prf 52454:52474 <> typing_inversion_unit
R52529:52532 Sub <> ::x_'<:'_x not
R52524:52528 Sub <> TUnit constr
R52533:52533 Sub <> T var
R52501:52504 Sub <> ::x_'|-'_x_'\in'_x not
R52510:52514 Sub <> ::x_'|-'_x_'\in'_x not
R52496:52500 Sub <> Gamma var
R52505:52509 Sub <> tunit constr
R52515:52515 Sub <> T var
R52586:52590 Sub <> tunit constr
R52586:52590 Sub <> tunit constr
prf 52690:52710 <> typing_inversion_pair
R52772:52778 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52781:52782 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52783:52789 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52792:52797 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R52816:52824 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R52798:52798 Sub <> ::x_'<:'_x not
R52810:52814 Sub <> ::x_'<:'_x not
R52799:52803 Sub <> TProd constr
R52808:52809 Sub <> T2 var
R52805:52806 Sub <> T1 var
R52815:52815 Sub <> T var
R52843:52846 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R52830:52833 Sub <> ::x_'|-'_x_'\in'_x not
R52836:52840 Sub <> ::x_'|-'_x_'\in'_x not
R52825:52829 Sub <> Gamma var
R52834:52835 Sub <> t1 var
R52841:52842 Sub <> T1 var
R52852:52855 Sub <> ::x_'|-'_x_'\in'_x not
R52858:52862 Sub <> ::x_'|-'_x_'\in'_x not
R52847:52851 Sub <> Gamma var
R52856:52857 Sub <> t2 var
R52863:52864 Sub <> T2 var
R52743:52747 Sub <> ::x_'|-'_x_'\in'_x not
R52759:52764 Sub <> ::x_'|-'_x_'\in'_x not
R52738:52742 Sub <> Gamma var
R52748:52752 Sub <> tpair constr
R52757:52758 Sub <> t2 var
R52754:52755 Sub <> t1 var
R52765:52765 Sub <> T var
R52925:52929 Sub <> tpair constr
R52925:52929 Sub <> tpair constr
prf 53142:53161 <> typing_inversion_fst
R53214:53220 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53223:53224 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53225:53231 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53234:53239 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53247:53250 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53242:53245 Sub <> ::x_'<:'_x not
R53240:53241 Sub <> T1 var
R53246:53246 Sub <> T var
R53256:53259 Sub <> ::x_'|-'_x_'\in'_x not
R53261:53266 Sub <> ::x_'|-'_x_'\in'_x not
R53278:53278 Sub <> ::x_'|-'_x_'\in'_x not
R53251:53255 Sub <> Gamma var
R53260:53260 Sub <> t var
R53267:53271 Sub <> TProd constr
R53276:53277 Sub <> T2 var
R53273:53274 Sub <> T1 var
R53190:53194 Sub <> ::x_'|-'_x_'\in'_x not
R53201:53206 Sub <> ::x_'|-'_x_'\in'_x not
R53185:53189 Sub <> Gamma var
R53195:53198 Sub <> tfst constr
R53200:53200 Sub <> t var
R53207:53207 Sub <> T var
R53334:53337 Sub <> tfst constr
R53334:53337 Sub <> tfst constr
prf 53508:53527 <> typing_inversion_snd
R53580:53586 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53589:53590 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53591:53597 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53600:53605 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53613:53616 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53608:53611 Sub <> ::x_'<:'_x not
R53606:53607 Sub <> T2 var
R53612:53612 Sub <> T var
R53622:53625 Sub <> ::x_'|-'_x_'\in'_x not
R53627:53632 Sub <> ::x_'|-'_x_'\in'_x not
R53644:53644 Sub <> ::x_'|-'_x_'\in'_x not
R53617:53621 Sub <> Gamma var
R53626:53626 Sub <> t var
R53633:53637 Sub <> TProd constr
R53642:53643 Sub <> T2 var
R53639:53640 Sub <> T1 var
R53556:53560 Sub <> ::x_'|-'_x_'\in'_x not
R53567:53572 Sub <> ::x_'|-'_x_'\in'_x not
R53551:53555 Sub <> Gamma var
R53561:53564 Sub <> tsnd constr
R53566:53566 Sub <> t var
R53573:53573 Sub <> T var
R53700:53703 Sub <> tsnd constr
R53700:53703 Sub <> tsnd constr
prf 54065:54073 <> abs_arrow
R54161:54167 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R54155:54158 Sub <> ::x_'<:'_x not
R54153:54154 Sub <> T1 var
R54159:54160 Sub <> S1 var
R54168:54168 Sub <> ::x_'|-'_x_'\in'_x not
R54186:54190 Sub <> ::x_'|-'_x_'\in'_x not
R54193:54197 Sub <> ::x_'|-'_x_'\in'_x not
R54169:54174 Sub <> extend def
R54184:54185 Sub <> S1 var
R54182:54182 Sub <> x var
R54176:54180 Sub <> empty def
R54191:54192 Sub <> s2 var
R54198:54199 Sub <> T2 var
R54107:54111 Sub <> ::x_'|-'_x_'\in'_x not
R54124:54130 Sub <> ::x_'|-'_x_'\in'_x not
R54143:54143 Sub <> ::x_'|-'_x_'\in'_x not
R54102:54106 Sub <> empty def
R54112:54115 Sub <> tabs constr
R54122:54123 Sub <> s2 var
R54119:54120 Sub <> S1 var
R54117:54117 Sub <> x var
R54131:54136 Sub <> TArrow constr
R54141:54142 Sub <> T2 var
R54138:54139 Sub <> T1 var
R54256:54275 Sub <> typing_inversion_abs thm
R54256:54275 Sub <> typing_inversion_abs thm
R54330:54348 Sub <> sub_inversion_arrow thm
R54330:54348 Sub <> sub_inversion_arrow thm
ind 54619:54633 <> appears_free_in
constr 54661:54667 <> afi_var
constr 54718:54725 <> afi_app1
constr 54810:54817 <> afi_app2
constr 54902:54908 <> afi_abs
constr 55031:55037 <> afi_if1
constr 55133:55139 <> afi_if2
constr 55235:55241 <> afi_if3
constr 55337:55345 <> afi_pair1
constr 55437:55445 <> afi_pair2
constr 55537:55543 <> afi_fst
constr 55626:55632 <> afi_snd
R54643:54644 Sub <> tm ind
R54637:54638 SfLib <> id ind
R54687:54701 Sub <> appears_free_in ind
R54706:54709 Sub <> tvar constr
R54711:54711 Sub <> x var
R54703:54703 Sub <> x var
R54775:54789 Sub <> appears_free_in ind
R54794:54797 Sub <> tapp constr
R54802:54803 Sub <> t2 var
R54799:54800 Sub <> t1 var
R54791:54791 Sub <> x var
R54751:54765 Sub <> appears_free_in ind
R54769:54770 Sub <> t1 var
R54767:54767 Sub <> x var
R54867:54881 Sub <> appears_free_in ind
R54886:54889 Sub <> tapp constr
R54894:54895 Sub <> t2 var
R54891:54892 Sub <> t1 var
R54883:54883 Sub <> x var
R54843:54857 Sub <> appears_free_in ind
R54861:54862 Sub <> t2 var
R54859:54859 Sub <> x var
R54992:55006 Sub <> appears_free_in ind
R55011:55014 Sub <> tabs constr
R55022:55024 Sub <> t12 var
R55018:55020 Sub <> T11 var
R55016:55016 Sub <> y var
R55008:55008 Sub <> x var
R54959:54973 Sub <> appears_free_in ind
R54977:54979 Sub <> t12 var
R54975:54975 Sub <> x var
R54941:54944 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R54940:54940 Sub <> y var
R54945:54945 Sub <> x var
R55096:55110 Sub <> appears_free_in ind
R55115:55117 Sub <> tif constr
R55125:55126 Sub <> t3 var
R55122:55123 Sub <> t2 var
R55119:55120 Sub <> t1 var
R55112:55112 Sub <> x var
R55066:55080 Sub <> appears_free_in ind
R55084:55085 Sub <> t1 var
R55082:55082 Sub <> x var
R55198:55212 Sub <> appears_free_in ind
R55217:55219 Sub <> tif constr
R55227:55228 Sub <> t3 var
R55224:55225 Sub <> t2 var
R55221:55222 Sub <> t1 var
R55214:55214 Sub <> x var
R55168:55182 Sub <> appears_free_in ind
R55186:55187 Sub <> t2 var
R55184:55184 Sub <> x var
R55300:55314 Sub <> appears_free_in ind
R55319:55321 Sub <> tif constr
R55329:55330 Sub <> t3 var
R55326:55327 Sub <> t2 var
R55323:55324 Sub <> t1 var
R55316:55316 Sub <> x var
R55270:55284 Sub <> appears_free_in ind
R55288:55289 Sub <> t3 var
R55286:55286 Sub <> x var
R55401:55415 Sub <> appears_free_in ind
R55420:55424 Sub <> tpair constr
R55429:55430 Sub <> t2 var
R55426:55427 Sub <> t1 var
R55417:55417 Sub <> x var
R55371:55385 Sub <> appears_free_in ind
R55389:55390 Sub <> t1 var
R55387:55387 Sub <> x var
R55501:55515 Sub <> appears_free_in ind
R55520:55524 Sub <> tpair constr
R55529:55530 Sub <> t2 var
R55526:55527 Sub <> t1 var
R55517:55517 Sub <> x var
R55471:55485 Sub <> appears_free_in ind
R55489:55490 Sub <> t2 var
R55487:55487 Sub <> x var
R55595:55609 Sub <> appears_free_in ind
R55614:55617 Sub <> tfst constr
R55619:55619 Sub <> t var
R55611:55611 Sub <> x var
R55566:55580 Sub <> appears_free_in ind
R55584:55584 Sub <> t var
R55582:55582 Sub <> x var
R55684:55698 Sub <> appears_free_in ind
R55703:55706 Sub <> tsnd constr
R55708:55708 Sub <> t var
R55700:55700 Sub <> x var
R55655:55669 Sub <> appears_free_in ind
R55673:55673 Sub <> t var
R55671:55671 Sub <> x var
R55732:55746 Sub <> appears_free_in ind
prf 55756:55773 <> context_invariance
R55902:55905 Sub <> ::x_'|-'_x_'\in'_x not
R55907:55911 Sub <> ::x_'|-'_x_'\in'_x not
R55896:55901 Sub <> Gamma' var
R55906:55906 Sub <> t var
R55912:55912 Sub <> S var
R55874:55876 Coq.Init.Logic <> :type_scope:x_'='_x not
R55867:55871 Sub <> Gamma var
R55873:55873 Sub <> x var
R55877:55882 Sub <> Gamma' var
R55884:55884 Sub <> x var
R55844:55858 Sub <> appears_free_in ind
R55862:55862 Sub <> t var
R55860:55860 Sub <> x var
R55812:55815 Sub <> ::x_'|-'_x_'\in'_x not
R55817:55821 Sub <> ::x_'|-'_x_'\in'_x not
R55807:55811 Sub <> Gamma var
R55816:55816 Sub <> t var
R55822:55822 Sub <> S var
R56062:56066 Sub <> T_Var constr
R56062:56066 Sub <> T_Var constr
R56116:56120 Sub <> T_Abs constr
R56116:56120 Sub <> T_Abs constr
R56170:56175 Sub <> extend def
R56188:56193 SfLib <> beq_id def
R56188:56193 SfLib <> beq_id def
R56251:56255 Sub <> T_App constr
R56251:56255 Sub <> T_App constr
R56293:56296 Sub <> T_If constr
R56293:56296 Sub <> T_If constr
R56329:56334 Sub <> T_Pair constr
R56329:56334 Sub <> T_Pair constr
prf 56351:56365 <> free_in_context
R56441:56447 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56450:56451 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R56459:56461 Coq.Init.Logic <> :type_scope:x_'='_x not
R56452:56456 Sub <> Gamma var
R56458:56458 Sub <> x var
R56462:56465 Coq.Init.Datatypes <> Some constr
R56467:56468 Sub <> T' var
R56423:56426 Sub <> ::x_'|-'_x_'\in'_x not
R56428:56432 Sub <> ::x_'|-'_x_'\in'_x not
R56418:56422 Sub <> Gamma var
R56427:56427 Sub <> t var
R56433:56433 Sub <> T var
R56392:56406 Sub <> appears_free_in ind
R56410:56410 Sub <> t var
R56408:56408 Sub <> x var
R56675:56680 Sub <> extend def
R56697:56715 SfLib <> not_eq_beq_id_false thm
R56697:56715 SfLib <> not_eq_beq_id_false thm
prf 57202:57230 <> substitution_preserves_typing
R57334:57338 Sub <> ::x_'|-'_x_'\in'_x not
R57346:57351 Sub <> ::x_'|-'_x_'\in'_x not
R57329:57333 Sub <> Gamma var
R57339:57339 Sub <> ::'['_x_':='_x_']'_x not
R57341:57342 Sub <> ::'['_x_':='_x_']'_x not
R57344:57344 Sub <> ::'['_x_':='_x_']'_x not
R57340:57340 Sub <> x var
R57343:57343 Sub <> v var
R57345:57345 Sub <> t var
R57352:57352 Sub <> S var
R57307:57310 Sub <> ::x_'|-'_x_'\in'_x not
R57312:57316 Sub <> ::x_'|-'_x_'\in'_x not
R57302:57306 Sub <> empty def
R57311:57311 Sub <> v var
R57317:57317 Sub <> U var
R57263:57263 Sub <> ::x_'|-'_x_'\in'_x not
R57280:57284 Sub <> ::x_'|-'_x_'\in'_x not
R57286:57290 Sub <> ::x_'|-'_x_'\in'_x not
R57264:57269 Sub <> extend def
R57279:57279 Sub <> U var
R57277:57277 Sub <> x var
R57271:57275 Sub <> Gamma var
R57285:57285 Sub <> t var
R57291:57291 Sub <> S var
R57560:57579 Sub <> typing_inversion_var thm
R57560:57579 Sub <> typing_inversion_var thm
R57634:57639 Sub <> extend def
R57664:57669 SfLib <> beq_id def
R57664:57669 SfLib <> beq_id def
R57725:57733 SfLib <> beq_id_eq thm
R57725:57733 SfLib <> beq_id_eq thm
R57828:57832 Sub <> empty def
R57804:57821 Sub <> context_invariance thm
R57828:57832 Sub <> empty def
R57804:57821 Sub <> context_invariance thm
R57877:57891 Sub <> free_in_context thm
R57899:57903 Sub <> empty def
R57877:57891 Sub <> free_in_context thm
R57899:57903 Sub <> empty def
R57990:58009 Sub <> typing_inversion_app thm
R57990:58009 Sub <> typing_inversion_app thm
R58071:58075 Sub <> T_App constr
R58071:58075 Sub <> T_App constr
R58148:58167 Sub <> typing_inversion_abs thm
R58148:58167 Sub <> typing_inversion_abs thm
R58238:58243 Sub <> TArrow constr
R58226:58230 Sub <> T_Sub constr
R58238:58243 Sub <> TArrow constr
R58226:58230 Sub <> T_Sub constr
R58261:58265 Sub <> T_Abs constr
R58261:58265 Sub <> T_Abs constr
R58284:58289 SfLib <> beq_id def
R58284:58289 SfLib <> beq_id def
R58344:58361 Sub <> context_invariance thm
R58344:58361 Sub <> context_invariance thm
R58378:58386 SfLib <> beq_id_eq thm
R58378:58386 SfLib <> beq_id_eq thm
R58432:58437 Sub <> extend def
R58456:58461 SfLib <> beq_id def
R58456:58461 SfLib <> beq_id def
R58513:58530 Sub <> context_invariance thm
R58513:58530 Sub <> context_invariance thm
R58563:58568 Sub <> extend def
R58587:58592 SfLib <> beq_id def
R58587:58592 SfLib <> beq_id def
R58633:58641 SfLib <> beq_id_eq thm
R58633:58641 SfLib <> beq_id_eq thm
R58720:58723 Sub <> ::x_'<:'_x not
R58715:58719 Sub <> TBool constr
R58746:58766 Sub <> typing_inversion_true thm
R58720:58723 Sub <> ::x_'<:'_x not
R58715:58719 Sub <> TBool constr
R58746:58766 Sub <> typing_inversion_true thm
R58819:58822 Sub <> ::x_'<:'_x not
R58814:58818 Sub <> TBool constr
R58845:58866 Sub <> typing_inversion_false thm
R58819:58822 Sub <> ::x_'<:'_x not
R58814:58818 Sub <> TBool constr
R58845:58866 Sub <> typing_inversion_false thm
R58943:58959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58909:58909 Sub <> ::x_'|-'_x_'\in'_x not
R58926:58930 Sub <> ::x_'|-'_x_'\in'_x not
R58933:58937 Sub <> ::x_'|-'_x_'\in'_x not
R58910:58915 Sub <> extend def
R58938:58942 Sub <> TBool constr
R58990:59005 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58960:58960 Sub <> ::x_'|-'_x_'\in'_x not
R58977:58981 Sub <> ::x_'|-'_x_'\in'_x not
R58984:58988 Sub <> ::x_'|-'_x_'\in'_x not
R58961:58966 Sub <> extend def
R59006:59006 Sub <> ::x_'|-'_x_'\in'_x not
R59023:59027 Sub <> ::x_'|-'_x_'\in'_x not
R59030:59034 Sub <> ::x_'|-'_x_'\in'_x not
R59007:59012 Sub <> extend def
R59055:59073 Sub <> typing_inversion_if thm
R58943:58959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58909:58909 Sub <> ::x_'|-'_x_'\in'_x not
R58926:58930 Sub <> ::x_'|-'_x_'\in'_x not
R58933:58937 Sub <> ::x_'|-'_x_'\in'_x not
R58910:58915 Sub <> extend def
R58938:58942 Sub <> TBool constr
R58990:59005 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R58960:58960 Sub <> ::x_'|-'_x_'\in'_x not
R58977:58981 Sub <> ::x_'|-'_x_'\in'_x not
R58984:58988 Sub <> ::x_'|-'_x_'\in'_x not
R58961:58966 Sub <> extend def
R59006:59006 Sub <> ::x_'|-'_x_'\in'_x not
R59023:59027 Sub <> ::x_'|-'_x_'\in'_x not
R59030:59034 Sub <> ::x_'|-'_x_'\in'_x not
R59007:59012 Sub <> extend def
R59055:59073 Sub <> typing_inversion_if thm
R59227:59230 Sub <> ::x_'<:'_x not
R59222:59226 Sub <> TUnit constr
R59251:59271 Sub <> typing_inversion_unit thm
R59227:59230 Sub <> ::x_'<:'_x not
R59222:59226 Sub <> TUnit constr
R59251:59271 Sub <> typing_inversion_unit thm
R59318:59338 Sub <> typing_inversion_pair thm
R59318:59338 Sub <> typing_inversion_pair thm
R59428:59447 Sub <> typing_inversion_fst thm
R59428:59447 Sub <> typing_inversion_fst thm
R59525:59544 Sub <> typing_inversion_snd thm
R59525:59544 Sub <> typing_inversion_snd thm
prf 62368:62379 <> preservation
R62452:62455 Sub <> ::x_'|-'_x_'\in'_x not
R62458:62462 Sub <> ::x_'|-'_x_'\in'_x not
R62447:62451 Sub <> empty def
R62456:62457 Sub <> t' var
R62463:62463 Sub <> T var
R62430:62434 Sub <> ::x_'==>'_x not
R62429:62429 Sub <> t var
R62435:62436 Sub <> t' var
R62408:62411 Sub <> ::x_'|-'_x_'\in'_x not
R62413:62417 Sub <> ::x_'|-'_x_'\in'_x not
R62403:62407 Sub <> empty def
R62412:62412 Sub <> t var
R62418:62418 Sub <> T var
R62515:62519 Sub <> empty def
R62515:62519 Sub <> empty def
R62767:62775 Sub <> abs_arrow thm
R62767:62775 Sub <> abs_arrow thm
R62818:62846 Sub <> substitution_preserves_typing thm
R62818:62846 Sub <> substitution_preserves_typing thm
R62888:62908 Sub <> typing_inversion_pair thm
R62888:62908 Sub <> typing_inversion_pair thm
R62978:62995 Sub <> sub_inversion_prod thm
R62978:62995 Sub <> sub_inversion_prod thm
R63110:63130 Sub <> typing_inversion_pair thm
R63110:63130 Sub <> typing_inversion_pair thm
R63200:63217 Sub <> sub_inversion_prod thm
R63200:63217 Sub <> sub_inversion_prod thm
