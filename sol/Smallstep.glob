DIGEST 98307b4ca27e8ac4b1c74d9dc63c37a8
FSmallstep
R69:71 Imp <> <> lib
def 3940:3947 <> relation
R3965:3965 Smallstep <> X var
R3962:3962 Smallstep <> X var
ind 4780:4781 <> tm
constr 4797:4797 <> C
constr 4838:4838 <> P
R4808:4809 Smallstep <> tm ind
R4801:4803 Coq.Init.Datatypes <> nat ind
R4854:4855 Smallstep <> tm ind
R4848:4849 Smallstep <> tm ind
R4842:4843 Smallstep <> tm ind
def 5118:5122 <> evalF
R5129:5130 Smallstep <> tm ind
R5135:5137 Coq.Init.Datatypes <> nat ind
R5150:5150 Smallstep <> t var
R5161:5161 Smallstep <> C constr
R5174:5174 Smallstep <> P constr
R5193:5195 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5185:5189 Smallstep <> evalF def
R5196:5200 Smallstep <> evalF def
ind 5828:5831 <> eval
constr 5860:5866 <> E_Const
constr 5899:5904 <> E_Plus
R5841:5843 Coq.Init.Datatypes <> nat ind
R5835:5836 Smallstep <> tm ind
R6019:6022 Smallstep <> eval ind
R5889:5892 Smallstep <> ::x_'||'_x not
R5886:5886 Smallstep <> C constr
R5888:5888 Smallstep <> n var
R5893:5893 Smallstep <> n var
R5979:5983 Smallstep <> ::x_'||'_x not
R5991:5991 Smallstep <> ::x_'||'_x not
R5972:5972 Smallstep <> P constr
R5977:5978 Smallstep <> t2 var
R5974:5975 Smallstep <> t1 var
R5986:5988 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5984:5985 Smallstep <> n1 var
R5989:5990 Smallstep <> n2 var
R5956:5959 Smallstep <> ::x_'||'_x not
R5954:5955 Smallstep <> t2 var
R5960:5961 Smallstep <> n2 var
R5937:5940 Smallstep <> ::x_'||'_x not
R5935:5936 Smallstep <> t1 var
R5941:5942 Smallstep <> n1 var
R6019:6022 Smallstep <> eval ind
not 6002 <> ::x_'||'_x
mod 6153:6164 <> SimpleArith1
ind 6752:6755 SimpleArith1 step
constr 6783:6799 SimpleArith1 ST_PlusConstConst
constr 6859:6866 SimpleArith1 ST_Plus1
constr 6939:6946 SimpleArith1 ST_Plus2
R6765:6766 Smallstep SimpleArith1 tm ind
R6759:6760 Smallstep SimpleArith1 tm ind
R7052:7055 Smallstep <> step ind
R6838:6842 Smallstep SimpleArith1 ::x_'==>'_x not
R6823:6823 Smallstep SimpleArith1 P constr
R6833:6833 Smallstep SimpleArith1 C constr
R6835:6836 Smallstep <> n2 var
R6826:6826 Smallstep SimpleArith1 C constr
R6828:6829 Smallstep <> n1 var
R6843:6843 Smallstep SimpleArith1 C constr
R6848:6850 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6846:6847 Smallstep <> n1 var
R6851:6852 Smallstep <> n2 var
R6921:6925 Smallstep SimpleArith1 ::x_'==>'_x not
R6914:6914 Smallstep SimpleArith1 P constr
R6919:6920 Smallstep <> t2 var
R6916:6917 Smallstep <> t1 var
R6926:6926 Smallstep SimpleArith1 P constr
R6932:6933 Smallstep <> t2 var
R6928:6930 Smallstep <> t1' var
R6896:6900 Smallstep SimpleArith1 ::x_'==>'_x not
R6894:6895 Smallstep <> t1 var
R6901:6903 Smallstep <> t1' var
R7006:7010 Smallstep SimpleArith1 ::x_'==>'_x not
R6995:6995 Smallstep SimpleArith1 P constr
R7004:7005 Smallstep <> t2 var
R6998:6998 Smallstep SimpleArith1 C constr
R7000:7001 Smallstep <> n1 var
R7011:7011 Smallstep SimpleArith1 P constr
R7020:7022 Smallstep <> t2' var
R7014:7014 Smallstep SimpleArith1 C constr
R7016:7017 Smallstep <> n1 var
R6976:6980 Smallstep SimpleArith1 ::x_'==>'_x not
R6974:6975 Smallstep <> t2 var
R6981:6983 Smallstep <> t2' var
R7052:7055 Smallstep SimpleArith1 step ind
not 7033 SimpleArith1 ::x_'==>'_x
def 7844:7854 SimpleArith1 test_step_1
R7915:7931 Smallstep SimpleArith1 ::x_'==>'_x not
R7865:7865 Smallstep SimpleArith1 P constr
R7901:7901 Smallstep SimpleArith1 P constr
R7910:7910 Smallstep SimpleArith1 C constr
R7904:7904 Smallstep SimpleArith1 C constr
R7877:7877 Smallstep SimpleArith1 P constr
R7886:7886 Smallstep SimpleArith1 C constr
R7880:7880 Smallstep SimpleArith1 C constr
R7932:7932 Smallstep SimpleArith1 P constr
R7964:7964 Smallstep SimpleArith1 P constr
R7973:7973 Smallstep SimpleArith1 C constr
R7967:7967 Smallstep SimpleArith1 C constr
R7944:7944 Smallstep SimpleArith1 C constr
R7948:7950 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7995:8002 Smallstep SimpleArith1 ST_Plus1 constr
R7995:8002 Smallstep SimpleArith1 ST_Plus1 constr
R8011:8027 Smallstep SimpleArith1 ST_PlusConstConst constr
R8011:8027 Smallstep SimpleArith1 ST_PlusConstConst constr
def 8267:8277 SimpleArith1 test_step_2
R8360:8376 Smallstep SimpleArith1 ::x_'==>'_x not
R8288:8288 Smallstep SimpleArith1 P constr
R8314:8314 Smallstep SimpleArith1 P constr
R8345:8345 Smallstep SimpleArith1 P constr
R8354:8354 Smallstep SimpleArith1 C constr
R8348:8348 Smallstep SimpleArith1 C constr
R8328:8328 Smallstep SimpleArith1 C constr
R8300:8300 Smallstep SimpleArith1 C constr
R8377:8377 Smallstep SimpleArith1 P constr
R8403:8403 Smallstep SimpleArith1 P constr
R8434:8434 Smallstep SimpleArith1 C constr
R8438:8440 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8417:8417 Smallstep SimpleArith1 C constr
R8389:8389 Smallstep SimpleArith1 C constr
R8481:8488 Smallstep SimpleArith1 ST_Plus2 constr
R8481:8488 Smallstep SimpleArith1 ST_Plus2 constr
R8497:8504 Smallstep SimpleArith1 ST_Plus2 constr
R8497:8504 Smallstep SimpleArith1 ST_Plus2 constr
R8513:8529 Smallstep SimpleArith1 ST_PlusConstConst constr
R8513:8529 Smallstep SimpleArith1 ST_PlusConstConst constr
def 9912:9924 SimpleArith1 deterministic
R9940:9947 Smallstep SimpleArith1 relation def
R9949:9949 Smallstep <> X var
R9974:9974 Smallstep <> X var
R9999:10001 Coq.Init.Logic <> :type_scope:x_'='_x not
R9997:9998 Smallstep <> y1 var
R10002:10003 Smallstep <> y2 var
R9987:9987 Smallstep <> R var
R9991:9992 Smallstep <> y2 var
R9989:9989 Smallstep <> x var
R9977:9977 Smallstep <> R var
R9981:9982 Smallstep <> y1 var
R9979:9979 Smallstep <> x var
prf 10016:10033 SimpleArith1 step_deterministic
R10038:10050 Smallstep SimpleArith1 deterministic def
R10052:10055 Smallstep SimpleArith1 step ind
R10074:10086 Smallstep SimpleArith1 deterministic def
R10915:10926 Smallstep <> <> mod
ind 12044:12048 <> value
constr 12068:12074 <> v_const
R12052:12053 Smallstep <> tm ind
R12088:12092 Smallstep <> value ind
R12095:12095 Smallstep <> C constr
R12097:12097 Smallstep <> n var
ind 13290:13293 <> step
constr 13321:13337 <> ST_PlusConstConst
constr 13407:13414 <> ST_Plus1
constr 13491:13498 <> ST_Plus2
R13303:13304 Smallstep <> tm ind
R13297:13298 Smallstep <> tm ind
R13658:13661 Smallstep <> step ind
R13380:13390 Smallstep <> ::x_'==>'_x not
R13365:13365 Smallstep <> P constr
R13375:13375 Smallstep <> C constr
R13377:13378 Smallstep <> n2 var
R13368:13368 Smallstep <> C constr
R13370:13371 Smallstep <> n1 var
R13391:13391 Smallstep <> C constr
R13396:13398 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13394:13395 Smallstep <> n1 var
R13399:13400 Smallstep <> n2 var
R13473:13477 Smallstep <> ::x_'==>'_x not
R13466:13466 Smallstep <> P constr
R13471:13472 Smallstep <> t2 var
R13468:13469 Smallstep <> t1 var
R13478:13478 Smallstep <> P constr
R13484:13485 Smallstep <> t2 var
R13480:13482 Smallstep <> t1' var
R13446:13450 Smallstep <> ::x_'==>'_x not
R13444:13445 Smallstep <> t1 var
R13451:13453 Smallstep <> t1' var
R13616:13620 Smallstep <> ::x_'==>'_x not
R13609:13609 Smallstep <> P constr
R13614:13615 Smallstep <> t2 var
R13611:13612 Smallstep <> v1 var
R13621:13621 Smallstep <> P constr
R13626:13628 Smallstep <> t2' var
R13623:13624 Smallstep <> v1 var
R13589:13593 Smallstep <> ::x_'==>'_x not
R13587:13588 Smallstep <> t2 var
R13594:13596 Smallstep <> t2' var
R13528:13532 Smallstep <> value ind
R13534:13535 Smallstep <> v1 var
R13658:13661 Smallstep <> step ind
not 13639 <> ::x_'==>'_x
prf 15055:15072 <> step_deterministic
R15078:15090 SfLib <> deterministic def
R15092:15095 Smallstep <> step ind
R15132:15144 SfLib <> deterministic def
prf 17259:17273 <> strong_progress
R17296:17300 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17320:17320 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17289:17293 Smallstep <> value ind
R17295:17295 Smallstep <> t var
R17301:17307 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17310:17311 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R17313:17317 Smallstep <> ::x_'==>'_x not
R17312:17312 Smallstep <> t var
R17318:17319 Smallstep <> t' var
R17389:17395 Smallstep <> v_const constr
R17389:17395 Smallstep <> v_const constr
R17533:17533 Smallstep <> C constr
R17537:17539 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R17533:17533 Smallstep <> C constr
R17537:17539 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R17562:17578 Smallstep <> ST_PlusConstConst constr
R17562:17578 Smallstep <> ST_PlusConstConst constr
R17644:17644 Smallstep <> P constr
R17644:17644 Smallstep <> P constr
R17670:17677 Smallstep <> ST_Plus2 constr
R17670:17677 Smallstep <> ST_Plus2 constr
R17759:17759 Smallstep <> P constr
R17759:17759 Smallstep <> P constr
R17785:17792 Smallstep <> ST_Plus1 constr
R17785:17792 Smallstep <> ST_Plus1 constr
def 18474:18484 <> normal_form
R18498:18505 Smallstep <> relation def
R18507:18507 Smallstep <> X var
R18513:18513 Smallstep <> X var
R18528:18529 Coq.Init.Logic <> :type_scope:'~'_x not
R18530:18536 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18539:18540 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R18541:18541 Smallstep <> R var
R18545:18546 Smallstep <> t' var
R18543:18543 Smallstep <> t var
prf 19095:19105 <> value_is_nf
R19132:19142 Smallstep <> normal_form def
R19149:19149 Smallstep <> v var
R19144:19147 Smallstep <> step ind
R19121:19125 Smallstep <> value ind
R19127:19127 Smallstep <> v var
R19168:19178 Smallstep <> normal_form def
prf 19267:19277 <> nf_is_value
R19315:19319 Smallstep <> value ind
R19321:19321 Smallstep <> t var
R19293:19303 Smallstep <> normal_form def
R19310:19310 Smallstep <> t var
R19305:19308 Smallstep <> step ind
R19382:19392 Smallstep <> normal_form def
R19428:19431 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19421:19425 Smallstep <> value ind
R19432:19438 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19441:19442 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19444:19448 Smallstep <> ::x_'==>'_x not
R19449:19450 Smallstep <> t' var
R19428:19431 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19421:19425 Smallstep <> value ind
R19432:19438 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19441:19442 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R19444:19448 Smallstep <> ::x_'==>'_x not
R19449:19450 Smallstep <> t' var
R19492:19506 Smallstep <> strong_progress thm
R19492:19506 Smallstep <> strong_progress thm
R19570:19587 SfLib <> ex_falso_quodlibet thm
R19570:19587 SfLib <> ex_falso_quodlibet thm
prf 19628:19643 <> nf_same_as_value
R19677:19681 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19659:19669 Smallstep <> normal_form def
R19676:19676 Smallstep <> t var
R19671:19674 Smallstep <> step ind
R19682:19686 Smallstep <> value ind
R19688:19688 Smallstep <> t var
R19713:19723 Smallstep <> nf_is_value thm
R19713:19723 Smallstep <> nf_is_value thm
R19732:19742 Smallstep <> value_is_nf thm
R19732:19742 Smallstep <> value_is_nf thm
mod 20331:20335 <> Temp1
ind 20412:20416 Temp1 value
constr 20436:20442 Temp1 v_const
constr 20470:20476 Temp1 v_funny
R20420:20421 Smallstep Temp1 tm ind
R20456:20460 Smallstep <> value ind
R20463:20463 Smallstep Temp1 C constr
R20465:20465 Smallstep <> n var
R20542:20546 Smallstep <> value ind
R20549:20549 Smallstep Temp1 P constr
R20555:20555 Smallstep Temp1 C constr
R20557:20558 Smallstep <> n2 var
R20551:20552 Smallstep <> t1 var
ind 20625:20628 Temp1 step
constr 20656:20672 Temp1 ST_PlusConstConst
constr 20732:20739 Temp1 ST_Plus1
constr 20812:20819 Temp1 ST_Plus2
R20638:20639 Smallstep Temp1 tm ind
R20632:20633 Smallstep Temp1 tm ind
R20934:20937 Smallstep <> step ind
R20711:20715 Smallstep Temp1 ::x_'==>'_x not
R20696:20696 Smallstep Temp1 P constr
R20706:20706 Smallstep Temp1 C constr
R20708:20709 Smallstep <> n2 var
R20699:20699 Smallstep Temp1 C constr
R20701:20702 Smallstep <> n1 var
R20716:20716 Smallstep Temp1 C constr
R20721:20723 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R20719:20720 Smallstep <> n1 var
R20724:20725 Smallstep <> n2 var
R20794:20798 Smallstep Temp1 ::x_'==>'_x not
R20787:20787 Smallstep Temp1 P constr
R20792:20793 Smallstep <> t2 var
R20789:20790 Smallstep <> t1 var
R20799:20799 Smallstep Temp1 P constr
R20805:20806 Smallstep <> t2 var
R20801:20803 Smallstep <> t1' var
R20769:20773 Smallstep Temp1 ::x_'==>'_x not
R20767:20768 Smallstep <> t1 var
R20774:20776 Smallstep <> t1' var
R20892:20896 Smallstep Temp1 ::x_'==>'_x not
R20885:20885 Smallstep Temp1 P constr
R20890:20891 Smallstep <> t2 var
R20887:20888 Smallstep <> v1 var
R20897:20897 Smallstep Temp1 P constr
R20902:20904 Smallstep <> t2' var
R20899:20900 Smallstep <> v1 var
R20867:20871 Smallstep Temp1 ::x_'==>'_x not
R20865:20866 Smallstep <> t2 var
R20872:20874 Smallstep <> t2' var
R20847:20851 Smallstep Temp1 value ind
R20853:20854 Smallstep <> v1 var
R20934:20937 Smallstep Temp1 step ind
not 20915 Temp1 ::x_'==>'_x
prf 21034:21062 Temp1 value_not_same_as_normal_form
R21068:21074 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21076:21077 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21085:21088 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R21078:21082 Smallstep Temp1 value ind
R21084:21084 Smallstep <> v var
R21089:21090 Coq.Init.Logic <> :type_scope:'~'_x not
R21091:21101 Smallstep Temp1 normal_form def
R21108:21108 Smallstep <> v var
R21103:21106 Smallstep Temp1 step ind
R21147:21147 Smallstep Temp1 P constr
R21156:21156 Smallstep Temp1 C constr
R21150:21150 Smallstep Temp1 C constr
R21147:21147 Smallstep Temp1 P constr
R21156:21156 Smallstep Temp1 C constr
R21150:21150 Smallstep Temp1 C constr
R21192:21198 Smallstep Temp1 v_funny constr
R21192:21198 Smallstep Temp1 v_funny constr
R21222:21232 Smallstep Temp1 normal_form def
R21242:21244 Coq.Init.Logic <> not def
R21280:21280 Smallstep Temp1 C constr
R21284:21286 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21280:21280 Smallstep Temp1 C constr
R21284:21286 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21304:21320 Smallstep Temp1 ST_PlusConstConst constr
R21304:21320 Smallstep Temp1 ST_PlusConstConst constr
R21344:21348 Smallstep <> <> mod
mod 21550:21554 <> Temp2
ind 21568:21572 Temp2 value
constr 21592:21598 Temp2 v_const
R21576:21577 Smallstep Temp2 tm ind
R21612:21616 Smallstep <> value ind
R21619:21619 Smallstep Temp2 C constr
R21621:21621 Smallstep <> n var
ind 21685:21688 Temp2 step
constr 21716:21723 Temp2 ST_Funny
constr 21805:21821 Temp2 ST_PlusConstConst
constr 21881:21888 Temp2 ST_Plus1
constr 21961:21968 Temp2 ST_Plus2
R21698:21699 Smallstep Temp2 tm ind
R21692:21693 Smallstep Temp2 tm ind
R22083:22086 Smallstep <> step ind
R21782:21786 Smallstep Temp2 ::x_'==>'_x not
R21779:21779 Smallstep Temp2 C constr
R21781:21781 Smallstep <> n var
R21787:21787 Smallstep Temp2 P constr
R21796:21796 Smallstep Temp2 C constr
R21790:21790 Smallstep Temp2 C constr
R21792:21792 Smallstep <> n var
R21860:21864 Smallstep Temp2 ::x_'==>'_x not
R21845:21845 Smallstep Temp2 P constr
R21855:21855 Smallstep Temp2 C constr
R21857:21858 Smallstep <> n2 var
R21848:21848 Smallstep Temp2 C constr
R21850:21851 Smallstep <> n1 var
R21865:21865 Smallstep Temp2 C constr
R21870:21872 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21868:21869 Smallstep <> n1 var
R21873:21874 Smallstep <> n2 var
R21943:21947 Smallstep Temp2 ::x_'==>'_x not
R21936:21936 Smallstep Temp2 P constr
R21941:21942 Smallstep <> t2 var
R21938:21939 Smallstep <> t1 var
R21948:21948 Smallstep Temp2 P constr
R21954:21955 Smallstep <> t2 var
R21950:21952 Smallstep <> t1' var
R21918:21922 Smallstep Temp2 ::x_'==>'_x not
R21916:21917 Smallstep <> t1 var
R21923:21925 Smallstep <> t1' var
R22041:22045 Smallstep Temp2 ::x_'==>'_x not
R22034:22034 Smallstep Temp2 P constr
R22039:22040 Smallstep <> t2 var
R22036:22037 Smallstep <> v1 var
R22046:22046 Smallstep Temp2 P constr
R22051:22053 Smallstep <> t2' var
R22048:22049 Smallstep <> v1 var
R22016:22020 Smallstep Temp2 ::x_'==>'_x not
R22014:22015 Smallstep <> t2 var
R22021:22023 Smallstep <> t2' var
R21996:22000 Smallstep Temp2 value ind
R22002:22003 Smallstep <> v1 var
R22083:22086 Smallstep Temp2 step ind
not 22064 Temp2 ::x_'==>'_x
prf 22183:22211 Temp2 value_not_same_as_normal_form
R22217:22223 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22225:22226 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22234:22237 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22227:22231 Smallstep Temp2 value ind
R22233:22233 Smallstep <> v var
R22238:22239 Coq.Init.Logic <> :type_scope:'~'_x not
R22240:22250 Smallstep Temp2 normal_form def
R22257:22257 Smallstep <> v var
R22252:22255 Smallstep Temp2 step ind
R22295:22295 Smallstep Temp2 C constr
R22295:22295 Smallstep Temp2 C constr
R22330:22336 Smallstep Temp2 v_const constr
R22330:22336 Smallstep Temp2 v_const constr
R22360:22370 Smallstep Temp2 normal_form def
R22380:22382 Coq.Init.Logic <> not def
R22418:22418 Smallstep Temp2 P constr
R22427:22427 Smallstep Temp2 C constr
R22421:22421 Smallstep Temp2 C constr
R22418:22418 Smallstep Temp2 P constr
R22427:22427 Smallstep Temp2 C constr
R22421:22421 Smallstep Temp2 C constr
R22446:22453 Smallstep Temp2 ST_Funny constr
R22446:22453 Smallstep Temp2 ST_Funny constr
R22478:22482 Smallstep <> <> mod
mod 22951:22955 <> Temp3
ind 22969:22973 Temp3 value
constr 22995:23001 Temp3 v_const
R22977:22978 Smallstep Temp3 tm ind
R23015:23019 Smallstep <> value ind
R23022:23022 Smallstep Temp3 C constr
R23024:23024 Smallstep <> n var
ind 23088:23091 Temp3 step
constr 23119:23135 Temp3 ST_PlusConstConst
constr 23195:23202 Temp3 ST_Plus1
R23101:23102 Smallstep Temp3 tm ind
R23095:23096 Smallstep Temp3 tm ind
R23299:23302 Smallstep <> step ind
R23174:23178 Smallstep Temp3 ::x_'==>'_x not
R23159:23159 Smallstep Temp3 P constr
R23169:23169 Smallstep Temp3 C constr
R23171:23172 Smallstep <> n2 var
R23162:23162 Smallstep Temp3 C constr
R23164:23165 Smallstep <> n1 var
R23179:23179 Smallstep Temp3 C constr
R23184:23186 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23182:23183 Smallstep <> n1 var
R23187:23188 Smallstep <> n2 var
R23257:23261 Smallstep Temp3 ::x_'==>'_x not
R23250:23250 Smallstep Temp3 P constr
R23255:23256 Smallstep <> t2 var
R23252:23253 Smallstep <> t1 var
R23262:23262 Smallstep Temp3 P constr
R23268:23269 Smallstep <> t2 var
R23264:23266 Smallstep <> t1' var
R23232:23236 Smallstep Temp3 ::x_'==>'_x not
R23230:23231 Smallstep <> t1 var
R23237:23239 Smallstep <> t1' var
R23299:23302 Smallstep Temp3 step ind
not 23280 Temp3 ::x_'==>'_x
prf 23442:23470 Temp3 value_not_same_as_normal_form
R23476:23482 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23484:23485 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23495:23498 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23486:23487 Coq.Init.Logic <> :type_scope:'~'_x not
R23488:23492 Smallstep Temp3 value ind
R23494:23494 Smallstep <> t var
R23499:23509 Smallstep Temp3 normal_form def
R23516:23516 Smallstep <> t var
R23511:23514 Smallstep Temp3 step ind
R23554:23554 Smallstep Temp3 P constr
R23581:23581 Smallstep Temp3 P constr
R23590:23590 Smallstep Temp3 C constr
R23584:23584 Smallstep Temp3 C constr
R23557:23557 Smallstep Temp3 C constr
R23554:23554 Smallstep Temp3 P constr
R23581:23581 Smallstep Temp3 P constr
R23590:23590 Smallstep Temp3 C constr
R23584:23584 Smallstep Temp3 C constr
R23557:23557 Smallstep Temp3 C constr
R23665:23675 Smallstep Temp3 normal_form def
R23685:23687 Coq.Init.Logic <> not def
R23768:23772 Smallstep <> <> mod
mod 23882:23886 <> Temp4
ind 24075:24076 Temp4 tm
constr 24092:24096 Temp4 ttrue
constr 24107:24112 Temp4 tfalse
constr 24123:24125 Temp4 tif
R24100:24101 Smallstep <> tm ind
R24116:24117 Smallstep <> tm ind
R24147:24148 Smallstep <> tm ind
R24141:24142 Smallstep <> tm ind
R24135:24136 Smallstep <> tm ind
R24129:24130 Smallstep <> tm ind
ind 24162:24166 Temp4 value
constr 24188:24193 Temp4 v_true
constr 24213:24219 Temp4 v_false
R24170:24171 Smallstep Temp4 tm ind
R24197:24201 Smallstep <> value ind
R24203:24207 Smallstep Temp4 ttrue constr
R24223:24227 Smallstep <> value ind
R24229:24234 Smallstep Temp4 tfalse constr
ind 24297:24300 Temp4 step
constr 24328:24336 Temp4 ST_IfTrue
constr 24387:24396 Temp4 ST_IfFalse
constr 24448:24452 Temp4 ST_If
R24310:24311 Smallstep Temp4 tm ind
R24304:24305 Smallstep Temp4 tm ind
R24562:24565 Smallstep <> step ind
R24375:24379 Smallstep Temp4 ::x_'==>'_x not
R24360:24362 Smallstep Temp4 tif constr
R24373:24374 Smallstep <> t2 var
R24370:24371 Smallstep <> t1 var
R24364:24368 Smallstep Temp4 ttrue constr
R24380:24381 Smallstep <> t1 var
R24436:24440 Smallstep Temp4 ::x_'==>'_x not
R24420:24422 Smallstep Temp4 tif constr
R24434:24435 Smallstep <> t2 var
R24431:24432 Smallstep <> t1 var
R24424:24429 Smallstep Temp4 tfalse constr
R24441:24442 Smallstep <> t2 var
R24515:24519 Smallstep Temp4 ::x_'==>'_x not
R24503:24505 Smallstep Temp4 tif constr
R24513:24514 Smallstep <> t3 var
R24510:24511 Smallstep <> t2 var
R24507:24508 Smallstep <> t1 var
R24520:24522 Smallstep Temp4 tif constr
R24531:24532 Smallstep <> t3 var
R24528:24529 Smallstep <> t2 var
R24524:24526 Smallstep <> t1' var
R24485:24489 Smallstep Temp4 ::x_'==>'_x not
R24483:24484 Smallstep <> t1 var
R24490:24492 Smallstep <> t1' var
R24562:24565 Smallstep Temp4 step ind
not 24543 Temp4 ::x_'==>'_x
def 24803:24817 Temp4 bool_step_prop1
R24830:24834 Smallstep Temp4 ::x_'==>'_x not
R24824:24829 Smallstep Temp4 tfalse constr
R24835:24840 Smallstep Temp4 tfalse constr
prf 24897:24915 Temp4 not_bool_step_prop1
R24921:24922 Coq.Init.Logic <> :type_scope:'~'_x not
R24923:24937 Smallstep Temp4 bool_step_prop1 def
R24956:24970 Smallstep Temp4 bool_step_prop1 def
def 25016:25030 Temp4 bool_step_prop2
R25121:25133 Smallstep Temp4 ::x_'==>'_x not
R25040:25042 Smallstep Temp4 tif constr
R25096:25098 Smallstep Temp4 tif constr
R25114:25119 Smallstep Temp4 tfalse constr
R25107:25112 Smallstep Temp4 tfalse constr
R25100:25105 Smallstep Temp4 tfalse constr
R25065:25067 Smallstep Temp4 tif constr
R25081:25085 Smallstep Temp4 ttrue constr
R25075:25079 Smallstep Temp4 ttrue constr
R25069:25073 Smallstep Temp4 ttrue constr
R25051:25055 Smallstep Temp4 ttrue constr
R25134:25138 Smallstep Temp4 ttrue constr
prf 25255:25273 Temp4 not_bool_step_prop2
R25279:25280 Coq.Init.Logic <> :type_scope:'~'_x not
R25281:25295 Smallstep Temp4 bool_step_prop2 def
R25314:25328 Smallstep Temp4 bool_step_prop2 def
def 25374:25388 Temp4 bool_step_prop3
R25477:25490 Smallstep Temp4 ::x_'==>'_x not
R25398:25400 Smallstep Temp4 tif constr
R25471:25476 Smallstep Temp4 tfalse constr
R25441:25443 Smallstep Temp4 tif constr
R25457:25461 Smallstep Temp4 ttrue constr
R25451:25455 Smallstep Temp4 ttrue constr
R25445:25449 Smallstep Temp4 ttrue constr
R25410:25412 Smallstep Temp4 tif constr
R25426:25430 Smallstep Temp4 ttrue constr
R25420:25424 Smallstep Temp4 ttrue constr
R25414:25418 Smallstep Temp4 ttrue constr
R25491:25493 Smallstep Temp4 tif constr
R25546:25551 Smallstep Temp4 tfalse constr
R25516:25518 Smallstep Temp4 tif constr
R25532:25536 Smallstep Temp4 ttrue constr
R25526:25530 Smallstep Temp4 ttrue constr
R25520:25524 Smallstep Temp4 ttrue constr
R25502:25506 Smallstep Temp4 ttrue constr
prf 25629:25646 Temp4 bool_step_prop3_pf
R25652:25666 Smallstep Temp4 bool_step_prop3 def
R25685:25699 Smallstep Temp4 bool_step_prop3 def
R25711:25715 Smallstep Temp4 ST_If constr
R25711:25715 Smallstep Temp4 ST_If constr
R25724:25732 Smallstep Temp4 ST_IfTrue constr
R25724:25732 Smallstep Temp4 ST_IfTrue constr
prf 25934:25948 Temp4 strong_progress
R25971:25975 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25995:25995 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25964:25968 Smallstep Temp4 value ind
R25970:25970 Smallstep <> t var
R25976:25982 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25985:25986 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25988:25992 Smallstep Temp4 ::x_'==>'_x not
R25987:25987 Smallstep <> t var
R25993:25994 Smallstep <> t' var
R26068:26073 Smallstep Temp4 v_true constr
R26068:26073 Smallstep Temp4 v_true constr
R26105:26111 Smallstep Temp4 v_false constr
R26105:26111 Smallstep Temp4 v_false constr
R26227:26235 Smallstep Temp4 ST_IfTrue constr
R26227:26235 Smallstep Temp4 ST_IfTrue constr
R26252:26261 Smallstep Temp4 ST_IfFalse constr
R26252:26261 Smallstep Temp4 ST_IfFalse constr
R26341:26345 Smallstep Temp4 ST_If constr
R26341:26345 Smallstep Temp4 ST_If constr
prf 26447:26464 Temp4 step_deterministic
R26470:26482 SfLib <> deterministic def
R26484:26487 Smallstep Temp4 step ind
R26524:26536 SfLib <> deterministic def
mod 27067:27071 <> Temp4.Temp5
ind 27843:27846 Temp4.Temp5 step
constr 27874:27882 Temp4.Temp5 ST_IfTrue
constr 27933:27942 Temp4.Temp5 ST_IfFalse
constr 27994:27998 Temp4.Temp5 ST_If
constr 28100:28114 Temp4.Temp5 ST_ShortCircuit
R27856:27857 Smallstep Temp4.Temp5 tm ind
R27850:27851 Smallstep Temp4.Temp5 tm ind
R28210:28213 Smallstep <> step ind
R27921:27925 Smallstep Temp4.Temp5 ::x_'==>'_x not
R27906:27908 Smallstep Temp4.Temp5 tif constr
R27919:27920 Smallstep <> t2 var
R27916:27917 Smallstep <> t1 var
R27910:27914 Smallstep Temp4.Temp5 ttrue constr
R27926:27927 Smallstep <> t1 var
R27982:27986 Smallstep Temp4.Temp5 ::x_'==>'_x not
R27966:27968 Smallstep Temp4.Temp5 tif constr
R27980:27981 Smallstep <> t2 var
R27977:27978 Smallstep <> t1 var
R27970:27975 Smallstep Temp4.Temp5 tfalse constr
R27987:27988 Smallstep <> t2 var
R28061:28065 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28049:28051 Smallstep Temp4.Temp5 tif constr
R28059:28060 Smallstep <> t3 var
R28056:28057 Smallstep <> t2 var
R28053:28054 Smallstep <> t1 var
R28066:28068 Smallstep Temp4.Temp5 tif constr
R28077:28078 Smallstep <> t3 var
R28074:28075 Smallstep <> t2 var
R28070:28072 Smallstep <> t1' var
R28031:28035 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28029:28030 Smallstep <> t1 var
R28036:28038 Smallstep <> t1' var
R28168:28172 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28156:28158 Smallstep Temp4.Temp5 tif constr
R28166:28167 Smallstep <> v2 var
R28163:28164 Smallstep <> v2 var
R28160:28161 Smallstep <> t1 var
R28173:28174 Smallstep <> v2 var
R28138:28142 Smallstep Temp4.Temp5 value ind
R28144:28145 Smallstep <> v2 var
R28210:28213 Smallstep Temp4.Temp5 step ind
not 28191 Temp4.Temp5 ::x_'==>'_x
def 28244:28258 Temp4.Temp5 bool_step_prop4
R28349:28368 Smallstep Temp4.Temp5 ::x_'==>'_x not
R28272:28274 Smallstep Temp4.Temp5 tif constr
R28343:28348 Smallstep Temp4.Temp5 tfalse constr
R28324:28329 Smallstep Temp4.Temp5 tfalse constr
R28289:28291 Smallstep Temp4.Temp5 tif constr
R28305:28309 Smallstep Temp4.Temp5 ttrue constr
R28299:28303 Smallstep Temp4.Temp5 ttrue constr
R28293:28297 Smallstep Temp4.Temp5 ttrue constr
R28369:28374 Smallstep Temp4.Temp5 tfalse constr
def 28386:28406 Temp4.Temp5 bool_step_prop4_holds
R28413:28427 Smallstep Temp4.Temp5 bool_step_prop4 def
R28464:28478 Smallstep Temp4.Temp5 bool_step_prop4 def
R28489:28503 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R28489:28503 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R28512:28518 Smallstep Temp4.Temp5 v_false constr
R28512:28518 Smallstep Temp4.Temp5 v_false constr
prf 29166:29186 Temp4.Temp5 step_nondeterministic
R29192:29193 Coq.Init.Logic <> :type_scope:'~'_x not
R29194:29206 SfLib <> deterministic def
R29208:29211 Smallstep Temp4.Temp5 step ind
R29230:29242 SfLib <> deterministic def
R29269:29271 Smallstep Temp4.Temp5 tif constr
R29303:29307 Smallstep Temp4.Temp5 ttrue constr
R29297:29301 Smallstep Temp4.Temp5 ttrue constr
R29274:29276 Smallstep Temp4.Temp5 tif constr
R29290:29294 Smallstep Temp4.Temp5 ttrue constr
R29284:29288 Smallstep Temp4.Temp5 ttrue constr
R29278:29282 Smallstep Temp4.Temp5 ttrue constr
R29269:29271 Smallstep Temp4.Temp5 tif constr
R29303:29307 Smallstep Temp4.Temp5 ttrue constr
R29297:29301 Smallstep Temp4.Temp5 ttrue constr
R29274:29276 Smallstep Temp4.Temp5 tif constr
R29290:29294 Smallstep Temp4.Temp5 ttrue constr
R29284:29288 Smallstep Temp4.Temp5 ttrue constr
R29278:29282 Smallstep Temp4.Temp5 ttrue constr
R29327:29331 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29332:29334 Smallstep Temp4.Temp5 tif constr
R29348:29352 Smallstep Temp4.Temp5 ttrue constr
R29342:29346 Smallstep Temp4.Temp5 ttrue constr
R29336:29340 Smallstep Temp4.Temp5 ttrue constr
R29327:29331 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29332:29334 Smallstep Temp4.Temp5 tif constr
R29348:29352 Smallstep Temp4.Temp5 ttrue constr
R29342:29346 Smallstep Temp4.Temp5 ttrue constr
R29336:29340 Smallstep Temp4.Temp5 ttrue constr
R29383:29387 Smallstep Temp4.Temp5 ST_If constr
R29383:29387 Smallstep Temp4.Temp5 ST_If constr
R29396:29404 Smallstep Temp4.Temp5 ST_IfTrue constr
R29396:29404 Smallstep Temp4.Temp5 ST_IfTrue constr
R29418:29422 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29423:29427 Smallstep Temp4.Temp5 ttrue constr
R29418:29422 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29423:29427 Smallstep Temp4.Temp5 ttrue constr
R29457:29471 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R29457:29471 Smallstep Temp4.Temp5 ST_ShortCircuit constr
R29482:29487 Smallstep Temp4.Temp5 v_true constr
R29482:29487 Smallstep Temp4.Temp5 v_true constr
R29521:29523 Coq.Init.Logic <> :type_scope:x_'='_x not
R29500:29502 Smallstep Temp4.Temp5 tif constr
R29516:29520 Smallstep Temp4.Temp5 ttrue constr
R29510:29514 Smallstep Temp4.Temp5 ttrue constr
R29504:29508 Smallstep Temp4.Temp5 ttrue constr
R29524:29528 Smallstep Temp4.Temp5 ttrue constr
R29521:29523 Coq.Init.Logic <> :type_scope:x_'='_x not
R29500:29502 Smallstep Temp4.Temp5 tif constr
R29516:29520 Smallstep Temp4.Temp5 ttrue constr
R29510:29514 Smallstep Temp4.Temp5 ttrue constr
R29504:29508 Smallstep Temp4.Temp5 ttrue constr
R29524:29528 Smallstep Temp4.Temp5 ttrue constr
prf 29922:29936 Temp4.Temp5 strong_progress
R29959:29963 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29983:29983 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R29952:29956 Smallstep Temp4.Temp5 value ind
R29958:29958 Smallstep <> t var
R29964:29970 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29973:29974 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29976:29980 Smallstep Temp4.Temp5 ::x_'==>'_x not
R29975:29975 Smallstep <> t var
R29981:29982 Smallstep <> t' var
R30038:30043 Smallstep Temp4.Temp5 v_true constr
R30038:30043 Smallstep Temp4.Temp5 v_true constr
R30075:30081 Smallstep Temp4.Temp5 v_false constr
R30075:30081 Smallstep Temp4.Temp5 v_false constr
R30197:30205 Smallstep Temp4.Temp5 ST_IfTrue constr
R30197:30205 Smallstep Temp4.Temp5 ST_IfTrue constr
R30222:30231 Smallstep Temp4.Temp5 ST_IfFalse constr
R30222:30231 Smallstep Temp4.Temp5 ST_IfFalse constr
R30311:30315 Smallstep Temp4.Temp5 ST_If constr
R30311:30315 Smallstep Temp4.Temp5 ST_If constr
R30769:30773 Smallstep Temp5 <> mod
R30780:30784 Smallstep <> <> mod
ind 31911:31915 <> multi
constr 31962:31971 <> multi_refl
constr 32008:32017 <> multi_step
R31930:31937 Smallstep <> relation def
R31939:31939 Smallstep <> X var
R31944:31951 Smallstep <> relation def
R31992:31996 Smallstep <> multi ind
R32002:32002 Smallstep <> x var
R32000:32000 Smallstep <> x var
R32125:32129 Smallstep <> multi ind
R32135:32135 Smallstep <> z var
R32133:32133 Smallstep <> x var
R32090:32094 Smallstep <> multi ind
R32100:32100 Smallstep <> z var
R32098:32098 Smallstep <> y var
R32065:32065 Smallstep <> y var
R32063:32063 Smallstep <> x var
def 32900:32908 <> multistep
R32913:32917 Smallstep <> multi ind
R32919:32922 Smallstep <> step ind
R32954:32962 Smallstep <> multistep def
not 32934 <> ::x_'==>*'_x
prf 33506:33512 <> multi_R
R33535:33542 Smallstep <> relation def
R33544:33544 Smallstep <> X var
R33554:33554 Smallstep <> X var
R33575:33579 Smallstep <> multi ind
R33581:33581 Smallstep <> R var
R33586:33586 Smallstep <> y var
R33584:33584 Smallstep <> x var
R33565:33565 Smallstep <> R var
R33569:33569 Smallstep <> y var
R33567:33567 Smallstep <> x var
R33624:33633 Smallstep <> multi_step constr
R33624:33633 Smallstep <> multi_step constr
R33658:33667 Smallstep <> multi_refl constr
R33658:33667 Smallstep <> multi_refl constr
prf 33728:33738 <> multi_trans
R33764:33771 Smallstep <> relation def
R33773:33773 Smallstep <> X var
R33785:33785 Smallstep <> X var
R33838:33842 Smallstep <> multi ind
R33848:33848 Smallstep <> z var
R33846:33846 Smallstep <> x var
R33844:33844 Smallstep <> R var
R33817:33821 Smallstep <> multi ind
R33827:33827 Smallstep <> z var
R33825:33825 Smallstep <> y var
R33823:33823 Smallstep <> R var
R33795:33799 Smallstep <> multi ind
R33805:33805 Smallstep <> y var
R33803:33803 Smallstep <> x var
R33801:33801 Smallstep <> R var
R33987:33996 Smallstep <> multi_step constr
R33987:33996 Smallstep <> multi_step constr
prf 34211:34226 <> test_multistep_1
R34284:34299 Smallstep <> ::x_'==>*'_x not
R34235:34235 Smallstep <> P constr
R34270:34270 Smallstep <> P constr
R34279:34279 Smallstep <> C constr
R34273:34273 Smallstep <> C constr
R34246:34246 Smallstep <> P constr
R34255:34255 Smallstep <> C constr
R34249:34249 Smallstep <> C constr
R34300:34300 Smallstep <> C constr
R34303:34303 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34309:34313 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34319:34319 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34305:34307 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34315:34317 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34368:34368 Smallstep <> P constr
R34415:34415 Smallstep <> P constr
R34424:34424 Smallstep <> C constr
R34418:34418 Smallstep <> C constr
R34387:34387 Smallstep <> C constr
R34391:34393 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34338:34347 Smallstep <> multi_step constr
R34368:34368 Smallstep <> P constr
R34415:34415 Smallstep <> P constr
R34424:34424 Smallstep <> C constr
R34418:34418 Smallstep <> C constr
R34387:34387 Smallstep <> C constr
R34391:34393 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34338:34347 Smallstep <> multi_step constr
R34440:34447 Smallstep <> ST_Plus1 constr
R34440:34447 Smallstep <> ST_Plus1 constr
R34456:34472 Smallstep <> ST_PlusConstConst constr
R34456:34472 Smallstep <> ST_PlusConstConst constr
R34512:34512 Smallstep <> P constr
R34559:34559 Smallstep <> C constr
R34563:34565 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34531:34531 Smallstep <> C constr
R34535:34537 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34483:34492 Smallstep <> multi_step constr
R34512:34512 Smallstep <> P constr
R34559:34559 Smallstep <> C constr
R34563:34565 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34531:34531 Smallstep <> C constr
R34535:34537 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34483:34492 Smallstep <> multi_step constr
R34580:34587 Smallstep <> ST_Plus2 constr
R34580:34587 Smallstep <> ST_Plus2 constr
R34596:34602 Smallstep <> v_const constr
R34596:34602 Smallstep <> v_const constr
R34614:34630 Smallstep <> ST_PlusConstConst constr
R34614:34630 Smallstep <> ST_PlusConstConst constr
R34642:34648 Smallstep <> multi_R thm
R34642:34648 Smallstep <> multi_R thm
R34660:34676 Smallstep <> ST_PlusConstConst constr
R34660:34676 Smallstep <> ST_PlusConstConst constr
prf 34809:34825 <> test_multistep_1'
R34883:34896 Smallstep <> ::x_'==>*'_x not
R34834:34834 Smallstep <> P constr
R34869:34869 Smallstep <> P constr
R34878:34878 Smallstep <> C constr
R34872:34872 Smallstep <> C constr
R34845:34845 Smallstep <> P constr
R34854:34854 Smallstep <> C constr
R34848:34848 Smallstep <> C constr
R34897:34897 Smallstep <> C constr
R34900:34900 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34906:34910 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34916:34916 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34902:34904 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34912:34914 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R34936:34945 Smallstep <> multi_step constr
R34936:34945 Smallstep <> multi_step constr
R34954:34961 Smallstep <> ST_Plus1 constr
R34954:34961 Smallstep <> ST_Plus1 constr
R34970:34986 Smallstep <> ST_PlusConstConst constr
R34970:34986 Smallstep <> ST_PlusConstConst constr
R34998:35007 Smallstep <> multi_step constr
R34998:35007 Smallstep <> multi_step constr
R35016:35023 Smallstep <> ST_Plus2 constr
R35016:35023 Smallstep <> ST_Plus2 constr
R35032:35038 Smallstep <> v_const constr
R35032:35038 Smallstep <> v_const constr
R35050:35066 Smallstep <> ST_PlusConstConst constr
R35050:35066 Smallstep <> ST_PlusConstConst constr
R35078:35087 Smallstep <> multi_step constr
R35078:35087 Smallstep <> multi_step constr
R35096:35112 Smallstep <> ST_PlusConstConst constr
R35096:35112 Smallstep <> ST_PlusConstConst constr
R35123:35132 Smallstep <> multi_refl constr
R35123:35132 Smallstep <> multi_refl constr
prf 35206:35221 <> test_multistep_2
R35229:35234 Smallstep <> ::x_'==>*'_x not
R35226:35226 Smallstep <> C constr
R35235:35235 Smallstep <> C constr
R35273:35282 Smallstep <> multi_refl constr
R35273:35282 Smallstep <> multi_refl constr
prf 35366:35381 <> test_multistep_3
R35403:35417 Smallstep <> ::x_'==>*'_x not
R35390:35390 Smallstep <> P constr
R35399:35399 Smallstep <> C constr
R35393:35393 Smallstep <> C constr
R35418:35418 Smallstep <> P constr
R35427:35427 Smallstep <> C constr
R35421:35421 Smallstep <> C constr
R35466:35475 Smallstep <> multi_refl constr
R35466:35475 Smallstep <> multi_refl constr
prf 35551:35566 <> test_multistep_4
R35644:35657 Smallstep <> ::x_'==>*'_x not
R35575:35575 Smallstep <> P constr
R35600:35600 Smallstep <> P constr
R35629:35629 Smallstep <> P constr
R35638:35638 Smallstep <> C constr
R35632:35632 Smallstep <> C constr
R35613:35613 Smallstep <> C constr
R35586:35586 Smallstep <> C constr
R35658:35658 Smallstep <> P constr
R35683:35683 Smallstep <> C constr
R35687:35690 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35696:35696 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35692:35694 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35669:35669 Smallstep <> C constr
R35758:35758 Smallstep <> P constr
R35791:35791 Smallstep <> P constr
R35828:35828 Smallstep <> C constr
R35832:35834 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35808:35808 Smallstep <> C constr
R35773:35773 Smallstep <> C constr
R35734:35743 Smallstep <> multi_step constr
R35758:35758 Smallstep <> P constr
R35791:35791 Smallstep <> P constr
R35828:35828 Smallstep <> C constr
R35832:35834 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R35808:35808 Smallstep <> C constr
R35773:35773 Smallstep <> C constr
R35734:35743 Smallstep <> multi_step constr
R35850:35857 Smallstep <> ST_Plus2 constr
R35850:35857 Smallstep <> ST_Plus2 constr
R35866:35872 Smallstep <> v_const constr
R35866:35872 Smallstep <> v_const constr
R35881:35888 Smallstep <> ST_Plus2 constr
R35881:35888 Smallstep <> ST_Plus2 constr
R35905:35911 Smallstep <> v_const constr
R35905:35911 Smallstep <> v_const constr
R35920:35936 Smallstep <> ST_PlusConstConst constr
R35920:35936 Smallstep <> ST_PlusConstConst constr
R35947:35953 Smallstep <> multi_R thm
R35947:35953 Smallstep <> multi_R thm
R35972:35979 Smallstep <> ST_Plus2 constr
R35972:35979 Smallstep <> ST_Plus2 constr
R35988:35994 Smallstep <> v_const constr
R35988:35994 Smallstep <> v_const constr
R36003:36019 Smallstep <> ST_PlusConstConst constr
R36003:36019 Smallstep <> ST_PlusConstConst constr
def 36274:36289 <> step_normal_form
R36294:36304 Smallstep <> normal_form def
R36306:36309 Smallstep <> step ind
def 36324:36337 <> normal_form_of
R36347:36348 Smallstep <> tm ind
R36366:36369 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R36358:36363 Smallstep <> ::x_'==>*'_x not
R36357:36357 Smallstep <> t var
R36364:36365 Smallstep <> t' var
R36370:36385 Smallstep <> step_normal_form def
R36387:36388 Smallstep <> t' var
prf 36834:36852 <> normal_forms_unique
R36857:36869 SfLib <> deterministic def
R36871:36884 Smallstep <> normal_form_of def
R36903:36915 SfLib <> deterministic def
R36925:36938 Smallstep <> normal_form_of def
R37335:37352 SfLib <> ex_falso_quodlibet thm
R37335:37352 SfLib <> ex_falso_quodlibet thm
R37442:37459 SfLib <> ex_falso_quodlibet thm
R37442:37459 SfLib <> ex_falso_quodlibet thm
R37564:37566 Coq.Init.Logic <> :type_scope:x_'='_x not
R37564:37566 Coq.Init.Logic <> :type_scope:x_'='_x not
R37579:37596 Smallstep <> step_deterministic thm
R37579:37596 Smallstep <> step_deterministic thm
def 37968:37978 <> normalizing
R37992:37999 Smallstep <> relation def
R38001:38001 Smallstep <> X var
R38019:38025 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38028:38033 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R38048:38051 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R38035:38039 Smallstep <> multi ind
R38041:38041 Smallstep <> R var
R38046:38047 Smallstep <> t' var
R38044:38044 Smallstep <> t var
R38052:38062 Smallstep <> normal_form def
R38066:38067 Smallstep <> t' var
R38064:38064 Smallstep <> R var
prf 38461:38477 <> multistep_congr_1
R38531:38536 Smallstep <> ::x_'==>*'_x not
R38524:38524 Smallstep <> P constr
R38529:38530 Smallstep <> t2 var
R38526:38527 Smallstep <> t1 var
R38537:38537 Smallstep <> P constr
R38543:38544 Smallstep <> t2 var
R38539:38541 Smallstep <> t1' var
R38506:38511 Smallstep <> ::x_'==>*'_x not
R38504:38505 Smallstep <> t1 var
R38512:38514 Smallstep <> t1' var
R38637:38646 Smallstep <> multi_refl constr
R38637:38646 Smallstep <> multi_refl constr
R38696:38696 Smallstep <> P constr
R38679:38688 Smallstep <> multi_step constr
R38696:38696 Smallstep <> P constr
R38679:38688 Smallstep <> multi_step constr
R38720:38727 Smallstep <> ST_Plus1 constr
R38720:38727 Smallstep <> ST_Plus1 constr
prf 38826:38842 <> multistep_congr_2
R38913:38918 Smallstep <> ::x_'==>*'_x not
R38906:38906 Smallstep <> P constr
R38911:38912 Smallstep <> t2 var
R38908:38909 Smallstep <> t1 var
R38919:38919 Smallstep <> P constr
R38924:38926 Smallstep <> t2' var
R38921:38922 Smallstep <> t1 var
R38888:38893 Smallstep <> ::x_'==>*'_x not
R38886:38887 Smallstep <> t2 var
R38894:38896 Smallstep <> t2' var
R38869:38873 Smallstep <> value ind
R38875:38876 Smallstep <> t1 var
R39040:39049 Smallstep <> multi_refl constr
R39040:39049 Smallstep <> multi_refl constr
R39106:39106 Smallstep <> P constr
R39089:39098 Smallstep <> multi_step constr
R39106:39106 Smallstep <> P constr
R39089:39098 Smallstep <> multi_step constr
R39130:39137 Smallstep <> ST_Plus2 constr
R39130:39137 Smallstep <> ST_Plus2 constr
prf 40250:40265 <> step_normalizing
R40271:40281 Smallstep <> normalizing def
R40283:40286 Smallstep <> step ind
R40305:40315 Smallstep <> normalizing def
R40378:40378 Smallstep <> C constr
R40378:40378 Smallstep <> C constr
R40421:40430 Smallstep <> multi_refl constr
R40421:40430 Smallstep <> multi_refl constr
R40558:40573 Smallstep <> nf_same_as_value thm
R40558:40573 Smallstep <> nf_same_as_value thm
R40582:40588 Smallstep <> v_const constr
R40582:40588 Smallstep <> v_const constr
R40785:40800 Smallstep <> nf_same_as_value thm
R40785:40800 Smallstep <> nf_same_as_value thm
R40818:40833 Smallstep <> nf_same_as_value thm
R40818:40833 Smallstep <> nf_same_as_value thm
R40966:40966 Smallstep <> C constr
R40971:40973 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R40966:40966 Smallstep <> C constr
R40971:40973 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R41047:41047 Smallstep <> P constr
R41050:41050 Smallstep <> C constr
R41029:41039 Smallstep <> multi_trans thm
R41047:41047 Smallstep <> P constr
R41050:41050 Smallstep <> C constr
R41029:41039 Smallstep <> multi_trans thm
R41077:41093 Smallstep <> multistep_congr_1 thm
R41077:41093 Smallstep <> multistep_congr_1 thm
R41155:41155 Smallstep <> P constr
R41165:41165 Smallstep <> C constr
R41158:41158 Smallstep <> C constr
R41123:41133 Smallstep <> multi_trans thm
R41155:41155 Smallstep <> P constr
R41165:41165 Smallstep <> C constr
R41158:41158 Smallstep <> C constr
R41123:41133 Smallstep <> multi_trans thm
R41189:41205 Smallstep <> multistep_congr_2 thm
R41189:41205 Smallstep <> multistep_congr_2 thm
R41214:41220 Smallstep <> v_const constr
R41214:41220 Smallstep <> v_const constr
R41250:41256 Smallstep <> multi_R thm
R41250:41256 Smallstep <> multi_R thm
R41265:41281 Smallstep <> ST_PlusConstConst constr
R41265:41281 Smallstep <> ST_PlusConstConst constr
R41322:41337 Smallstep <> nf_same_as_value thm
R41322:41337 Smallstep <> nf_same_as_value thm
R41346:41352 Smallstep <> v_const constr
R41346:41352 Smallstep <> v_const constr
prf 41839:41853 <> eval__multistep
R41882:41887 Smallstep <> ::x_'==>*'_x not
R41881:41881 Smallstep <> t var
R41888:41888 Smallstep <> C constr
R41890:41890 Smallstep <> n var
R41872:41875 Smallstep <> ::x_'||'_x not
R41871:41871 Smallstep <> t var
R41876:41876 Smallstep <> n var
R43329:43338 Smallstep <> multi_refl constr
R43329:43338 Smallstep <> multi_refl constr
R43377:43382 Smallstep <> ::x_'==>*'_x not
R43370:43370 Smallstep <> P constr
R43383:43383 Smallstep <> P constr
R43386:43386 Smallstep <> C constr
R43377:43382 Smallstep <> ::x_'==>*'_x not
R43370:43370 Smallstep <> P constr
R43383:43383 Smallstep <> P constr
R43386:43386 Smallstep <> C constr
R43416:43432 Smallstep <> multistep_congr_1 thm
R43416:43432 Smallstep <> multistep_congr_1 thm
R43470:43488 Smallstep <> ::x_'==>*'_x not
R43459:43459 Smallstep <> P constr
R43462:43462 Smallstep <> C constr
R43489:43489 Smallstep <> P constr
R43499:43499 Smallstep <> C constr
R43492:43492 Smallstep <> C constr
R43470:43488 Smallstep <> ::x_'==>*'_x not
R43459:43459 Smallstep <> P constr
R43462:43462 Smallstep <> C constr
R43489:43489 Smallstep <> P constr
R43499:43499 Smallstep <> C constr
R43492:43492 Smallstep <> C constr
R43526:43542 Smallstep <> multistep_congr_2 thm
R43526:43542 Smallstep <> multistep_congr_2 thm
R43551:43557 Smallstep <> v_const constr
R43551:43557 Smallstep <> v_const constr
R43599:43617 Smallstep <> ::x_'==>*'_x not
R43584:43584 Smallstep <> P constr
R43594:43594 Smallstep <> C constr
R43587:43587 Smallstep <> C constr
R43618:43618 Smallstep <> C constr
R43623:43625 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43599:43617 Smallstep <> ::x_'==>*'_x not
R43584:43584 Smallstep <> P constr
R43594:43594 Smallstep <> C constr
R43587:43587 Smallstep <> C constr
R43618:43618 Smallstep <> C constr
R43623:43625 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R43652:43661 Smallstep <> multi_step constr
R43652:43661 Smallstep <> multi_step constr
R43671:43687 Smallstep <> ST_PlusConstConst constr
R43671:43687 Smallstep <> ST_PlusConstConst constr
R43696:43705 Smallstep <> multi_refl constr
R43696:43705 Smallstep <> multi_refl constr
R43719:43729 Smallstep <> multi_trans thm
R43719:43729 Smallstep <> multi_trans thm
R43762:43772 Smallstep <> multi_trans thm
R43762:43772 Smallstep <> multi_trans thm
prf 45367:45376 <> step__eval
R45434:45437 Smallstep <> ::x_'||'_x not
R45433:45433 Smallstep <> t var
R45438:45438 Smallstep <> n var
R45419:45422 Smallstep <> ::x_'||'_x not
R45417:45418 Smallstep <> t' var
R45423:45423 Smallstep <> n var
R45401:45405 Smallstep <> ::x_'==>'_x not
R45400:45400 Smallstep <> t var
R45406:45407 Smallstep <> t' var
R45616:45621 Smallstep <> E_Plus constr
R45630:45636 Smallstep <> E_Const constr
R45616:45621 Smallstep <> E_Plus constr
R45630:45636 Smallstep <> E_Const constr
R45630:45636 Smallstep <> E_Const constr
R45686:45691 Smallstep <> E_Plus constr
R45686:45691 Smallstep <> E_Plus constr
R45753:45758 Smallstep <> E_Plus constr
R45753:45758 Smallstep <> E_Plus constr
prf 46199:46213 <> multistep__eval
R46255:46261 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46263:46264 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46273:46276 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R46267:46269 Coq.Init.Logic <> :type_scope:x_'='_x not
R46265:46266 Smallstep <> t' var
R46270:46270 Smallstep <> C constr
R46272:46272 Smallstep <> n var
R46278:46281 Smallstep <> ::x_'||'_x not
R46277:46277 Smallstep <> t var
R46282:46282 Smallstep <> n var
R46232:46245 Smallstep <> normal_form_of def
R46249:46250 Smallstep <> t' var
R46247:46247 Smallstep <> t var
R46340:46353 Smallstep <> normal_form_of def
R46470:46485 Smallstep <> nf_same_as_value thm
R46470:46485 Smallstep <> nf_same_as_value thm
R46626:46632 Smallstep <> E_Const constr
R46626:46632 Smallstep <> E_Const constr
R46667:46676 Smallstep <> step__eval thm
R46667:46676 Smallstep <> step__eval thm
prf 47218:47227 <> evalF_eval
R47256:47260 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47252:47254 Coq.Init.Logic <> :type_scope:x_'='_x not
R47245:47249 Smallstep <> evalF def
R47251:47251 Smallstep <> t var
R47255:47255 Smallstep <> n var
R47262:47265 Smallstep <> ::x_'||'_x not
R47261:47261 Smallstep <> t var
R47266:47266 Smallstep <> n var
R47435:47441 Smallstep <> E_Const constr
R47435:47441 Smallstep <> E_Const constr
R47494:47498 Smallstep <> evalF def
R47494:47498 Smallstep <> evalF def
R47527:47531 Smallstep <> evalF def
R47527:47531 Smallstep <> evalF def
R47578:47583 Smallstep <> E_Plus constr
R47578:47583 Smallstep <> E_Plus constr
mod 48090:48097 <> Combined
ind 48111:48112 Combined tm
constr 48128:48128 Combined C
constr 48146:48146 Combined P
constr 48169:48173 Combined ttrue
constr 48184:48189 Combined tfalse
constr 48200:48202 Combined tif
R48139:48140 Smallstep <> tm ind
R48132:48134 Coq.Init.Datatypes <> nat ind
R48162:48163 Smallstep <> tm ind
R48156:48157 Smallstep <> tm ind
R48150:48151 Smallstep <> tm ind
R48177:48178 Smallstep <> tm ind
R48193:48194 Smallstep <> tm ind
R48224:48225 Smallstep <> tm ind
R48218:48219 Smallstep <> tm ind
R48212:48213 Smallstep <> tm ind
R48206:48207 Smallstep <> tm ind
ind 48405:48409 Combined value
constr 48431:48437 Combined v_const
constr 48467:48472 Combined v_true
constr 48492:48498 Combined v_false
R48413:48414 Smallstep Combined tm ind
R48451:48455 Smallstep <> value ind
R48458:48458 Smallstep Combined C constr
R48460:48460 Smallstep <> n var
R48476:48480 Smallstep <> value ind
R48482:48486 Smallstep Combined ttrue constr
R48502:48506 Smallstep <> value ind
R48508:48513 Smallstep Combined tfalse constr
ind 48576:48579 Combined step
constr 48607:48623 Combined ST_PlusConstConst
constr 48683:48690 Combined ST_Plus1
constr 48763:48770 Combined ST_Plus2
constr 48866:48874 Combined ST_IfTrue
constr 48925:48934 Combined ST_IfFalse
constr 48986:48990 Combined ST_If
R48589:48590 Smallstep Combined tm ind
R48583:48584 Smallstep Combined tm ind
R49100:49103 Smallstep <> step ind
R48662:48666 Smallstep Combined ::x_'==>'_x not
R48647:48647 Smallstep Combined P constr
R48657:48657 Smallstep Combined C constr
R48659:48660 Smallstep <> n2 var
R48650:48650 Smallstep Combined C constr
R48652:48653 Smallstep <> n1 var
R48667:48667 Smallstep Combined C constr
R48672:48674 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R48670:48671 Smallstep <> n1 var
R48675:48676 Smallstep <> n2 var
R48745:48749 Smallstep Combined ::x_'==>'_x not
R48738:48738 Smallstep Combined P constr
R48743:48744 Smallstep <> t2 var
R48740:48741 Smallstep <> t1 var
R48750:48750 Smallstep Combined P constr
R48756:48757 Smallstep <> t2 var
R48752:48754 Smallstep <> t1' var
R48720:48724 Smallstep Combined ::x_'==>'_x not
R48718:48719 Smallstep <> t1 var
R48725:48727 Smallstep <> t1' var
R48848:48852 Smallstep Combined ::x_'==>'_x not
R48841:48841 Smallstep Combined P constr
R48846:48847 Smallstep <> t2 var
R48843:48844 Smallstep <> v1 var
R48853:48853 Smallstep Combined P constr
R48858:48860 Smallstep <> t2' var
R48855:48856 Smallstep <> v1 var
R48823:48827 Smallstep Combined ::x_'==>'_x not
R48821:48822 Smallstep <> t2 var
R48828:48830 Smallstep <> t2' var
R48798:48802 Smallstep Combined value ind
R48804:48805 Smallstep <> v1 var
R48913:48917 Smallstep Combined ::x_'==>'_x not
R48898:48900 Smallstep Combined tif constr
R48911:48912 Smallstep <> t2 var
R48908:48909 Smallstep <> t1 var
R48902:48906 Smallstep Combined ttrue constr
R48918:48919 Smallstep <> t1 var
R48974:48978 Smallstep Combined ::x_'==>'_x not
R48958:48960 Smallstep Combined tif constr
R48972:48973 Smallstep <> t2 var
R48969:48970 Smallstep <> t1 var
R48962:48967 Smallstep Combined tfalse constr
R48979:48980 Smallstep <> t2 var
R49053:49057 Smallstep Combined ::x_'==>'_x not
R49041:49043 Smallstep Combined tif constr
R49051:49052 Smallstep <> t3 var
R49048:49049 Smallstep <> t2 var
R49045:49046 Smallstep <> t1 var
R49058:49060 Smallstep Combined tif constr
R49069:49070 Smallstep <> t3 var
R49066:49067 Smallstep <> t2 var
R49062:49064 Smallstep <> t1' var
R49023:49027 Smallstep Combined ::x_'==>'_x not
R49021:49022 Smallstep <> t1 var
R49028:49030 Smallstep <> t1' var
R49100:49103 Smallstep Combined step ind
not 49081 Combined ::x_'==>'_x
prf 49663:49680 Combined step_deterministic
R49686:49698 SfLib <> deterministic def
R49700:49703 Smallstep Combined step ind
R49722:49734 SfLib <> deterministic def
prf 50937:50951 Combined strong_progress
R50957:50959 Coq.Init.Logic <> :type_scope:'~'_x not
R51002:51002 Coq.Init.Logic <> :type_scope:'~'_x not
R50977:50981 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51001:51001 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50970:50974 Smallstep Combined value ind
R50976:50976 Smallstep <> t var
R50982:50988 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50991:50992 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R50994:50998 Smallstep Combined ::x_'==>'_x not
R50993:50993 Smallstep <> t var
R50999:51000 Smallstep <> t' var
R51036:51036 Smallstep Combined P constr
R51044:51048 Smallstep Combined ttrue constr
R51038:51042 Smallstep Combined ttrue constr
R51036:51036 Smallstep Combined P constr
R51044:51048 Smallstep Combined ttrue constr
R51038:51042 Smallstep Combined ttrue constr
R51074:51078 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51098:51098 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51067:51071 Smallstep Combined value ind
R51079:51085 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51088:51089 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51091:51095 Smallstep Combined ::x_'==>'_x not
R51096:51097 Smallstep <> t' var
R51074:51078 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51098:51098 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R51067:51071 Smallstep Combined value ind
R51079:51085 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51088:51089 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R51091:51095 Smallstep Combined ::x_'==>'_x not
R51096:51097 Smallstep <> t' var
R51286:51293 Smallstep <> <> mod
ind 51832:51835 <> aval
constr 51857:51862 <> av_num
R51839:51842 Imp <> aexp ind
R51876:51879 Smallstep <> aval ind
R51882:51885 Imp <> ANum constr
R51887:51887 Smallstep <> n var
ind 52187:52191 <> astep
constr 52232:52236 <> AS_Id
constr 52292:52298 <> AS_Plus
constr 52380:52387 <> AS_Plus1
constr 52487:52494 <> AS_Plus2
constr 52611:52618 <> AS_Minus
constr 52709:52717 <> AS_Minus1
constr 52819:52827 <> AS_Minus2
constr 52946:52952 <> AS_Mult
constr 53041:53048 <> AS_Mult1
constr 53156:53163 <> AS_Mult2
R52212:52215 Imp <> aexp ind
R52204:52207 Imp <> aexp ind
R52195:52199 Imp <> state def
R53314:53318 Smallstep <> astep ind
R52265:52267 Smallstep <> ::x_'/'_x_'==>a'_x not
R52270:52275 Smallstep <> ::x_'/'_x_'==>a'_x not
R52268:52269 Smallstep <> st var
R52260:52262 Imp <> AId constr
R52264:52264 Smallstep <> i var
R52276:52279 Imp <> ANum constr
R52282:52283 Smallstep <> st var
R52285:52285 Smallstep <> i var
R52350:52352 Smallstep <> ::x_'/'_x_'==>a'_x not
R52355:52360 Smallstep <> ::x_'/'_x_'==>a'_x not
R52353:52354 Smallstep <> st var
R52325:52329 Imp <> APlus constr
R52342:52345 Imp <> ANum constr
R52347:52348 Smallstep <> n2 var
R52332:52335 Imp <> ANum constr
R52337:52338 Smallstep <> n1 var
R52361:52364 Imp <> ANum constr
R52369:52371 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R52367:52368 Smallstep <> n1 var
R52372:52373 Smallstep <> n2 var
R52444:52444 Smallstep <> ::x_'/'_x_'==>a'_x not
R52456:52459 Smallstep <> ::x_'/'_x_'==>a'_x not
R52462:52468 Smallstep <> ::x_'/'_x_'==>a'_x not
R52481:52481 Smallstep <> ::x_'/'_x_'==>a'_x not
R52460:52461 Smallstep <> st var
R52445:52449 Imp <> APlus constr
R52454:52455 Smallstep <> a2 var
R52451:52452 Smallstep <> a1 var
R52469:52473 Imp <> APlus constr
R52479:52480 Smallstep <> a2 var
R52475:52477 Smallstep <> a1' var
R52420:52422 Smallstep <> ::x_'/'_x_'==>a'_x not
R52425:52430 Smallstep <> ::x_'/'_x_'==>a'_x not
R52423:52424 Smallstep <> st var
R52418:52419 Smallstep <> a1 var
R52431:52433 Smallstep <> a1' var
R52568:52568 Smallstep <> ::x_'/'_x_'==>a'_x not
R52580:52583 Smallstep <> ::x_'/'_x_'==>a'_x not
R52586:52592 Smallstep <> ::x_'/'_x_'==>a'_x not
R52605:52605 Smallstep <> ::x_'/'_x_'==>a'_x not
R52584:52585 Smallstep <> st var
R52569:52573 Imp <> APlus constr
R52578:52579 Smallstep <> a2 var
R52575:52576 Smallstep <> v1 var
R52593:52597 Imp <> APlus constr
R52602:52604 Smallstep <> a2' var
R52599:52600 Smallstep <> v1 var
R52544:52546 Smallstep <> ::x_'/'_x_'==>a'_x not
R52549:52554 Smallstep <> ::x_'/'_x_'==>a'_x not
R52547:52548 Smallstep <> st var
R52542:52543 Smallstep <> a2 var
R52555:52557 Smallstep <> a2' var
R52525:52528 Smallstep <> aval ind
R52530:52531 Smallstep <> v1 var
R52645:52645 Smallstep <> ::x_'/'_x_'==>a'_x not
R52672:52675 Smallstep <> ::x_'/'_x_'==>a'_x not
R52678:52684 Smallstep <> ::x_'/'_x_'==>a'_x not
R52703:52703 Smallstep <> ::x_'/'_x_'==>a'_x not
R52676:52677 Smallstep <> st var
R52646:52651 Imp <> AMinus constr
R52664:52667 Imp <> ANum constr
R52669:52670 Smallstep <> n2 var
R52654:52657 Imp <> ANum constr
R52659:52660 Smallstep <> n1 var
R52685:52688 Imp <> ANum constr
R52691:52695 Coq.Init.Peano <> minus def
R52700:52701 Smallstep <> n2 var
R52697:52698 Smallstep <> n1 var
R52774:52774 Smallstep <> ::x_'/'_x_'==>a'_x not
R52787:52790 Smallstep <> ::x_'/'_x_'==>a'_x not
R52793:52799 Smallstep <> ::x_'/'_x_'==>a'_x not
R52813:52813 Smallstep <> ::x_'/'_x_'==>a'_x not
R52791:52792 Smallstep <> st var
R52775:52780 Imp <> AMinus constr
R52785:52786 Smallstep <> a2 var
R52782:52783 Smallstep <> a1 var
R52800:52805 Imp <> AMinus constr
R52811:52812 Smallstep <> a2 var
R52807:52809 Smallstep <> a1' var
R52750:52752 Smallstep <> ::x_'/'_x_'==>a'_x not
R52755:52760 Smallstep <> ::x_'/'_x_'==>a'_x not
R52753:52754 Smallstep <> st var
R52748:52749 Smallstep <> a1 var
R52761:52763 Smallstep <> a1' var
R52901:52901 Smallstep <> ::x_'/'_x_'==>a'_x not
R52914:52917 Smallstep <> ::x_'/'_x_'==>a'_x not
R52920:52926 Smallstep <> ::x_'/'_x_'==>a'_x not
R52940:52940 Smallstep <> ::x_'/'_x_'==>a'_x not
R52918:52919 Smallstep <> st var
R52902:52907 Imp <> AMinus constr
R52912:52913 Smallstep <> a2 var
R52909:52910 Smallstep <> v1 var
R52927:52932 Imp <> AMinus constr
R52937:52939 Smallstep <> a2' var
R52934:52935 Smallstep <> v1 var
R52877:52879 Smallstep <> ::x_'/'_x_'==>a'_x not
R52882:52887 Smallstep <> ::x_'/'_x_'==>a'_x not
R52880:52881 Smallstep <> st var
R52875:52876 Smallstep <> a2 var
R52888:52890 Smallstep <> a2' var
R52858:52861 Smallstep <> aval ind
R52863:52864 Smallstep <> v1 var
R52979:52979 Smallstep <> ::x_'/'_x_'==>a'_x not
R53005:53008 Smallstep <> ::x_'/'_x_'==>a'_x not
R53011:53017 Smallstep <> ::x_'/'_x_'==>a'_x not
R53035:53035 Smallstep <> ::x_'/'_x_'==>a'_x not
R53009:53010 Smallstep <> st var
R52980:52984 Imp <> AMult constr
R52997:53000 Imp <> ANum constr
R53002:53003 Smallstep <> n2 var
R52987:52990 Imp <> ANum constr
R52992:52993 Smallstep <> n1 var
R53018:53021 Imp <> ANum constr
R53024:53027 Coq.Init.Peano <> mult def
R53032:53033 Smallstep <> n2 var
R53029:53030 Smallstep <> n1 var
R53105:53105 Smallstep <> ::x_'/'_x_'==>a'_x not
R53121:53124 Smallstep <> ::x_'/'_x_'==>a'_x not
R53127:53133 Smallstep <> ::x_'/'_x_'==>a'_x not
R53150:53150 Smallstep <> ::x_'/'_x_'==>a'_x not
R53125:53126 Smallstep <> st var
R53106:53110 Imp <> AMult constr
R53118:53119 Smallstep <> a2 var
R53113:53114 Smallstep <> a1 var
R53134:53138 Imp <> AMult constr
R53147:53148 Smallstep <> a2 var
R53141:53143 Smallstep <> a1' var
R53081:53083 Smallstep <> ::x_'/'_x_'==>a'_x not
R53086:53091 Smallstep <> ::x_'/'_x_'==>a'_x not
R53084:53085 Smallstep <> st var
R53079:53080 Smallstep <> a1 var
R53092:53094 Smallstep <> a1' var
R53237:53237 Smallstep <> ::x_'/'_x_'==>a'_x not
R53249:53252 Smallstep <> ::x_'/'_x_'==>a'_x not
R53255:53261 Smallstep <> ::x_'/'_x_'==>a'_x not
R53274:53274 Smallstep <> ::x_'/'_x_'==>a'_x not
R53253:53254 Smallstep <> st var
R53238:53242 Imp <> AMult constr
R53247:53248 Smallstep <> a2 var
R53244:53245 Smallstep <> v1 var
R53262:53266 Imp <> AMult constr
R53271:53273 Smallstep <> a2' var
R53268:53269 Smallstep <> v1 var
R53213:53215 Smallstep <> ::x_'/'_x_'==>a'_x not
R53218:53223 Smallstep <> ::x_'/'_x_'==>a'_x not
R53216:53217 Smallstep <> st var
R53211:53212 Smallstep <> a2 var
R53224:53226 Smallstep <> a2' var
R53194:53197 Smallstep <> aval ind
R53199:53200 Smallstep <> v1 var
R53314:53318 Smallstep <> astep ind
not 53287 <> ::x_'/'_x_'==>a'_x
ind 53418:53422 <> bstep
constr 53463:53467 <> BS_Eq
constr 53585:53590 <> BS_Eq1
constr 53686:53691 <> BS_Eq2
constr 53805:53811 <> BS_LtEq
constr 53938:53945 <> BS_LtEq1
constr 54041:54048 <> BS_LtEq2
constr 54163:54172 <> BS_NotTrue
constr 54227:54237 <> BS_NotFalse
constr 54292:54301 <> BS_NotStep
constr 54390:54403 <> BS_AndTrueTrue
constr 54463:54477 <> BS_AndTrueFalse
constr 54539:54549 <> BS_AndFalse
constr 54611:54624 <> BS_AndTrueStep
constr 54725:54734 <> BS_AndStep
R53443:53446 Imp <> bexp ind
R53435:53438 Imp <> bexp ind
R53426:53430 Imp <> state def
R54864:54868 Smallstep <> bstep ind
R53494:53494 Smallstep <> ::x_'/'_x_'==>b'_x not
R53518:53521 Smallstep <> ::x_'/'_x_'==>b'_x not
R53524:53537 Smallstep <> ::x_'/'_x_'==>b'_x not
R53579:53579 Smallstep <> ::x_'/'_x_'==>b'_x not
R53522:53523 Smallstep <> st var
R53495:53497 Imp <> BEq constr
R53510:53513 Imp <> ANum constr
R53515:53516 Smallstep <> n2 var
R53500:53503 Imp <> ANum constr
R53505:53506 Smallstep <> n1 var
R53542:53548 Coq.Arith.EqNat <> beq_nat def
R53553:53554 Smallstep <> n2 var
R53550:53551 Smallstep <> n1 var
R53573:53578 Imp <> BFalse constr
R53562:53566 Imp <> BTrue constr
R53647:53647 Smallstep <> ::x_'/'_x_'==>b'_x not
R53657:53660 Smallstep <> ::x_'/'_x_'==>b'_x not
R53663:53669 Smallstep <> ::x_'/'_x_'==>b'_x not
R53680:53680 Smallstep <> ::x_'/'_x_'==>b'_x not
R53661:53662 Smallstep <> st var
R53648:53650 Imp <> BEq constr
R53655:53656 Smallstep <> a2 var
R53652:53653 Smallstep <> a1 var
R53670:53672 Imp <> BEq constr
R53678:53679 Smallstep <> a2 var
R53674:53676 Smallstep <> a1' var
R53623:53625 Smallstep <> ::x_'/'_x_'==>a'_x not
R53628:53633 Smallstep <> ::x_'/'_x_'==>a'_x not
R53626:53627 Smallstep <> st var
R53621:53622 Smallstep <> a1 var
R53634:53636 Smallstep <> a1' var
R53766:53766 Smallstep <> ::x_'/'_x_'==>b'_x not
R53776:53779 Smallstep <> ::x_'/'_x_'==>b'_x not
R53782:53788 Smallstep <> ::x_'/'_x_'==>b'_x not
R53799:53799 Smallstep <> ::x_'/'_x_'==>b'_x not
R53780:53781 Smallstep <> st var
R53767:53769 Imp <> BEq constr
R53774:53775 Smallstep <> a2 var
R53771:53772 Smallstep <> v1 var
R53789:53791 Imp <> BEq constr
R53796:53798 Smallstep <> a2' var
R53793:53794 Smallstep <> v1 var
R53742:53744 Smallstep <> ::x_'/'_x_'==>a'_x not
R53747:53752 Smallstep <> ::x_'/'_x_'==>a'_x not
R53745:53746 Smallstep <> st var
R53740:53741 Smallstep <> a2 var
R53753:53755 Smallstep <> a2' var
R53722:53725 Smallstep <> aval ind
R53727:53728 Smallstep <> v1 var
R53838:53838 Smallstep <> ::x_'/'_x_'==>b'_x not
R53862:53865 Smallstep <> ::x_'/'_x_'==>b'_x not
R53868:53890 Smallstep <> ::x_'/'_x_'==>b'_x not
R53932:53932 Smallstep <> ::x_'/'_x_'==>b'_x not
R53866:53867 Smallstep <> st var
R53839:53841 Imp <> BLe constr
R53854:53857 Imp <> ANum constr
R53859:53860 Smallstep <> n2 var
R53844:53847 Imp <> ANum constr
R53849:53850 Smallstep <> n1 var
R53895:53901 SfLib <> ble_nat def
R53906:53907 Smallstep <> n2 var
R53903:53904 Smallstep <> n1 var
R53926:53931 Imp <> BFalse constr
R53915:53919 Imp <> BTrue constr
R54002:54002 Smallstep <> ::x_'/'_x_'==>b'_x not
R54012:54015 Smallstep <> ::x_'/'_x_'==>b'_x not
R54018:54024 Smallstep <> ::x_'/'_x_'==>b'_x not
R54035:54035 Smallstep <> ::x_'/'_x_'==>b'_x not
R54016:54017 Smallstep <> st var
R54003:54005 Imp <> BLe constr
R54010:54011 Smallstep <> a2 var
R54007:54008 Smallstep <> a1 var
R54025:54027 Imp <> BLe constr
R54033:54034 Smallstep <> a2 var
R54029:54031 Smallstep <> a1' var
R53978:53980 Smallstep <> ::x_'/'_x_'==>a'_x not
R53983:53988 Smallstep <> ::x_'/'_x_'==>a'_x not
R53981:53982 Smallstep <> st var
R53976:53977 Smallstep <> a1 var
R53989:53991 Smallstep <> a1' var
R54122:54122 Smallstep <> ::x_'/'_x_'==>b'_x not
R54132:54135 Smallstep <> ::x_'/'_x_'==>b'_x not
R54138:54144 Smallstep <> ::x_'/'_x_'==>b'_x not
R54157:54157 Smallstep <> ::x_'/'_x_'==>b'_x not
R54136:54137 Smallstep <> st var
R54123:54125 Imp <> BLe constr
R54130:54131 Smallstep <> a2 var
R54127:54128 Smallstep <> v1 var
R54145:54147 Imp <> BLe constr
R54153:54155 Smallstep <> a2' var
R54149:54150 Smallstep <> v1 var
R54098:54100 Smallstep <> ::x_'/'_x_'==>a'_x not
R54103:54108 Smallstep <> ::x_'/'_x_'==>a'_x not
R54101:54102 Smallstep <> st var
R54096:54097 Smallstep <> a2 var
R54109:54111 Smallstep <> a2' var
R54079:54082 Smallstep <> aval ind
R54084:54085 Smallstep <> v1 var
R54193:54193 Smallstep <> ::x_'/'_x_'==>b'_x not
R54204:54207 Smallstep <> ::x_'/'_x_'==>b'_x not
R54210:54215 Smallstep <> ::x_'/'_x_'==>b'_x not
R54208:54209 Smallstep <> st var
R54194:54197 Imp <> BNot constr
R54199:54203 Imp <> BTrue constr
R54216:54221 Imp <> BFalse constr
R54258:54258 Smallstep <> ::x_'/'_x_'==>b'_x not
R54270:54273 Smallstep <> ::x_'/'_x_'==>b'_x not
R54276:54281 Smallstep <> ::x_'/'_x_'==>b'_x not
R54274:54275 Smallstep <> st var
R54259:54262 Imp <> BNot constr
R54264:54269 Imp <> BFalse constr
R54282:54286 Imp <> BTrue constr
R54355:54355 Smallstep <> ::x_'/'_x_'==>b'_x not
R54363:54366 Smallstep <> ::x_'/'_x_'==>b'_x not
R54369:54375 Smallstep <> ::x_'/'_x_'==>b'_x not
R54384:54384 Smallstep <> ::x_'/'_x_'==>b'_x not
R54367:54368 Smallstep <> st var
R54356:54359 Imp <> BNot constr
R54361:54362 Smallstep <> b1 var
R54376:54379 Imp <> BNot constr
R54381:54383 Smallstep <> b1' var
R54331:54333 Smallstep <> ::x_'/'_x_'==>b'_x not
R54336:54341 Smallstep <> ::x_'/'_x_'==>b'_x not
R54334:54335 Smallstep <> st var
R54329:54330 Smallstep <> b1 var
R54342:54344 Smallstep <> b1' var
R54424:54424 Smallstep <> ::x_'/'_x_'==>b'_x not
R54441:54444 Smallstep <> ::x_'/'_x_'==>b'_x not
R54447:54452 Smallstep <> ::x_'/'_x_'==>b'_x not
R54445:54446 Smallstep <> st var
R54425:54428 Imp <> BAnd constr
R54436:54440 Imp <> BTrue constr
R54430:54434 Imp <> BTrue constr
R54453:54457 Imp <> BTrue constr
R54498:54498 Smallstep <> ::x_'/'_x_'==>b'_x not
R54516:54519 Smallstep <> ::x_'/'_x_'==>b'_x not
R54522:54527 Smallstep <> ::x_'/'_x_'==>b'_x not
R54520:54521 Smallstep <> st var
R54499:54502 Imp <> BAnd constr
R54510:54515 Imp <> BFalse constr
R54504:54508 Imp <> BTrue constr
R54528:54533 Imp <> BFalse constr
R54573:54573 Smallstep <> ::x_'/'_x_'==>b'_x not
R54588:54591 Smallstep <> ::x_'/'_x_'==>b'_x not
R54594:54599 Smallstep <> ::x_'/'_x_'==>b'_x not
R54592:54593 Smallstep <> st var
R54574:54577 Imp <> BAnd constr
R54586:54587 Smallstep <> b2 var
R54579:54584 Imp <> BFalse constr
R54600:54605 Imp <> BFalse constr
R54678:54678 Smallstep <> ::x_'/'_x_'==>b'_x not
R54692:54695 Smallstep <> ::x_'/'_x_'==>b'_x not
R54698:54704 Smallstep <> ::x_'/'_x_'==>b'_x not
R54719:54719 Smallstep <> ::x_'/'_x_'==>b'_x not
R54696:54697 Smallstep <> st var
R54679:54682 Imp <> BAnd constr
R54690:54691 Smallstep <> b2 var
R54684:54688 Imp <> BTrue constr
R54705:54708 Imp <> BAnd constr
R54716:54718 Smallstep <> b2' var
R54710:54714 Imp <> BTrue constr
R54654:54656 Smallstep <> ::x_'/'_x_'==>b'_x not
R54659:54664 Smallstep <> ::x_'/'_x_'==>b'_x not
R54657:54658 Smallstep <> st var
R54652:54653 Smallstep <> b2 var
R54665:54667 Smallstep <> b2' var
R54791:54791 Smallstep <> ::x_'/'_x_'==>b'_x not
R54802:54805 Smallstep <> ::x_'/'_x_'==>b'_x not
R54808:54814 Smallstep <> ::x_'/'_x_'==>b'_x not
R54826:54826 Smallstep <> ::x_'/'_x_'==>b'_x not
R54806:54807 Smallstep <> st var
R54792:54795 Imp <> BAnd constr
R54800:54801 Smallstep <> b2 var
R54797:54798 Smallstep <> b1 var
R54815:54818 Imp <> BAnd constr
R54824:54825 Smallstep <> b2 var
R54820:54822 Smallstep <> b1' var
R54767:54769 Smallstep <> ::x_'/'_x_'==>b'_x not
R54772:54777 Smallstep <> ::x_'/'_x_'==>b'_x not
R54770:54771 Smallstep <> st var
R54765:54766 Smallstep <> b1 var
R54778:54780 Smallstep <> b1' var
R54864:54868 Smallstep <> bstep ind
not 54837 <> ::x_'/'_x_'==>b'_x
ind 55886:55890 <> cstep
constr 55940:55949 <> CS_AssStep
constr 56041:56046 <> CS_Ass
constr 56125:56134 <> CS_SeqStep
constr 56240:56251 <> CS_SeqFinish
constr 56308:56316 <> CS_IfTrue
constr 56393:56402 <> CS_IfFalse
constr 56480:56488 <> CS_IfStep
constr 56615:56622 <> CS_While
R55915:55917 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55912:55914 Imp <> com ind
R55918:55922 Imp <> state def
R55898:55900 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R55895:55897 Imp <> com ind
R55901:55905 Imp <> state def
R56787:56791 Smallstep <> cstep ind
R56800:56800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56803:56803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56807:56807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56793:56793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56795:56795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56798:56798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56001:56001 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56009:56012 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56015:56020 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56029:56032 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56003:56007 Imp <> ::x_'::='_x not
R56002:56002 Smallstep <> i var
R56008:56008 Smallstep <> a var
R56013:56014 Smallstep <> st var
R56022:56026 Imp <> ::x_'::='_x not
R56021:56021 Smallstep <> i var
R56027:56028 Smallstep <> a' var
R56033:56034 Smallstep <> st var
R55978:55980 Smallstep <> ::x_'/'_x_'==>a'_x not
R55983:55988 Smallstep <> ::x_'/'_x_'==>a'_x not
R55981:55982 Smallstep <> st var
R55977:55977 Smallstep <> a var
R55989:55990 Smallstep <> a' var
R56072:56072 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56087:56090 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56093:56097 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56102:56105 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56119:56119 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56074:56079 Imp <> ::x_'::='_x not
R56086:56086 Imp <> ::x_'::='_x not
R56073:56073 Smallstep <> i var
R56080:56083 Imp <> ANum constr
R56085:56085 Smallstep <> n var
R56091:56092 Smallstep <> st var
R56098:56101 Imp <> ::'SKIP' not
R56106:56111 Imp <> update def
R56118:56118 Smallstep <> n var
R56116:56116 Smallstep <> i var
R56113:56114 Smallstep <> st var
R56200:56200 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56208:56211 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56214:56219 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56228:56231 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56203:56205 Imp <> ::x_';'_x not
R56201:56202 Smallstep <> c1 var
R56206:56207 Smallstep <> c2 var
R56212:56213 Smallstep <> st var
R56223:56225 Imp <> ::x_';'_x not
R56220:56222 Smallstep <> c1' var
R56226:56227 Smallstep <> c2 var
R56232:56234 Smallstep <> st' var
R56171:56173 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56176:56180 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56184:56186 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56169:56170 Smallstep <> c1 var
R56174:56175 Smallstep <> st var
R56181:56183 Smallstep <> c1' var
R56187:56189 Smallstep <> st' var
R56275:56275 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56285:56288 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56291:56295 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56298:56300 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56280:56282 Imp <> ::x_';'_x not
R56276:56279 Imp <> ::'SKIP' not
R56283:56284 Smallstep <> c2 var
R56289:56290 Smallstep <> st var
R56296:56297 Smallstep <> c2 var
R56301:56302 Smallstep <> st var
R56371:56373 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56376:56380 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56383:56385 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56343:56346 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56352:56357 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56360:56365 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56368:56370 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56347:56351 Imp <> BTrue constr
R56358:56359 Smallstep <> c1 var
R56366:56367 Smallstep <> c2 var
R56374:56375 Smallstep <> st var
R56381:56382 Smallstep <> c1 var
R56386:56387 Smallstep <> st var
R56458:56460 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56463:56467 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56470:56472 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56429:56432 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56439:56444 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56447:56452 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56455:56457 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56433:56438 Imp <> BFalse constr
R56445:56446 Smallstep <> c1 var
R56453:56454 Smallstep <> c2 var
R56461:56462 Smallstep <> st var
R56468:56469 Smallstep <> c2 var
R56473:56474 Smallstep <> st var
R56568:56570 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56573:56578 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56604:56607 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56544:56547 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56549:56554 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56557:56562 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56565:56567 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56548:56548 Smallstep <> b var
R56555:56556 Smallstep <> c1 var
R56563:56564 Smallstep <> c2 var
R56571:56572 Smallstep <> st var
R56579:56582 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56585:56590 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56593:56598 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56601:56603 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56583:56584 Smallstep <> b' var
R56591:56592 Smallstep <> c1 var
R56599:56600 Smallstep <> c2 var
R56608:56609 Smallstep <> st var
R56521:56523 Smallstep <> ::x_'/'_x_'==>b'_x not
R56526:56531 Smallstep <> ::x_'/'_x_'==>b'_x not
R56524:56525 Smallstep <> st var
R56520:56520 Smallstep <> b var
R56532:56533 Smallstep <> b' var
R56652:56652 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56670:56673 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56676:56687 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56737:56740 Smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R56653:56658 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56660:56663 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56666:56669 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56659:56659 Smallstep <> b var
R56664:56665 Smallstep <> c1 var
R56674:56675 Smallstep <> st var
R56688:56691 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56693:56699 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56723:56729 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56734:56736 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R56692:56692 Smallstep <> b var
R56702:56704 Imp <> ::x_';'_x not
R56722:56722 Imp <> ::x_';'_x not
R56700:56701 Smallstep <> c1 var
R56705:56710 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56712:56715 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56718:56721 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56711:56711 Smallstep <> b var
R56716:56717 Smallstep <> c1 var
R56730:56733 Imp <> ::'SKIP' not
R56741:56742 Smallstep <> st var
R56787:56791 Smallstep <> cstep ind
R56800:56800 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56803:56803 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56807:56807 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56793:56793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56795:56795 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R56798:56798 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 56753 <> ::x_'/'_x_'==>'_x_'/'_x
mod 57323:57326 <> CImp
ind 57340:57342 CImp com
constr 57358:57362 CImp CSkip
constr 57374:57377 CImp CAss
constr 57403:57406 CImp CSeq
constr 57432:57434 CImp CIf
constr 57468:57473 CImp CWhile
constr 57513:57516 CImp CPar
R57366:57368 Smallstep <> com ind
R57395:57397 Smallstep <> com ind
R57387:57390 Imp <> aexp ind
R57381:57382 SfLib <> id ind
R57424:57426 Smallstep <> com ind
R57417:57419 Smallstep <> com ind
R57410:57412 Smallstep <> com ind
R57460:57462 Smallstep <> com ind
R57453:57455 Smallstep <> com ind
R57446:57448 Smallstep <> com ind
R57438:57441 Imp <> bexp ind
R57492:57494 Smallstep <> com ind
R57485:57487 Smallstep <> com ind
R57477:57480 Imp <> bexp ind
R57534:57536 Smallstep <> com ind
R57527:57529 Smallstep <> com ind
R57520:57522 Smallstep <> com ind
R57750:57754 Smallstep CImp CSkip constr
not 57735 CImp ::'SKIP'
R57785:57788 Smallstep CImp CAss constr
not 57766 CImp ::x_'::='_x
R57836:57839 Smallstep CImp CSeq constr
not 57819 CImp ::x_';'_x
R57925:57930 Smallstep CImp CWhile constr
not 57893 CImp ::'WHILE'_x_'DO'_x_'END'
R58024:58026 Smallstep CImp CIf constr
not 57982 CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R58116:58119 Smallstep CImp CPar constr
not 58082 CImp ::'PAR'_x_'WITH'_x_'END'
ind 58175:58179 CImp cstep
constr 58249:58258 CImp CS_AssStep
constr 58350:58355 CImp CS_Ass
constr 58434:58443 CImp CS_SeqStep
constr 58549:58560 CImp CS_SeqFinish
constr 58617:58625 CImp CS_IfTrue
constr 58704:58713 CImp CS_IfFalse
constr 58793:58801 CImp CS_IfStep
constr 58930:58937 CImp CS_While
constr 59089:59095 CImp CS_Par1
constr 59224:59230 CImp CS_Par2
constr 59358:59367 CImp CS_ParDone
R58205:58207 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R58202:58204 Smallstep CImp com ind
R58208:58212 Imp <> state def
R58187:58189 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R58184:58186 Smallstep CImp com ind
R58190:58194 Imp <> state def
R59474:59478 Smallstep <> cstep ind
R59487:59487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59490:59490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59494:59494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59480:59480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59482:59482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59485:59485 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R58311:58311 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58319:58322 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58325:58330 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58339:58342 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58313:58317 Smallstep CImp ::x_'::='_x not
R58312:58312 Smallstep <> i var
R58318:58318 Smallstep <> a var
R58323:58324 Smallstep <> st var
R58332:58336 Smallstep CImp ::x_'::='_x not
R58331:58331 Smallstep <> i var
R58337:58338 Smallstep <> a' var
R58343:58344 Smallstep <> st var
R58287:58289 Smallstep <> ::x_'/'_x_'==>a'_x not
R58292:58297 Smallstep <> ::x_'/'_x_'==>a'_x not
R58290:58291 Smallstep <> st var
R58286:58286 Smallstep <> a var
R58298:58299 Smallstep <> a' var
R58381:58381 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58396:58399 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58402:58406 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58411:58414 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58428:58428 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58383:58388 Smallstep CImp ::x_'::='_x not
R58395:58395 Smallstep CImp ::x_'::='_x not
R58382:58382 Smallstep <> i var
R58389:58392 Imp <> ANum constr
R58394:58394 Smallstep <> n var
R58400:58401 Smallstep <> st var
R58407:58410 Smallstep CImp ::'SKIP' not
R58415:58420 Imp <> update def
R58427:58427 Smallstep <> n var
R58425:58425 Smallstep <> i var
R58422:58423 Smallstep <> st var
R58509:58509 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58517:58520 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58523:58528 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58537:58540 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58512:58514 Smallstep CImp ::x_';'_x not
R58510:58511 Smallstep <> c1 var
R58515:58516 Smallstep <> c2 var
R58521:58522 Smallstep <> st var
R58532:58534 Smallstep CImp ::x_';'_x not
R58529:58531 Smallstep <> c1' var
R58535:58536 Smallstep <> c2 var
R58541:58543 Smallstep <> st' var
R58480:58482 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58485:58489 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58493:58495 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58478:58479 Smallstep <> c1 var
R58483:58484 Smallstep <> st var
R58490:58492 Smallstep <> c1' var
R58496:58498 Smallstep <> st' var
R58584:58584 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58594:58597 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58600:58604 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58607:58609 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58589:58591 Smallstep CImp ::x_';'_x not
R58585:58588 Smallstep CImp ::'SKIP' not
R58592:58593 Smallstep <> c2 var
R58598:58599 Smallstep <> st var
R58605:58606 Smallstep <> c2 var
R58610:58611 Smallstep <> st var
R58652:58652 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58681:58684 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58687:58691 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58694:58696 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58653:58656 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58662:58667 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58670:58675 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58678:58680 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58657:58661 Imp <> BTrue constr
R58668:58669 Smallstep <> c1 var
R58676:58677 Smallstep <> c2 var
R58685:58686 Smallstep <> st var
R58692:58693 Smallstep <> c1 var
R58697:58698 Smallstep <> st var
R58740:58740 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58770:58773 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58776:58780 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58783:58785 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58741:58744 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58751:58756 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58759:58764 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58767:58769 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58745:58750 Imp <> BFalse constr
R58757:58758 Smallstep <> c1 var
R58765:58766 Smallstep <> c2 var
R58774:58775 Smallstep <> st var
R58781:58782 Smallstep <> c2 var
R58786:58787 Smallstep <> st var
R58857:58857 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58882:58885 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58888:58893 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58919:58922 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58858:58861 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58863:58868 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58871:58876 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58879:58881 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58862:58862 Smallstep <> b var
R58869:58870 Smallstep <> c1 var
R58877:58878 Smallstep <> c2 var
R58886:58887 Smallstep <> st var
R58894:58897 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58900:58905 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58908:58913 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58916:58918 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R58898:58899 Smallstep <> b' var
R58906:58907 Smallstep <> c1 var
R58914:58915 Smallstep <> c2 var
R58923:58924 Smallstep <> st var
R58834:58835 Smallstep <> ::x_'/'_x_'==>b'_x not
R58838:58843 Smallstep <> ::x_'/'_x_'==>b'_x not
R58836:58837 Smallstep <> st var
R58833:58833 Smallstep <> b var
R58844:58845 Smallstep <> b' var
R58963:58963 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58981:58984 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58987:59008 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59058:59061 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R58964:58969 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58971:58974 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58977:58980 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R58970:58970 Smallstep <> b var
R58975:58976 Smallstep <> c1 var
R58985:58986 Smallstep <> st var
R59009:59012 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59014:59020 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59044:59050 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59055:59057 Smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R59013:59013 Smallstep <> b var
R59023:59025 Smallstep CImp ::x_';'_x not
R59043:59043 Smallstep CImp ::x_';'_x not
R59021:59022 Smallstep <> c1 var
R59026:59031 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59033:59036 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59039:59042 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59032:59032 Smallstep <> b var
R59037:59038 Smallstep <> c1 var
R59051:59054 Smallstep CImp ::'SKIP' not
R59062:59063 Smallstep <> st var
R59162:59162 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59181:59184 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59187:59192 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59212:59215 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59163:59166 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59169:59174 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59177:59180 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59167:59168 Smallstep <> c1 var
R59175:59176 Smallstep <> c2 var
R59185:59186 Smallstep <> st var
R59193:59196 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59200:59205 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59208:59211 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59197:59199 Smallstep <> c1' var
R59206:59207 Smallstep <> c2 var
R59216:59218 Smallstep <> st' var
R59132:59134 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59137:59141 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59145:59147 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59130:59131 Smallstep <> c1 var
R59135:59136 Smallstep <> st var
R59142:59144 Smallstep <> c1' var
R59148:59150 Smallstep <> st' var
R59296:59296 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59315:59318 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59321:59326 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59346:59349 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59297:59300 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59303:59308 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59311:59314 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59301:59302 Smallstep <> c1 var
R59309:59310 Smallstep <> c2 var
R59319:59320 Smallstep <> st var
R59327:59330 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59333:59338 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59342:59345 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59331:59332 Smallstep <> c1 var
R59339:59341 Smallstep <> c2' var
R59350:59352 Smallstep <> st' var
R59267:59269 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59272:59276 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59280:59282 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59265:59266 Smallstep <> c2 var
R59270:59271 Smallstep <> st var
R59277:59279 Smallstep <> c2' var
R59283:59285 Smallstep <> st' var
R59388:59388 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59411:59414 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59417:59421 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59426:59428 Smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R59389:59392 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59397:59402 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59407:59410 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59393:59396 Smallstep CImp ::'SKIP' not
R59403:59406 Smallstep CImp ::'SKIP' not
R59415:59416 Smallstep <> st var
R59422:59425 Smallstep CImp ::'SKIP' not
R59429:59430 Smallstep <> st var
R59474:59478 Smallstep CImp cstep ind
R59487:59487 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59490:59490 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59494:59494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59480:59480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59482:59482 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59485:59485 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 59440 CImp ::x_'/'_x_'==>'_x_'/'_x
def 59510:59519 CImp cmultistep
R59524:59528 Smallstep CImp multi ind
R59530:59534 Smallstep CImp cstep ind
R59587:59591 Smallstep CImp multi ind
R59607:59607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59610:59610 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59614:59614 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59600:59600 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59602:59602 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59605:59605 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R59593:59597 Smallstep CImp cstep ind
not 59548 CImp ::x_'/'_x_'==>*'_x_'/'_x
def 59852:59859 CImp par_loop
R59863:59865 Smallstep CImp com ind
R59872:59879 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59892:59903 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59976:59981 Smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R59881:59885 Smallstep CImp ::x_'::='_x not
R59880:59880 Imp <> Y def
R59886:59889 Imp <> ANum constr
R59904:59909 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59930:59939 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59968:59975 Smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R59910:59912 Imp <> BEq constr
R59923:59926 Imp <> ANum constr
R59915:59917 Imp <> AId constr
R59919:59919 Imp <> Y def
R59941:59945 Smallstep CImp ::x_'::='_x not
R59940:59940 Imp <> X def
R59946:59950 Imp <> APlus constr
R59961:59964 Imp <> ANum constr
R59953:59955 Imp <> AId constr
R59957:59957 Imp <> X def
def 60054:60071 CImp par_loop_example_0
R60076:60082 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60086:60094 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60134:60141 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60103:60105 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60117:60123 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60128:60130 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60095:60102 Smallstep CImp par_loop def
R60106:60116 Imp <> empty_state def
R60124:60127 Smallstep CImp ::'SKIP' not
R60131:60133 Smallstep <> st' var
R60147:60149 Coq.Init.Logic <> :type_scope:x_'='_x not
R60142:60144 Smallstep <> st' var
R60146:60146 Imp <> X def
R60169:60176 Coq.Init.Logic <> ex_intro constr
R60169:60176 Coq.Init.Logic <> ex_intro constr
R60195:60202 Smallstep CImp par_loop def
R60214:60223 Smallstep CImp multi_step constr
R60214:60223 Smallstep CImp multi_step constr
R60232:60238 Smallstep CImp CS_Par1 constr
R60232:60238 Smallstep CImp CS_Par1 constr
R60252:60257 Smallstep CImp CS_Ass constr
R60252:60257 Smallstep CImp CS_Ass constr
R60269:60278 Smallstep CImp multi_step constr
R60269:60278 Smallstep CImp multi_step constr
R60287:60293 Smallstep CImp CS_Par2 constr
R60287:60293 Smallstep CImp CS_Par2 constr
R60302:60309 Smallstep CImp CS_While constr
R60302:60309 Smallstep CImp CS_While constr
R60321:60330 Smallstep CImp multi_step constr
R60321:60330 Smallstep CImp multi_step constr
R60339:60345 Smallstep CImp CS_Par2 constr
R60339:60345 Smallstep CImp CS_Par2 constr
R60354:60362 Smallstep CImp CS_IfStep constr
R60354:60362 Smallstep CImp CS_IfStep constr
R60376:60381 Smallstep CImp BS_Eq1 constr
R60376:60381 Smallstep CImp BS_Eq1 constr
R60390:60394 Smallstep CImp AS_Id constr
R60390:60394 Smallstep CImp AS_Id constr
R60406:60415 Smallstep CImp multi_step constr
R60406:60415 Smallstep CImp multi_step constr
R60424:60430 Smallstep CImp CS_Par2 constr
R60424:60430 Smallstep CImp CS_Par2 constr
R60439:60447 Smallstep CImp CS_IfStep constr
R60439:60447 Smallstep CImp CS_IfStep constr
R60461:60465 Smallstep CImp BS_Eq constr
R60461:60465 Smallstep CImp BS_Eq constr
R60485:60494 Smallstep CImp multi_step constr
R60485:60494 Smallstep CImp multi_step constr
R60503:60509 Smallstep CImp CS_Par2 constr
R60503:60509 Smallstep CImp CS_Par2 constr
R60518:60527 Smallstep CImp CS_IfFalse constr
R60518:60527 Smallstep CImp CS_IfFalse constr
R60540:60549 Smallstep CImp multi_step constr
R60540:60549 Smallstep CImp multi_step constr
R60558:60567 Smallstep CImp CS_ParDone constr
R60558:60567 Smallstep CImp CS_ParDone constr
R60580:60589 Smallstep CImp multi_refl constr
R60580:60589 Smallstep CImp multi_refl constr
def 60673:60690 CImp par_loop_example_2
R60695:60701 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60705:60713 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R60752:60759 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R60722:60724 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60736:60741 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60746:60748 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R60714:60721 Smallstep CImp par_loop def
R60725:60735 Imp <> empty_state def
R60742:60745 Smallstep CImp ::'SKIP' not
R60749:60751 Smallstep <> st' var
R60765:60767 Coq.Init.Logic <> :type_scope:x_'='_x not
R60760:60762 Smallstep <> st' var
R60764:60764 Imp <> X def
R60787:60794 Coq.Init.Logic <> ex_intro constr
R60787:60794 Coq.Init.Logic <> ex_intro constr
R60813:60822 Smallstep CImp multi_step constr
R60813:60822 Smallstep CImp multi_step constr
R60831:60837 Smallstep CImp CS_Par2 constr
R60831:60837 Smallstep CImp CS_Par2 constr
R60846:60853 Smallstep CImp CS_While constr
R60846:60853 Smallstep CImp CS_While constr
R60865:60874 Smallstep CImp multi_step constr
R60865:60874 Smallstep CImp multi_step constr
R60883:60889 Smallstep CImp CS_Par2 constr
R60883:60889 Smallstep CImp CS_Par2 constr
R60898:60906 Smallstep CImp CS_IfStep constr
R60898:60906 Smallstep CImp CS_IfStep constr
R60920:60925 Smallstep CImp BS_Eq1 constr
R60920:60925 Smallstep CImp BS_Eq1 constr
R60934:60938 Smallstep CImp AS_Id constr
R60934:60938 Smallstep CImp AS_Id constr
R60950:60959 Smallstep CImp multi_step constr
R60950:60959 Smallstep CImp multi_step constr
R60968:60974 Smallstep CImp CS_Par2 constr
R60968:60974 Smallstep CImp CS_Par2 constr
R60983:60991 Smallstep CImp CS_IfStep constr
R60983:60991 Smallstep CImp CS_IfStep constr
R61005:61009 Smallstep CImp BS_Eq constr
R61005:61009 Smallstep CImp BS_Eq constr
R61029:61038 Smallstep CImp multi_step constr
R61029:61038 Smallstep CImp multi_step constr
R61047:61053 Smallstep CImp CS_Par2 constr
R61047:61053 Smallstep CImp CS_Par2 constr
R61062:61070 Smallstep CImp CS_IfTrue constr
R61062:61070 Smallstep CImp CS_IfTrue constr
R61083:61092 Smallstep CImp multi_step constr
R61083:61092 Smallstep CImp multi_step constr
R61101:61107 Smallstep CImp CS_Par2 constr
R61101:61107 Smallstep CImp CS_Par2 constr
R61116:61125 Smallstep CImp CS_SeqStep constr
R61116:61125 Smallstep CImp CS_SeqStep constr
R61138:61147 Smallstep CImp CS_AssStep constr
R61138:61147 Smallstep CImp CS_AssStep constr
R61156:61163 Smallstep CImp AS_Plus1 constr
R61156:61163 Smallstep CImp AS_Plus1 constr
R61172:61176 Smallstep CImp AS_Id constr
R61172:61176 Smallstep CImp AS_Id constr
R61188:61197 Smallstep CImp multi_step constr
R61188:61197 Smallstep CImp multi_step constr
R61206:61212 Smallstep CImp CS_Par2 constr
R61206:61212 Smallstep CImp CS_Par2 constr
R61221:61230 Smallstep CImp CS_SeqStep constr
R61221:61230 Smallstep CImp CS_SeqStep constr
R61243:61252 Smallstep CImp CS_AssStep constr
R61243:61252 Smallstep CImp CS_AssStep constr
R61261:61267 Smallstep CImp AS_Plus constr
R61261:61267 Smallstep CImp AS_Plus constr
R61281:61290 Smallstep CImp multi_step constr
R61281:61290 Smallstep CImp multi_step constr
R61299:61305 Smallstep CImp CS_Par2 constr
R61299:61305 Smallstep CImp CS_Par2 constr
R61314:61323 Smallstep CImp CS_SeqStep constr
R61314:61323 Smallstep CImp CS_SeqStep constr
R61336:61341 Smallstep CImp CS_Ass constr
R61336:61341 Smallstep CImp CS_Ass constr
R61353:61362 Smallstep CImp multi_step constr
R61353:61362 Smallstep CImp multi_step constr
R61371:61377 Smallstep CImp CS_Par2 constr
R61371:61377 Smallstep CImp CS_Par2 constr
R61386:61397 Smallstep CImp CS_SeqFinish constr
R61386:61397 Smallstep CImp CS_SeqFinish constr
R61410:61419 Smallstep CImp multi_step constr
R61410:61419 Smallstep CImp multi_step constr
R61428:61434 Smallstep CImp CS_Par2 constr
R61428:61434 Smallstep CImp CS_Par2 constr
R61443:61450 Smallstep CImp CS_While constr
R61443:61450 Smallstep CImp CS_While constr
R61462:61471 Smallstep CImp multi_step constr
R61462:61471 Smallstep CImp multi_step constr
R61480:61486 Smallstep CImp CS_Par2 constr
R61480:61486 Smallstep CImp CS_Par2 constr
R61495:61503 Smallstep CImp CS_IfStep constr
R61495:61503 Smallstep CImp CS_IfStep constr
R61517:61522 Smallstep CImp BS_Eq1 constr
R61517:61522 Smallstep CImp BS_Eq1 constr
R61531:61535 Smallstep CImp AS_Id constr
R61531:61535 Smallstep CImp AS_Id constr
R61547:61556 Smallstep CImp multi_step constr
R61547:61556 Smallstep CImp multi_step constr
R61565:61571 Smallstep CImp CS_Par2 constr
R61565:61571 Smallstep CImp CS_Par2 constr
R61580:61588 Smallstep CImp CS_IfStep constr
R61580:61588 Smallstep CImp CS_IfStep constr
R61602:61606 Smallstep CImp BS_Eq constr
R61602:61606 Smallstep CImp BS_Eq constr
R61626:61635 Smallstep CImp multi_step constr
R61626:61635 Smallstep CImp multi_step constr
R61644:61650 Smallstep CImp CS_Par2 constr
R61644:61650 Smallstep CImp CS_Par2 constr
R61659:61667 Smallstep CImp CS_IfTrue constr
R61659:61667 Smallstep CImp CS_IfTrue constr
R61680:61689 Smallstep CImp multi_step constr
R61680:61689 Smallstep CImp multi_step constr
R61698:61704 Smallstep CImp CS_Par2 constr
R61698:61704 Smallstep CImp CS_Par2 constr
R61713:61722 Smallstep CImp CS_SeqStep constr
R61713:61722 Smallstep CImp CS_SeqStep constr
R61735:61744 Smallstep CImp CS_AssStep constr
R61735:61744 Smallstep CImp CS_AssStep constr
R61753:61760 Smallstep CImp AS_Plus1 constr
R61753:61760 Smallstep CImp AS_Plus1 constr
R61769:61773 Smallstep CImp AS_Id constr
R61769:61773 Smallstep CImp AS_Id constr
R61785:61794 Smallstep CImp multi_step constr
R61785:61794 Smallstep CImp multi_step constr
R61803:61809 Smallstep CImp CS_Par2 constr
R61803:61809 Smallstep CImp CS_Par2 constr
R61818:61827 Smallstep CImp CS_SeqStep constr
R61818:61827 Smallstep CImp CS_SeqStep constr
R61840:61849 Smallstep CImp CS_AssStep constr
R61840:61849 Smallstep CImp CS_AssStep constr
R61858:61864 Smallstep CImp AS_Plus constr
R61858:61864 Smallstep CImp AS_Plus constr
R61878:61887 Smallstep CImp multi_step constr
R61878:61887 Smallstep CImp multi_step constr
R61896:61902 Smallstep CImp CS_Par2 constr
R61896:61902 Smallstep CImp CS_Par2 constr
R61911:61920 Smallstep CImp CS_SeqStep constr
R61911:61920 Smallstep CImp CS_SeqStep constr
R61933:61938 Smallstep CImp CS_Ass constr
R61933:61938 Smallstep CImp CS_Ass constr
R61951:61960 Smallstep CImp multi_step constr
R61951:61960 Smallstep CImp multi_step constr
R61969:61975 Smallstep CImp CS_Par1 constr
R61969:61975 Smallstep CImp CS_Par1 constr
R61984:61989 Smallstep CImp CS_Ass constr
R61984:61989 Smallstep CImp CS_Ass constr
R62001:62010 Smallstep CImp multi_step constr
R62001:62010 Smallstep CImp multi_step constr
R62019:62025 Smallstep CImp CS_Par2 constr
R62019:62025 Smallstep CImp CS_Par2 constr
R62034:62045 Smallstep CImp CS_SeqFinish constr
R62034:62045 Smallstep CImp CS_SeqFinish constr
R62057:62066 Smallstep CImp multi_step constr
R62057:62066 Smallstep CImp multi_step constr
R62075:62081 Smallstep CImp CS_Par2 constr
R62075:62081 Smallstep CImp CS_Par2 constr
R62090:62097 Smallstep CImp CS_While constr
R62090:62097 Smallstep CImp CS_While constr
R62109:62118 Smallstep CImp multi_step constr
R62109:62118 Smallstep CImp multi_step constr
R62127:62133 Smallstep CImp CS_Par2 constr
R62127:62133 Smallstep CImp CS_Par2 constr
R62142:62150 Smallstep CImp CS_IfStep constr
R62142:62150 Smallstep CImp CS_IfStep constr
R62164:62169 Smallstep CImp BS_Eq1 constr
R62164:62169 Smallstep CImp BS_Eq1 constr
R62178:62182 Smallstep CImp AS_Id constr
R62178:62182 Smallstep CImp AS_Id constr
R62194:62203 Smallstep CImp multi_step constr
R62194:62203 Smallstep CImp multi_step constr
R62212:62218 Smallstep CImp CS_Par2 constr
R62212:62218 Smallstep CImp CS_Par2 constr
R62227:62235 Smallstep CImp CS_IfStep constr
R62227:62235 Smallstep CImp CS_IfStep constr
R62249:62253 Smallstep CImp BS_Eq constr
R62249:62253 Smallstep CImp BS_Eq constr
R62273:62282 Smallstep CImp multi_step constr
R62273:62282 Smallstep CImp multi_step constr
R62291:62297 Smallstep CImp CS_Par2 constr
R62291:62297 Smallstep CImp CS_Par2 constr
R62306:62315 Smallstep CImp CS_IfFalse constr
R62306:62315 Smallstep CImp CS_IfFalse constr
R62328:62337 Smallstep CImp multi_step constr
R62328:62337 Smallstep CImp multi_step constr
R62346:62355 Smallstep CImp CS_ParDone constr
R62346:62355 Smallstep CImp CS_ParDone constr
R62368:62377 Smallstep CImp multi_refl constr
R62368:62377 Smallstep CImp multi_refl constr
prf 62475:62488 CImp par_body_n__Sn
R62541:62543 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R62546:62551 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R62560:62563 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R62581:62581 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R62533:62540 Smallstep CImp par_loop def
R62544:62545 Smallstep <> st var
R62552:62559 Smallstep CImp par_loop def
R62564:62569 Imp <> update def
R62577:62577 Coq.Init.Datatypes <> S constr
R62579:62579 Smallstep <> n var
R62574:62574 Imp <> X def
R62571:62572 Smallstep <> st var
R62515:62518 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R62511:62513 Coq.Init.Logic <> :type_scope:x_'='_x not
R62507:62508 Smallstep <> st var
R62510:62510 Imp <> X def
R62514:62514 Smallstep <> n var
R62523:62525 Coq.Init.Logic <> :type_scope:x_'='_x not
R62519:62520 Smallstep <> st var
R62522:62522 Imp <> Y def
R62641:62650 Smallstep CImp multi_step constr
R62641:62650 Smallstep CImp multi_step constr
R62659:62665 Smallstep CImp CS_Par2 constr
R62659:62665 Smallstep CImp CS_Par2 constr
R62674:62681 Smallstep CImp CS_While constr
R62674:62681 Smallstep CImp CS_While constr
R62693:62702 Smallstep CImp multi_step constr
R62693:62702 Smallstep CImp multi_step constr
R62711:62717 Smallstep CImp CS_Par2 constr
R62711:62717 Smallstep CImp CS_Par2 constr
R62726:62734 Smallstep CImp CS_IfStep constr
R62726:62734 Smallstep CImp CS_IfStep constr
R62747:62752 Smallstep CImp BS_Eq1 constr
R62747:62752 Smallstep CImp BS_Eq1 constr
R62761:62765 Smallstep CImp AS_Id constr
R62761:62765 Smallstep CImp AS_Id constr
R62789:62798 Smallstep CImp multi_step constr
R62789:62798 Smallstep CImp multi_step constr
R62807:62813 Smallstep CImp CS_Par2 constr
R62807:62813 Smallstep CImp CS_Par2 constr
R62822:62830 Smallstep CImp CS_IfStep constr
R62822:62830 Smallstep CImp CS_IfStep constr
R62843:62847 Smallstep CImp BS_Eq constr
R62843:62847 Smallstep CImp BS_Eq constr
R62859:62868 Smallstep CImp multi_step constr
R62859:62868 Smallstep CImp multi_step constr
R62877:62883 Smallstep CImp CS_Par2 constr
R62877:62883 Smallstep CImp CS_Par2 constr
R62892:62900 Smallstep CImp CS_IfTrue constr
R62892:62900 Smallstep CImp CS_IfTrue constr
R62912:62921 Smallstep CImp multi_step constr
R62912:62921 Smallstep CImp multi_step constr
R62930:62936 Smallstep CImp CS_Par2 constr
R62930:62936 Smallstep CImp CS_Par2 constr
R62945:62954 Smallstep CImp CS_SeqStep constr
R62945:62954 Smallstep CImp CS_SeqStep constr
R62967:62976 Smallstep CImp CS_AssStep constr
R62967:62976 Smallstep CImp CS_AssStep constr
R62985:62992 Smallstep CImp AS_Plus1 constr
R62985:62992 Smallstep CImp AS_Plus1 constr
R63001:63005 Smallstep CImp AS_Id constr
R63001:63005 Smallstep CImp AS_Id constr
R63029:63038 Smallstep CImp multi_step constr
R63029:63038 Smallstep CImp multi_step constr
R63047:63053 Smallstep CImp CS_Par2 constr
R63047:63053 Smallstep CImp CS_Par2 constr
R63062:63071 Smallstep CImp CS_SeqStep constr
R63062:63071 Smallstep CImp CS_SeqStep constr
R63084:63093 Smallstep CImp CS_AssStep constr
R63084:63093 Smallstep CImp CS_AssStep constr
R63102:63108 Smallstep CImp AS_Plus constr
R63102:63108 Smallstep CImp AS_Plus constr
R63120:63129 Smallstep CImp multi_step constr
R63120:63129 Smallstep CImp multi_step constr
R63138:63144 Smallstep CImp CS_Par2 constr
R63138:63144 Smallstep CImp CS_Par2 constr
R63153:63162 Smallstep CImp CS_SeqStep constr
R63153:63162 Smallstep CImp CS_SeqStep constr
R63172:63177 Smallstep CImp CS_Ass constr
R63172:63177 Smallstep CImp CS_Ass constr
R63190:63190 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R63200:63200 Coq.Init.Datatypes <> S constr
R63200:63200 Coq.Init.Datatypes <> S constr
R63190:63190 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R63225:63234 Smallstep CImp multi_step constr
R63225:63234 Smallstep CImp multi_step constr
R63243:63249 Smallstep CImp CS_Par2 constr
R63243:63249 Smallstep CImp CS_Par2 constr
R63258:63269 Smallstep CImp CS_SeqFinish constr
R63258:63269 Smallstep CImp CS_SeqFinish constr
R63280:63289 Smallstep CImp multi_refl constr
R63280:63289 Smallstep CImp multi_refl constr
prf 63354:63363 CImp par_body_n
R63408:63414 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63418:63423 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63458:63461 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63432:63434 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R63437:63443 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R63452:63454 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R63424:63431 Smallstep CImp par_loop def
R63435:63436 Smallstep <> st var
R63444:63451 Smallstep CImp par_loop def
R63455:63457 Smallstep <> st' var
R63471:63474 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63467:63469 Coq.Init.Logic <> :type_scope:x_'='_x not
R63462:63464 Smallstep <> st' var
R63466:63466 Imp <> X def
R63470:63470 Smallstep <> n var
R63480:63482 Coq.Init.Logic <> :type_scope:x_'='_x not
R63475:63477 Smallstep <> st' var
R63479:63479 Imp <> Y def
R63390:63393 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63386:63388 Coq.Init.Logic <> :type_scope:x_'='_x not
R63382:63383 Smallstep <> st var
R63385:63385 Imp <> X def
R63398:63400 Coq.Init.Logic <> :type_scope:x_'='_x not
R63394:63395 Smallstep <> st var
R63397:63397 Imp <> Y def
R63601:63610 Smallstep CImp multi_refl constr
R63601:63610 Smallstep CImp multi_refl constr
R63723:63728 Imp <> update def
R63737:63737 Coq.Init.Datatypes <> S constr
R63734:63734 Imp <> X def
R63723:63728 Imp <> update def
R63737:63737 Coq.Init.Datatypes <> S constr
R63734:63734 Imp <> X def
R63779:63779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63788:63789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63793:63793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63780:63787 Smallstep CImp par_loop def
R63762:63772 Smallstep CImp multi_trans thm
R63779:63779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63788:63789 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63793:63793 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R63780:63787 Smallstep CImp par_loop def
R63762:63772 Smallstep CImp multi_trans thm
R63828:63841 Smallstep CImp par_body_n__Sn thm
R63828:63841 Smallstep CImp par_body_n__Sn thm
R63894:63899 Imp <> update def
prf 64023:64036 CImp par_loop_any_X
R64051:64057 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R64061:64066 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R64106:64113 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R64075:64077 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R64089:64095 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R64100:64102 Smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R64067:64074 Smallstep CImp par_loop def
R64078:64088 Imp <> empty_state def
R64096:64099 Smallstep CImp ::'SKIP' not
R64103:64105 Smallstep <> st' var
R64119:64121 Coq.Init.Logic <> :type_scope:x_'='_x not
R64114:64116 Smallstep <> st' var
R64118:64118 Imp <> X def
R64122:64122 Smallstep <> n var
R64157:64166 Smallstep CImp par_body_n thm
R64170:64180 Imp <> empty_state def
R64157:64166 Smallstep CImp par_body_n thm
R64170:64180 Imp <> empty_state def
R64203:64208 Imp <> update def
R64296:64301 Imp <> update def
R64306:64306 Imp <> Y def
R64296:64301 Imp <> update def
R64306:64306 Imp <> Y def
R64345:64345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64354:64354 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64357:64357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64346:64353 Smallstep CImp par_loop def
R64328:64338 Smallstep CImp multi_trans thm
R64345:64345 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64354:64354 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64357:64357 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R64346:64353 Smallstep CImp par_loop def
R64328:64338 Smallstep CImp multi_trans thm
R64380:64389 Smallstep CImp multi_step constr
R64380:64389 Smallstep CImp multi_step constr
R64398:64404 Smallstep CImp CS_Par1 constr
R64398:64404 Smallstep CImp CS_Par1 constr
R64413:64418 Smallstep CImp CS_Ass constr
R64413:64418 Smallstep CImp CS_Ass constr
R64430:64439 Smallstep CImp multi_step constr
R64430:64439 Smallstep CImp multi_step constr
R64448:64454 Smallstep CImp CS_Par2 constr
R64448:64454 Smallstep CImp CS_Par2 constr
R64463:64470 Smallstep CImp CS_While constr
R64463:64470 Smallstep CImp CS_While constr
R64482:64491 Smallstep CImp multi_step constr
R64482:64491 Smallstep CImp multi_step constr
R64500:64506 Smallstep CImp CS_Par2 constr
R64500:64506 Smallstep CImp CS_Par2 constr
R64515:64523 Smallstep CImp CS_IfStep constr
R64515:64523 Smallstep CImp CS_IfStep constr
R64536:64541 Smallstep CImp BS_Eq1 constr
R64536:64541 Smallstep CImp BS_Eq1 constr
R64550:64554 Smallstep CImp AS_Id constr
R64550:64554 Smallstep CImp AS_Id constr
R64565:64573 Imp <> update_eq thm
R64565:64573 Imp <> update_eq thm
R64585:64594 Smallstep CImp multi_step constr
R64585:64594 Smallstep CImp multi_step constr
R64603:64609 Smallstep CImp CS_Par2 constr
R64603:64609 Smallstep CImp CS_Par2 constr
R64618:64626 Smallstep CImp CS_IfStep constr
R64618:64626 Smallstep CImp CS_IfStep constr
R64639:64643 Smallstep CImp BS_Eq constr
R64639:64643 Smallstep CImp BS_Eq constr
R64662:64671 Smallstep CImp multi_step constr
R64662:64671 Smallstep CImp multi_step constr
R64680:64686 Smallstep CImp CS_Par2 constr
R64680:64686 Smallstep CImp CS_Par2 constr
R64695:64704 Smallstep CImp CS_IfFalse constr
R64695:64704 Smallstep CImp CS_IfFalse constr
R64716:64725 Smallstep CImp multi_step constr
R64716:64725 Smallstep CImp multi_step constr
R64734:64743 Smallstep CImp CS_ParDone constr
R64734:64743 Smallstep CImp CS_ParDone constr
R64754:64763 Smallstep CImp multi_refl constr
R64754:64763 Smallstep CImp multi_refl constr
R64777:64786 Imp <> update_neq thm
R64777:64786 Imp <> update_neq thm
R64824:64827 Smallstep <> <> mod
def 65036:65040 <> stack
R65045:65048 Coq.Init.Datatypes <> list ind
R65050:65052 Coq.Init.Datatypes <> nat ind
def 65066:65069 <> prog
R65075:65078 Coq.Init.Datatypes <> list ind
R65080:65085 Imp <> sinstr ind
ind 65099:65108 <> stack_step
constr 65165:65171 <> SS_Push
constr 65258:65264 <> SS_Load
constr 65354:65360 <> SS_Plus
constr 65451:65458 <> SS_Minus
constr 65549:65555 <> SS_Mult
R65141:65143 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R65137:65140 Smallstep <> prog def
R65144:65148 Smallstep <> stack def
R65125:65127 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R65121:65124 Smallstep <> prog def
R65128:65132 Smallstep <> stack def
R65112:65116 Imp <> state def
R65199:65208 Smallstep <> stack_step ind
R65239:65239 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65242:65243 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65252:65252 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65240:65241 Smallstep <> p' var
R65245:65248 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65244:65244 Smallstep <> n var
R65249:65251 Smallstep <> stk var
R65213:65213 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65227:65228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65232:65232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65221:65224 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65214:65218 Imp <> SPush constr
R65220:65220 Smallstep <> n var
R65225:65226 Smallstep <> p' var
R65229:65231 Smallstep <> stk var
R65210:65211 Smallstep <> st var
R65292:65301 Smallstep <> stack_step ind
R65332:65332 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65335:65336 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65348:65348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65333:65334 Smallstep <> p' var
R65341:65344 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65337:65338 Smallstep <> st var
R65340:65340 Smallstep <> i var
R65345:65347 Smallstep <> stk var
R65306:65306 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65320:65321 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65325:65325 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65314:65317 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65307:65311 Imp <> SLoad constr
R65313:65313 Smallstep <> i var
R65318:65319 Smallstep <> p' var
R65322:65324 Smallstep <> stk var
R65303:65304 Smallstep <> st var
R65390:65399 Smallstep <> stack_step ind
R65430:65430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65433:65434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65445:65445 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65431:65432 Smallstep <> p' var
R65435:65435 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65439:65441 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65437:65437 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R65436:65436 Smallstep <> m var
R65438:65438 Smallstep <> n var
R65442:65444 Smallstep <> stk var
R65404:65404 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65416:65417 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65427:65427 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65410:65413 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65405:65409 Imp <> SPlus constr
R65414:65415 Smallstep <> p' var
R65419:65420 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65418:65418 Smallstep <> n var
R65422:65423 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65421:65421 Smallstep <> m var
R65424:65426 Smallstep <> stk var
R65401:65402 Smallstep <> st var
R65488:65497 Smallstep <> stack_step ind
R65528:65528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65531:65532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65543:65543 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65529:65530 Smallstep <> p' var
R65533:65533 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65537:65539 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65535:65535 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R65534:65534 Smallstep <> m var
R65536:65536 Smallstep <> n var
R65540:65542 Smallstep <> stk var
R65502:65502 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65515:65516 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65526:65526 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65509:65512 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65503:65508 Imp <> SMinus constr
R65513:65514 Smallstep <> p' var
R65518:65519 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65517:65517 Smallstep <> n var
R65521:65522 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65520:65520 Smallstep <> m var
R65523:65525 Smallstep <> stk var
R65499:65500 Smallstep <> st var
R65585:65594 Smallstep <> stack_step ind
R65625:65625 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65628:65629 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65640:65640 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65626:65627 Smallstep <> p' var
R65630:65630 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65634:65636 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65632:65632 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R65631:65631 Smallstep <> m var
R65633:65633 Smallstep <> n var
R65637:65639 Smallstep <> stk var
R65599:65599 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65611:65612 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65622:65622 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R65605:65608 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65600:65604 Imp <> SMult constr
R65609:65610 Smallstep <> p' var
R65614:65615 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65613:65613 Smallstep <> n var
R65617:65618 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R65616:65616 Smallstep <> m var
R65619:65621 Smallstep <> stk var
R65596:65597 Smallstep <> st var
prf 65652:65675 <> stack_step_deterministic
R65693:65705 SfLib <> deterministic def
R65708:65717 Smallstep <> stack_step ind
R65719:65720 Smallstep <> st var
R65740:65752 SfLib <> deterministic def
def 65840:65854 <> stack_multistep
R65862:65866 Smallstep <> multi ind
R65869:65878 Smallstep <> stack_step ind
R65880:65881 Smallstep <> st var
def 66258:66286 <> compiler_is_correct_statement
R66328:66332 Imp <> state def
R66340:66343 Imp <> aexp ind
R66349:66363 Smallstep <> stack_multistep def
R66386:66386 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66389:66390 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66405:66405 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66387:66388 SfLib <> ::'['_']' not
R66391:66392 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66403:66404 SfLib <> ::'['_x_','_'..'_','_x_']' not
R66393:66397 Imp <> aeval def
R66402:66402 Smallstep <> e var
R66399:66400 Smallstep <> st var
R66368:66368 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66380:66381 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66384:66384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66369:66377 Imp <> s_compile def
R66379:66379 Smallstep <> e var
R66382:66383 SfLib <> ::'['_']' not
R66365:66366 Smallstep <> st var
prf 66418:66430 <> s_compile_aux
R66446:66449 Imp <> aexp ind
R66456:66459 Smallstep <> prog def
R66468:66472 Imp <> state def
R66483:66487 Smallstep <> stack def
R66493:66507 Smallstep <> stack_multistep def
R66537:66537 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66539:66540 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66559:66559 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66538:66538 Smallstep <> t var
R66551:66554 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R66541:66545 Imp <> aeval def
R66550:66550 Smallstep <> e var
R66547:66548 Smallstep <> st var
R66555:66558 Smallstep <> stk1 var
R66512:66512 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66529:66530 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66535:66535 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R66524:66527 SfLib <> ::x_'++'_x not
R66513:66521 Imp <> s_compile def
R66523:66523 Smallstep <> e var
R66528:66528 Smallstep <> t var
R66531:66534 Smallstep <> stk1 var
R66509:66510 Smallstep <> st var
prf 66588:66606 <> compiler_is_correct
R66610:66638 Smallstep <> compiler_is_correct_statement def
R66673:66701 Smallstep <> compiler_is_correct_statement def
R66730:66738 Coq.Lists.List <> app_nil_r thm
R66741:66749 Imp <> s_compile def
R66730:66738 Coq.Lists.List <> app_nil_r thm
R66741:66749 Imp <> s_compile def
R66765:66777 Smallstep <> s_compile_aux prfax
R66765:66777 Smallstep <> s_compile_aux prfax
